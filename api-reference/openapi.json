{
	"openapi": "3.0.0",
	"info": {
		"title": "lemlist",
		"version": "1.0.0",
		"description": "Welcome to the lemlist Developer Documentation.\n\nlemlist is very customizable and open. You'll find on this page all the API and integration you can do with lemlist.\n\n# Rate Limit\n\nlemlist's API rate limits requests in order to prevent abuse and overload of our services.  \nRate limits are applied on all routes and per api key performing the request.  \nThe rate limits are **20** requests per **2** seconds.  \nThe response provide any information you may need about it:\n\n| Header | Description |\n| --- | --- |\n| Retry-After | The number of second in which you can retry |\n| X-RateLimit-Limit | The maximum requests in that time |\n| X-RateLimit-Remaining | The number of remaining requests you can make |\n| X-RateLimit-Reset | The date when the rate limit will reset |\n\n_Example of values for the rate limit headers_\n\n``` json\n{\n    \"Retry-After\": 2,\n    \"X-RateLimit-Limit\": 20,\n    \"X-RateLimit-Remaining\": 7,\n    \"Retry-After\" : \"Tue Feb 16 2021 09:02:42 GMT+0100 (Central European Standard Time)\"\n}\n\n ```\n\n# Definitions\n\n## Team\n\nA team is the entity of lemlist that can handle users and billing.\n\n## Credits\n\nCredits are the coins a team uses to enrich emails, linkedIn url, etc via the route enrich. Each enrichment feature needs a certain amount of credit to run.\n\n## User\n\nYou use A user account to connect to lemlist and send messages via the connected emails or linkedIn account.\n\n## Campaigns\n\nIs the entity to automate the outreach, a campaign has multiple sequences composed of steps.\n\n## Lead\n\nA lead is a person that you try to contact via a Campaign.\n\n## Activities\n\nIs the history of all the steps\n\n## Unsubscribe\n\nUnsubscribe is when a person decides they don't want to receive emails from you anymore.\n\n# Authentication\n\nAll API routes are using the dedicated sub domain `api.lemlist.com`.\n\nlemlist uses API keys to allow access to the API. You can get your lemlist API key at our [integration page](https://app.lemlist.com/settings/integrations).\n\nYou need to add the `Authorization` header using the `Basic` authentication type. `login:password` **where the login is always empty and the password is the API key**.\n\nOr pass your API key as a query parameter `access_token`\n\n⚠️ **Don't forget to add the semicolon (**`:`**) before your API key in curl command.**\n\n> To authorize, use this code: \n  \n\n``` shell\ncurl https://api.lemlist.com/api/team \\\n  --user \":YourApiKey\"\n\n ```\n\n> Or \n  \n\n``` shell\ncurl https://api.lemlist.com/api/team?access_token=YourApiKey\n\n ```\n\n**Make sure to replace** **`YourApiKey`** **with your API key.**\n\n# Give feedback\n\nIf you want to report a bug, ask for data or share with us a usecase please fill this [form. ](https://lemlist.typeform.com/to/mfVlkyGf) It will help us centralize your needs!"
	},
	"servers": [
		{
			"url": "https://api.lemlist.com/api"
		}
	],
	"paths": {
		"/team": {
			"parameters": [],
			"get": {
				"summary": "Get team",
				"tags": [
					"Team"
				],
				"parameters": [
					{
						"name": "Content-Type",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"userIds": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"createdBy": {
											"type": "string"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										},
										"hooks": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"_id": {
														"type": "string"
													},
													"targetUrl": {
														"type": "string",
														"format": "uri"
													},
													"createdAt": {
														"type": "string",
														"format": "date-time"
													},
													"zapId": {
														"type": "integer"
													},
													"type": {
														"type": "string"
													},
													"campaignId": {
														"type": "string"
													}
												}
											}
										},
										"beta": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"slackWebhook": {
											"type": "string",
											"format": "uri"
										},
										"invitedUsers": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"email": {
														"type": "string",
														"format": "email"
													},
													"role": {
														"type": "string"
													},
													"invitedBy": {
														"type": "string"
													},
													"invitedAt": {
														"type": "string",
														"format": "date-time"
													}
												}
											}
										},
										"agency": {
											"type": "string"
										},
										"pictureId": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "tea_c123fg5h8ijKL9noP",
									"name": "lemlist-admin",
									"userIds": [
										"usr_V7dQtF3sBnOv6LY5w",
										"usr_P5jMxR2yZhLt8BC4t",
										"usr_K2gTwJ7vXpRs3NF8p"
									],
									"createdBy": "usr_H8wrBoV4mtQx2NP6k",
									"createdAt": "2018-02-22T08:52:30.732Z",
									"hooks": [
										{
											"_id": "hoo_3JKlmnOp7qrStuvWx",
											"targetUrl": "https://hooks.zapier.com/hooks/standard/*your-webhook-id*/",
											"createdAt": "2020-04-07T09:12:34.674Z",
											"zapId": 83355551,
											"type": "emailsOpened",
											"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
										},
										{
											"_id": "hoo_4LMnopQr8stUvWxYz",
											"targetUrl": "https://hooks.zapier.com/hooks/standard/*your-webhook-id*/",
											"createdAt": "2020-05-05T09:58:17.795Z",
											"zapId": 86330503,
											"type": "emailsOpened",
											"campaignId": "cam_K9L8M7N6O5P4Q3R2S1"
										}
									],
									"beta": [
										"scroll"
									],
									"slackWebhook": "https://hooks.slack.com/services/REDACTED/REDACTED/REDACTED",
									"invitedUsers": [
										{
											"email": "emily.johnson@example.com",
											"role": "admin",
											"invitedBy": "usr_A1xPwN8zYkGt9JD3q",
											"invitedAt": "2023-11-22T14:14:04.617Z"
										},
										{
											"email": "david.wilson@example.com",
											"role": "member",
											"invitedBy": "usr_L9mKrU5vWpHt2ZX1r",
											"invitedAt": "2024-04-03T21:55:08.105Z"
										}
									],
									"agency": "usr_H8wrBoV4mtQx2NP6k",
									"pictureId": "fil_AaBbCcDdEeFfGgHhI8.png"
								}
							}
						}
					},
					"401": {
						"headers": {},
						"description": "Unauthorized"
					}
				}
			}
		},
		"/team/senders": {
			"parameters": [],
			"get": {
				"summary": "Get Senders",
				"tags": [
					"Team"
				],
				"parameters": [
					{
						"name": "state",
						"in": "query",
						"required": false,
						"description": "(Optional) Filter by campaign's state (running, paused, draft, ended, archived, errors)",
						"example": "running",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"userId": {
												"type": "string"
											},
											"campaigns": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"_id": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"status": {
															"type": "string"
														},
														"sendingChannels": {
															"type": "array",
															"items": {
																"type": "string"
															}
														}
													}
												}
											}
										}
									}
								},
								"example": [
									{
										"userId": "usr_T3dhQkG8xzCv4MU1e",
										"campaigns": [
											{
												"_id": "cam_A1B2C3D4E5F6G7H8I9",
												"name": "Insights Outreach 2024",
												"status": "draft",
												"sendingChannels": [
													"linkedinInvite",
													"linkedinVisit",
													"linkedinSend",
													"email"
												]
											},
											{
												"_id": "cam_K9L8M7N6O5P4Q3R2S1",
												"name": "Discover Solutions Campaign",
												"status": "ended",
												"sendingChannels": [
													"linkedinInvite",
													"email"
												]
											},
											{
												"_id": "cam_T3U4V5W6X7Y8Z9A1B2",
												"name": "Unlock Potential Initiative",
												"status": "running",
												"sendingChannels": [
													"linkedinInvite"
												]
											},
											{
												"_id": "cam_M5N4O3P2Q1R9S8T7U6",
												"name": "Future Innovations Outreach",
												"status": "paused",
												"sendingChannels": [
													"linkedinInvite",
													"email"
												]
											},
											{
												"_id": "cam_G6H7I8J9K0L1M2N3O4",
												"name": "Insightful Solutions Drive",
												"status": "ended",
												"sendingChannels": [
													"linkedinInvite",
													"linkedinVisit",
													"linkedinSend",
													"email"
												]
											}
										]
									},
									{
										"userId": "usr_L7vsBnX5ykPw2TA9r",
										"campaigns": [
											{
												"_id": "cam_K9L8M7N6O5P4Q3R2S1",
												"name": "Discover Solutions Campaign",
												"status": "ended",
												"sendingChannels": [
													"email"
												]
											},
											{
												"_id": "cam_T3U4V5W6X7Y8Z9A1B2",
												"name": "Unlock Potential Initiative",
												"status": "running",
												"sendingChannels": [
													"linkedinVisit"
												]
											},
											{
												"_id": "cam_M5N4O3P2Q1R9S8T7U6",
												"name": "Future Innovations Outreach",
												"status": "paused",
												"sendingChannels": [
													"email"
												]
											}
										]
									}
								]
							}
						}
					},
					"401": {
						"headers": {},
						"description": "Unauthorized"
					}
				}
			}
		},
		"/team/credits": {
			"parameters": [],
			"get": {
				"summary": "Credits",
				"tags": [
					"Team"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"credits": {
											"type": "integer"
										},
										"details": {
											"type": "object",
											"properties": {
												"remaining": {
													"type": "object",
													"properties": {
														"total": {
															"type": "integer"
														},
														"freemium": {
															"type": "integer"
														},
														"subscription": {
															"type": "integer"
														},
														"gifted": {
															"type": "integer"
														},
														"paid": {
															"type": "integer"
														}
													}
												}
											}
										}
									}
								},
								"example": {
									"credits": 100,
									"details": {
										"remaining": {
											"total": 100,
											"freemium": 0,
											"subscription": 80,
											"gifted": 10,
											"paid": 10
										}
									}
								}
							}
						}
					},
					"401": {
						"headers": {},
						"description": "Unauthorized"
					}
				}
			}
		},
		"/team/crmUsers": {
			"parameters": [],
			"get": {
				"summary": "Get Users CRMs",
				"tags": [
					"Team"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"userId": {
												"type": "string"
											},
											"crm": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"userId": "usr_h47tiJr87Zn7XtQHi",
										"crm": "salesforce"
									},
									{
										"userId": "usr_h47tiJr87Zn7XtQHi",
										"crm": "hubspot"
									},
									{
										"userId": "usr_h47tiJr87Zn7XtQHi",
										"crm": "pipedrive"
									}
								]
							}
						}
					},
					"401": {
						"headers": {},
						"description": "Unauthorized"
					}
				}
			}
		},
		"/users/{userId}": {
			"parameters": [
				{
					"name": "userId",
					"in": "path",
					"required": true,
					"example": "{{userId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Get user",
				"tags": [
					"Users"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"email": {
											"type": "string",
											"format": "email"
										},
										"role": {
											"type": "string"
										},
										"linkedIn": {
											"type": "object",
											"properties": {
												"status": {
													"type": "boolean"
												},
												"inviteLimit": {
													"type": "integer"
												},
												"sendLimit": {
													"type": "integer"
												},
												"visitLimit": {
													"type": "integer"
												}
											}
										},
										"mailboxes": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"_id": {
														"type": "string"
													},
													"email": {
														"type": "string",
														"format": "email"
													},
													"provider": {
														"type": "string"
													},
													"status": {
														"type": "string"
													},
													"lemlist": {
														"type": "object",
														"properties": {
															"emailLimit": {
																"type": "integer"
															}
														}
													},
													"lemwarm": {
														"type": "object",
														"properties": {
															"active": {
																"type": "boolean"
															}
														}
													}
												}
											}
										}
									}
								},
								"example": {
									"_id": "usr_QAucgYReK6EmMB3Cz",
									"email": "example@lempire.co",
									"role": "admin",
									"linkedIn": {
										"status": true,
										"inviteLimit": 25,
										"sendLimit": 33,
										"visitLimit": 36
									},
									"mailboxes": [
										{
											"_id": "usm_bsdepN6jb8zftK9Ns",
											"email": "example@gmail.com",
											"provider": "google",
											"status": "ERROR",
											"lemlist": {
												"emailLimit": 50
											},
											"lemwarm": {
												"active": false
											}
										},
										{
											"_id": "usm_gPKrqoNxaXxScTpPh",
											"email": "example@outlook.com",
											"status": "ERROR",
											"lemlist": {
												"emailLimit": 50
											},
											"lemwarm": {
												"active": false
											}
										}
									]
								}
							}
						}
					},
					"401": {
						"headers": {},
						"description": "Unauthorized"
					}
				}
			}
		},
		"/campaigns": {
			"parameters": [],
			"get": {
				"summary": "Retrieve All Campaigns",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"description": "(Optional) Offset from the start. For pagination.",
						"example": "24",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "(Optional) Number of campaigns to retrieve. 100 per default ( and 100 max ).",
						"example": "2",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "version",
						"in": "query",
						"required": false,
						"description": "(Optional) Set v2 to use last version",
						"example": "v2",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"description": "(Optional) Page to show",
						"example": "1",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"description": "(Optional): The field by which to sort the schedules. Currently, only \"createdAt\" is supported",
						"example": "createdAt",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sortOrder",
						"in": "query",
						"required": false,
						"description": "(Optional): The sort direction. Use \"desc\" for descending order; any other value (or omission) will sort in ascending order",
						"example": "desc",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "status",
						"in": "query",
						"required": false,
						"description": "(Optional): the campaign status. Can be the following values : running, draft, archived, ended, paused, errors. Beware: a campaign can be in multiple status at one time (eg a paused campaign with errors)",
						"example": "running",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"_id": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"labels": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											},
											"createdBy": {
												"type": "string"
											},
											"status": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"_id": "cam_A1B2C3D4E5F6G7H8I9",
										"name": "Insights Outreach 2024",
										"labels": [
											"Insightful"
										],
										"createdAt": "2024-02-29T11:00:11.293Z",
										"createdBy": "usr_T3dhQkG8xzCv4MU1e",
										"status": "running"
									},
									{
										"_id": "cam_K9L8M7N6O5P4Q3R2S1",
										"name": "Discover Solutions Campaign",
										"labels": [
											"Solutions",
											"Future-Ready"
										],
										"createdAt": "2024-02-29T11:00:11.293Z",
										"createdBy": "usr_T3dhQkG8xzCv4MU1e",
										"archived": true,
										"status": "ended",
										"isEnded": true
									},
									{
										"_id": "cam_M5N4O3P2Q1R9S8T7U6",
										"name": "Future Innovations Outreach",
										"createdAt": "2024-02-15T09:00:15.272Z",
										"createdBy": "usr_T3dhQkG8xzCv4MU1e",
										"status": "paused"
									},
									{
										"_id": "cam_G6H7I8J9K0L1M2N3O4",
										"name": "Insightful Solutions Drive",
										"createdAt": "2024-01-25T13:00:11.293Z",
										"createdBy": "usr_T3dhQkG8xzCv4MU1e",
										"labels": [
											"Insightful",
											"Solutions"
										],
										"status": "draft",
										"hasError": true
									}
								]
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new campaign",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"sequenceId": {
											"type": "string"
										},
										"scheduleIds": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"teamId": {
											"type": "string"
										},
										"createdBy": {
											"type": "string"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										},
										"state": {
											"type": "string"
										},
										"scannedCount": {
											"type": "integer"
										},
										"reviewedCount": {
											"type": "integer"
										},
										"inSequenceLeadCount": {
											"type": "integer"
										},
										"variableKeys": {
											"type": "array",
											"items": {}
										},
										"senders": {
											"type": "array",
											"items": {}
										},
										"sendUsers": {
											"type": "array",
											"items": {}
										},
										"displayedVariableKeys": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"emoji": {
											"type": "string"
										},
										"stopOnEmailReplied": {
											"type": "boolean"
										},
										"crmOpportunitiesOnTask": {
											"type": "boolean"
										},
										"unsubscribe": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"crm": {
											"type": "string"
										},
										"crmUserId": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "cam_WN3M22c3gDs4eQDXN",
									"sequenceId": "seq_hPj7N88tCgpFYgtnj",
									"scheduleIds": [
										"skd_isFGZkjSsvJZ7CfRx"
									],
									"teamId": "tea_MtScZ2GexXzHXRdTr",
									"createdBy": "usr_XCQktNJNa79X5Tvnh",
									"createdAt": "2025-01-16T13:53:22.726Z",
									"state": "running",
									"scannedCount": 0,
									"reviewedCount": 0,
									"inSequenceLeadCount": 0,
									"variableKeys": [],
									"senders": [],
									"sendUsers": [],
									"displayedVariableKeys": [
										"companyName"
									],
									"emoji": "🚀",
									"stopOnEmailReplied": true,
									"crmOpportunitiesOnTask": true,
									"unsubscribe": "campaign",
									"name": "My new campaign",
									"crm": "hubspot",
									"crmUserId": "usr_BXJcMBSk7pwhdqAL2"
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									}
								}
							},
							"example": {
								"name": "{{name}}"
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Retrieve One Campaigns",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object"
								},
								"example": null
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Update campaign configuration",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"stopOnEmailReplied": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"name": "New campaign name",
									"stopOnEmailReplied": false
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"stopOnEmailReplied": {
										"type": "string"
									},
									"stopOnMeetingBooked": {
										"type": "string"
									},
									"stopOnLinkClicked": {
										"type": "string"
									},
									"leadsPausedByInterest": {
										"type": "string"
									},
									"opportunityReplied": {
										"type": "string"
									},
									"opportunityClicked": {
										"type": "string"
									},
									"autoLeadInterest": {
										"type": "string"
									},
									"disableTrackOpen": {
										"type": "string"
									},
									"disableTrackClick": {
										"type": "string"
									},
									"disableTrackReply": {
										"type": "string"
									},
									"stopOnLinkClickedFilter": {
										"type": "string"
									}
								}
							},
							"example": {
								"name": "{{name}}",
								"stopOnEmailReplied": "{{stopOnEmailReplied}}",
								"stopOnMeetingBooked": "{{stopOnMeetingBooked}}",
								"stopOnLinkClicked": "{{stopOnLinkClicked}}",
								"leadsPausedByInterest": "{{leadsPausedByInterest}}",
								"opportunityReplied": "{{opportunityReplied}}",
								"opportunityClicked": "{{opportunityClicked}}",
								"autoLeadInterest": "{{nautoLeadInterestame}}",
								"disableTrackOpen": "{{disableTrackOpen}}",
								"disableTrackClick": "{{disableTrackClick}}",
								"disableTrackReply": "{{disableTrackReply}}",
								"stopOnLinkClickedFilter": "{{stopOnLinkClickedFilter}}"
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/pause": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Pause a campaign",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"state": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "cam_A1B2C3D4E5F6G7H8I9",
									"state": "paused"
								}
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/export/start": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Start an Export Campaign Stats",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"id": {
											"type": "string"
										},
										"teamId": {
											"type": "string"
										},
										"campaignId": {
											"type": "string"
										},
										"campaignName": {
											"type": "string"
										},
										"status": {
											"type": "string"
										},
										"startedAt": {
											"type": "string",
											"format": "date-time"
										},
										"progressIndex": {
											"type": "integer"
										},
										"progressTime": {
											"type": "integer"
										},
										"progressLastStepDuration": {
											"type": "integer"
										},
										"progressType": {
											"type": "string"
										},
										"progress": {
											"type": "integer"
										},
										"total": {
											"type": "integer"
										}
									}
								},
								"example": {
									"_id": "axp_7dKLTwqpjxzR5vh2n",
									"id": "axp_7dKLTwqpjxzR5vh2n",
									"teamId": "tea_c123fg5h8ijKL9noP",
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9",
									"campaignName": "Insights Outreach 2024",
									"status": "pending",
									"startedAt": "2024-07-09T13:43:52.124Z",
									"progressIndex": 0,
									"progressTime": 1720532632124,
									"progressLastStepDuration": 0,
									"progressType": "starting",
									"progress": 0,
									"total": 0
								}
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/export/{exportId}/status": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "exportId",
					"in": "path",
					"required": true,
					"example": "{{exportId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Get Status Of Campaign Export",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Done",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"status": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"teamId": {
													"type": "string"
												},
												"campaignId": {
													"type": "string"
												},
												"campaignName": {
													"type": "string"
												},
												"status": {
													"type": "string"
												},
												"startedAt": {
													"type": "string",
													"format": "date-time"
												},
												"endedAt": {
													"type": "string",
													"format": "date-time"
												},
												"progressIndex": {
													"type": "integer"
												},
												"progressTime": {
													"type": "integer"
												},
												"progressLastStepDuration": {
													"type": "integer"
												},
												"progressType": {
													"type": "string"
												},
												"progress": {
													"type": "integer"
												},
												"total": {
													"type": "integer"
												},
												"url": {
													"type": "string",
													"format": "uri"
												}
											}
										}
									}
								},
								"example": {
									"ok": true,
									"status": {
										"id": "axp_7dKLTwqpjxzR5vh2n",
										"teamId": "tea_c123fg5h8ijKL9noP",
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9",
										"campaignName": "Insights Outreach 2024",
										"status": "done",
										"startedAt": "2020-01-01T00:00:00.000Z",
										"endedAt": "2020-01-01T00:00:00.000Z",
										"progressIndex": 6,
										"progressTime": 1639138959979,
										"progressLastStepDuration": 476,
										"progressType": "done",
										"progress": 0,
										"total": 0,
										"url": "https://api.lemlist.com/api/files/exports/fil_axp_7dKLTwqpjxzR5vh2n_insights_outreach_2024.csv"
									}
								}
							}
						}
					},
					"404": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"example": {
									"ok": false,
									"message": "Export with id axp_8bALQxunkwwC3yc9p not found"
								}
							}
						}
					}
				}
			}
		},
		"/campaigns/reports": {
			"parameters": [],
			"get": {
				"summary": "Reports",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "campaignIds",
						"in": "query",
						"required": false,
						"example": "{{campaignId}},{{campaignId}}",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"status": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string"
												},
												"teamId": {
													"type": "string"
												},
												"campaignId": {
													"type": "string"
												},
												"campaignName": {
													"type": "string"
												},
												"status": {
													"type": "string"
												},
												"startedAt": {
													"type": "string",
													"format": "date-time"
												},
												"endedAt": {
													"type": "string",
													"format": "date-time"
												},
												"progressIndex": {
													"type": "integer"
												},
												"progressTime": {
													"type": "integer"
												},
												"progressLastStepDuration": {
													"type": "integer"
												},
												"progressType": {
													"type": "string"
												},
												"progress": {
													"type": "integer"
												},
												"total": {
													"type": "integer"
												},
												"url": {
													"type": "string",
													"format": "uri"
												}
											}
										}
									}
								},
								"example": {
									"ok": true,
									"status": {
										"id": "axp_7dKLTwqpjxzR5vh2n",
										"teamId": "tea_c123fg5h8ijKL9noP",
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9",
										"campaignName": "Insights Outreach 2024",
										"status": "done",
										"startedAt": "2020-01-01T00:00:00.000Z",
										"endedAt": "2020-01-01T00:00:00.000Z",
										"progressIndex": 6,
										"progressTime": 1639138959979,
										"progressLastStepDuration": 476,
										"progressType": "done",
										"progress": 0,
										"total": 0,
										"url": "https://api.lemlist.com/api/files/exports/fil_axp_7dKLTwqpjxzR5vh2n_insights_outreach_2024.csv"
									}
								}
							}
						}
					},
					"404": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"example": {
									"ok": false,
									"message": "Export with id axp_8bALQxunkwwC3yc9p not found"
								}
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/export/{exportId}/email/{email}": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "exportId",
					"in": "path",
					"required": true,
					"example": "{{exportId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "email",
					"in": "path",
					"required": true,
					"example": "{{email}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"put": {
				"summary": "Export Campaign Send Status By Email",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"status": {
											"type": "object",
											"properties": {
												"_id": {
													"type": "string"
												},
												"id": {
													"type": "string"
												},
												"teamId": {
													"type": "string"
												},
												"campaignId": {
													"type": "string"
												},
												"campaignName": {
													"type": "string"
												},
												"status": {
													"type": "string"
												},
												"startedAt": {
													"type": "string",
													"format": "date-time"
												},
												"progressIndex": {
													"type": "integer"
												},
												"progressTime": {
													"type": "integer"
												},
												"progressLastStepDuration": {
													"type": "integer"
												},
												"progressType": {
													"type": "string"
												},
												"progress": {
													"type": "integer"
												},
												"total": {
													"type": "integer"
												},
												"fileSize": {
													"type": "integer"
												},
												"endedAt": {
													"type": "string",
													"format": "date-time"
												},
												"url": {
													"type": "string",
													"format": "uri"
												},
												"email": {
													"type": "string",
													"format": "email"
												}
											}
										}
									}
								},
								"example": {
									"ok": true,
									"status": {
										"_id": "axp_7dKLTwqpjxzR5vh2n",
										"id": "axp_7dKLTwqpjxzR5vh2n",
										"teamId": "tea_c123fg5h8ijKL9noP",
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9",
										"campaignName": "Insights Outreach 2024",
										"status": "done",
										"startedAt": "2024-07-11T09:49:15.278Z",
										"progressIndex": 6,
										"progressTime": 1720691355497,
										"progressLastStepDuration": 0,
										"progressType": "done",
										"progress": 0,
										"total": 0,
										"fileSize": 654,
										"endedAt": "2024-07-11T09:49:15.497Z",
										"url": "https://api.lemlist.com/api/files/exports/fil_axp_7dKLTwqpjxzR5vh2n_insights_outreach_2024.csv",
										"email": "emily.johnson@example.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/export/leads": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Export Campaign Leads",
				"tags": [
					"Campaigns"
				],
				"parameters": [
					{
						"name": "state",
						"in": "query",
						"required": false,
						"description": "Filter to export only the specified lead's last states; 'all' will export all states.",
						"example": "all",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "format",
						"in": "query",
						"required": false,
						"description": "(Optional) Output format: json or csv",
						"example": "json",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Export Campaign Leads"
					}
				}
			}
		},
		"/campaigns/{campaignId}/sequences": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Retrieve campaign sequences",
				"tags": [
					"Sequences"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"seq_p9qaCXrptS8XcPPNK": {
											"type": "object",
											"properties": {
												"_id": {
													"type": "string"
												},
												"steps": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"_id": {
																"type": "string"
															},
															"type": {
																"type": "string"
															},
															"delay": {
																"type": "integer"
															},
															"emailTemplateId": {
																"type": "string"
															},
															"index": {
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														}
													}
												},
												"level": {
													"type": "integer"
												}
											}
										},
										"seq_jgBhmiQYyRd3gW8Sb": {
											"type": "object",
											"properties": {
												"_id": {
													"type": "string"
												},
												"parentId": {
													"type": "string"
												},
												"conditionalStepIndex": {
													"type": "integer"
												},
												"steps": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"_id": {
																"type": "string"
															},
															"type": {
																"type": "string"
															},
															"delay": {
																"type": "integer"
															},
															"emailTemplateId": {
																"type": "string"
															},
															"index": {
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														}
													}
												},
												"level": {
													"type": "integer"
												}
											}
										}
									}
								},
								"example": {
									"seq_p9qaCXrptS8XcPPNK": {
										"_id": "seq_p9qaCXrptS8XcPPNK",
										"steps": [
											{
												"_id": "stp_wHzzFZntP2FvJbeb6",
												"type": "linkedinInvite",
												"delay": 0,
												"emailTemplateId": "etp_5qsoi5kneNkakmPd5",
												"index": 1,
												"message": "Test invite message"
											},
											{
												"_id": "stp_EtKsaSW62vyFhMME4",
												"type": "conditional",
												"conditions": [
													{
														"sequenceId": "seq_jgBhmiQYyRd3gW8Sb",
														"label": "Accepted invite",
														"key": "linkedinInviteAccepted",
														"delay": 1,
														"delayType": "waitUntil"
													},
													{
														"sequenceId": "seq_ET4kSR3GAkcRqp2TE",
														"fallback": true
													}
												],
												"index": 2
											}
										],
										"level": 0
									},
									"seq_jgBhmiQYyRd3gW8Sb": {
										"_id": "seq_jgBhmiQYyRd3gW8Sb",
										"parentId": "seq_p9qaCXrptS8XcPPNK",
										"conditionalStepIndex": 1,
										"steps": [
											{
												"_id": "stp_vMqX4wgSmqMXd2env",
												"type": "linkedinSend",
												"delay": 1,
												"emailTemplateId": "etp_DJqHmozZtYz4JWyyB",
												"index": 3,
												"message": "Test message"
											}
										],
										"level": 1
									}
								}
							}
						}
					}
				}
			}
		},
		"/sequences/{sequenceId}/steps": {
			"parameters": [
				{
					"name": "sequenceId",
					"in": "path",
					"required": true,
					"example": "{{sequenceId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Add step to sequence",
				"tags": [
					"Sequences"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										},
										"delay": {
											"type": "integer"
										},
										"emailTemplateId": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "stp_Z2539g5BB4qCoZBgf",
									"type": "linkedinInvite",
									"delay": 2,
									"emailTemplateId": "etp_LWuaE5JG4Bm4riPf5",
									"message": "Hello, I would like...."
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object"
							},
							"example": {}
						}
					}
				}
			}
		},
		"/sequences/{sequenceId}/steps/{stepId}": {
			"parameters": [
				{
					"name": "sequenceId",
					"in": "path",
					"required": true,
					"example": "{{sequenceId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "stepId",
					"in": "path",
					"required": true,
					"example": "{{stepId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"patch": {
				"summary": "Update sequence step",
				"tags": [
					"Sequences"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										},
										"delay": {
											"type": "integer"
										},
										"emailTemplateId": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "stp_Z2539g5BB4qCoZBgf",
									"type": "linkedinInvite",
									"delay": 0,
									"emailTemplateId": "etp_xNieSJDTnd2YZ46LF",
									"message": "Hello, I want to...."
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object"
							},
							"example": {}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete sequence step",
				"tags": [
					"Sequences"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object"
							},
							"example": {}
						}
					}
				}
			}
		},
		"/schedules": {
			"parameters": [],
			"get": {
				"summary": "Retrieve All Schedules",
				"tags": [
					"Schedules"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"description": "(Optional): The page number to retrieve",
						"example": "1",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"description": "(Optional,): The number of records to skip. Used if page is not provided",
						"example": "0",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "(Optional,): The maximum number of records to return",
						"example": "2",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"description": "(Optional,): The field by which to sort the schedules. Currently, only \"createdAt\" is supported",
						"example": "createdAt",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sortOrder",
						"in": "query",
						"required": false,
						"description": "(Optional,): The sort direction. Use \"desc\" for descending order; any other value (or omission) will sort in ascending order",
						"example": "desc",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"schedules": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"_id": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"secondsToWait": {
														"type": "integer"
													},
													"timezone": {
														"type": "string"
													},
													"start": {
														"type": "string",
														"format": "style"
													},
													"end": {
														"type": "string"
													},
													"weekdays": {
														"type": "array",
														"items": {
															"type": "integer"
														}
													},
													"teamId": {
														"type": "string"
													},
													"createdBy": {
														"type": "string"
													},
													"createdAt": {
														"type": "string",
														"format": "date-time"
													}
												}
											}
										},
										"pagination": {
											"type": "object",
											"properties": {
												"totalRecords": {
													"type": "integer"
												},
												"currentPage": {
													"type": "integer"
												},
												"nextPage": {
													"type": "integer"
												},
												"totalPage": {
													"type": "integer"
												}
											}
										}
									}
								},
								"example": {
									"schedules": [
										{
											"_id": "skd_Cyf3LZJuJamrmCMrv",
											"name": "Test 2",
											"secondsToWait": 1200,
											"timezone": "Atlantic/Reykjavik",
											"start": "08:00",
											"end": "18:00",
											"weekdays": [
												1,
												2,
												3,
												4,
												5
											],
											"teamId": "tea_b834id4r7skME8mfW",
											"createdBy": "usr_F7iPChEQ3pSmuTiCe",
											"createdAt": "2025-02-06T16:29:10.217Z"
										},
										{
											"_id": "skd_ZmBiTE9xA4yo5yigu",
											"name": "Default schedule",
											"secondsToWait": 1200,
											"timezone": "Europe/Paris",
											"start": "09:00",
											"end": "18:00",
											"weekdays": [
												1,
												2,
												3,
												4,
												5
											],
											"teamId": "tea_b834id4r7skME8mfW",
											"createdBy": "usr_F7iPChEQ3pSmuTiCe",
											"createdAt": "2025-02-06T16:28:30.913Z"
										},
										{
											"_id": "skd_7AJHLRRxpRhcPxopG",
											"name": "Default schedule",
											"secondsToWait": 1200,
											"timezone": "Europe/Paris",
											"start": "09:00",
											"end": "18:00",
											"weekdays": [
												1,
												2,
												3,
												4,
												5
											],
											"teamId": "tea_b834id4r7skME8mfW",
											"createdBy": "usr_F7iPChEQ3pSmuTiCe",
											"createdAt": "2025-02-06T16:25:47.049Z"
										}
									],
									"pagination": {
										"totalRecords": 5780,
										"currentPage": 1,
										"nextPage": 2,
										"totalPage": 1927
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new schedule",
				"tags": [
					"Schedules"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"secondsToWait": {
											"type": "integer"
										},
										"timezone": {
											"type": "string"
										},
										"start": {
											"type": "string",
											"format": "style"
										},
										"end": {
											"type": "string"
										},
										"weekdays": {
											"type": "array",
											"items": {
												"type": "integer"
											}
										},
										"public": {
											"type": "boolean"
										},
										"teamId": {
											"type": "string"
										},
										"createdBy": {
											"type": "string"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										}
									}
								},
								"example": {
									"_id": "skd_JTb4gjdiizqPoYqzh",
									"name": "Default schedule",
									"secondsToWait": 120,
									"timezone": "Europe/Paris",
									"start": "09:00",
									"end": "18:00",
									"weekdays": [
										1,
										2,
										3,
										4,
										5
									],
									"public": false,
									"teamId": "tea_Lq4kN7R2pqEA4YFst",
									"createdBy": "usr_n2PG5aHnsGErYS2Yg",
									"createdAt": "2025-01-17T15:17:59.207Z"
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"secondsToWait": {
										"type": "string"
									},
									"timezone": {
										"type": "string"
									},
									"start": {
										"type": "string"
									},
									"end": {
										"type": "string"
									},
									"weekdays": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"public": {
										"type": "string"
									}
								}
							},
							"example": {
								"name": "{{name}}",
								"secondsToWait": "{{seconds}}",
								"timezone": "{{timezone}}",
								"start": "{{start}}",
								"end": "{{end}}",
								"weekdays": [
									"{{days}}"
								],
								"public": "{{public}}"
							}
						}
					}
				}
			}
		},
		"/schedules/{scheduleId}": {
			"parameters": [
				{
					"name": "scheduleId",
					"in": "path",
					"required": true,
					"example": "{{scheduleId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Retrieve One Schedule",
				"tags": [
					"Schedules"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"secondsToWait": {
											"type": "integer"
										},
										"timezone": {
											"type": "string"
										},
										"start": {
											"type": "string",
											"format": "style"
										},
										"end": {
											"type": "string"
										},
										"weekdays": {
											"type": "array",
											"items": {
												"type": "integer"
											}
										},
										"teamId": {
											"type": "string"
										},
										"createdBy": {
											"type": "string"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										}
									}
								},
								"example": {
									"_id": "skd_JTb4gjdiizqPoYqzh",
									"name": "Default schedule",
									"secondsToWait": 120,
									"timezone": "Europe/Paris",
									"start": "09:00",
									"end": "18:00",
									"weekdays": [
										1,
										2,
										3,
										4,
										5
									],
									"teamId": "tea_Lq4kN7R2pqEA4YFst",
									"createdBy": "usr_n2PG5aHnsGErYS2Yg",
									"createdAt": "2025-01-17T15:17:59.207Z"
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Update a schedule",
				"tags": [
					"Schedules"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"secondsToWait": {
											"type": "integer"
										},
										"timezone": {
											"type": "string"
										},
										"start": {
											"type": "string",
											"format": "style"
										},
										"end": {
											"type": "string"
										},
										"weekdays": {
											"type": "array",
											"items": {
												"type": "integer"
											}
										},
										"public": {
											"type": "boolean"
										},
										"teamId": {
											"type": "string"
										},
										"createdBy": {
											"type": "string"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										}
									}
								},
								"example": {
									"_id": "skd_JTb4gjdiizqPoYqzh",
									"name": "Schedule new name",
									"secondsToWait": 120,
									"timezone": "Europe/Paris",
									"start": "09:00",
									"end": "18:00",
									"weekdays": [
										1,
										2,
										3,
										4,
										5
									],
									"public": false,
									"teamId": "tea_Lq4kN7R2pqEA4YFst",
									"createdBy": "usr_n2PG5aHnsGErYS2Yg",
									"createdAt": "2025-01-17T15:17:59.207Z"
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"secondsToWait": {
										"type": "string"
									},
									"timezone": {
										"type": "string"
									},
									"start": {
										"type": "string"
									},
									"end": {
										"type": "string"
									},
									"weekdays": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"public": {
										"type": "string"
									}
								}
							},
							"example": {
								"name": "{{name}}",
								"secondsToWait": "{{seconds}}",
								"timezone": "{{timezone}}",
								"start": "{{start}}",
								"end": "{{end}}",
								"weekdays": [
									"{{days}}"
								],
								"public": "{{public}}"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a schedule",
				"tags": [
					"Schedules"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "skd_L2sKZ3HMddtrfmHGr"
								}
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/schedules/": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Retrieve Campaign Schedules",
				"tags": [
					"Schedules"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"_id": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"secondsToWait": {
												"type": "integer"
											},
											"timezone": {
												"type": "string"
											},
											"start": {
												"type": "string",
												"format": "style"
											},
											"end": {
												"type": "string"
											},
											"weekdays": {
												"type": "array",
												"items": {
													"type": "integer"
												}
											},
											"teamId": {
												"type": "string"
											},
											"createdBy": {
												"type": "string"
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											}
										}
									}
								},
								"example": [
									{
										"_id": "skd_Cyf3LZJuJamrmCMrv",
										"name": "Test 2",
										"secondsToWait": 1200,
										"timezone": "Atlantic/Reykjavik",
										"start": "08:00",
										"end": "18:00",
										"weekdays": [
											1,
											2,
											3,
											4,
											5
										],
										"teamId": "tea_b834id4r7skME8mfW",
										"createdBy": "usr_F7iPChEQ3pSmuTiCe",
										"createdAt": "2025-02-06T16:29:10.217Z"
									},
									{
										"_id": "skd_hCG7J8K4EcLYM3GS9",
										"name": "Default schedule",
										"secondsToWait": 1200,
										"timezone": "Africa/Ceuta",
										"start": "09:00",
										"end": "18:00",
										"weekdays": [
											1,
											2,
											3,
											4,
											5
										],
										"teamId": "tea_b834id4r7skME8mfW",
										"createdBy": "usr_cTWih7tcKWicFRiQj",
										"createdAt": "2025-02-06T15:36:01.531Z"
									},
									{
										"_id": "skd_sxKnxqQ9Qx9vMEyyZ",
										"name": "Default schedule",
										"secondsToWait": 1200,
										"timezone": "Europe/Paris",
										"start": "09:00",
										"end": "18:00",
										"weekdays": [
											1,
											2,
											3,
											4,
											5
										],
										"teamId": "tea_b834id4r7skME8mfW",
										"createdBy": "usr_cTWih7tcKWicFRiQj",
										"createdAt": "2025-02-06T15:35:52.079Z"
									}
								]
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/schedules/{scheduleId}": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "scheduleId",
					"in": "path",
					"required": true,
					"example": "{{scheduleId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Associate schedule with campaign",
				"tags": [
					"Schedules"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"scheduleId": {
											"type": "string"
										},
										"campaignId": {
											"type": "string"
										}
									}
								},
								"example": {
									"scheduleId": "skd_CBHNKLZsZr3FFJHPK",
									"campaignId": "cam_SaAarzTsXms8BENvR"
								}
							}
						}
					}
				}
			}
		},
		"/leads/start/{leadId}": {
			"parameters": [
				{
					"name": "leadId",
					"in": "path",
					"required": true,
					"example": "{{leadId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Resume a paused Lead",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success all campaign",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"email": {
												"type": "string",
												"format": "email"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"picture": {
												"type": "string",
												"format": "uri"
											},
											"phone": {
												"type": "string",
												"format": "phone"
											},
											"linkedinUrl": {
												"type": "string",
												"format": "uri"
											},
											"companyName": {
												"type": "string"
											},
											"companyDomain": {
												"type": "string"
											},
											"icebreaker": {
												"type": "string"
											},
											"jobTitle": {
												"type": "string"
											},
											"_id": {
												"type": "string"
											},
											"isPaused": {
												"type": "boolean"
											},
											"campaignId": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"email": "john.doe@domain.com",
										"firstName": "John",
										"lastName": "Doe",
										"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
										"phone": "+33 123456789",
										"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
										"companyName": "lempire",
										"companyDomain": "lempire.co",
										"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
										"jobTitle": "Developer",
										"_id": "lea_7kMNQwplxvvD2hf5z",
										"isPaused": false,
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
									},
									{
										"firstname": "John",
										"lastname": "Doe",
										"companyName": "lempire",
										"email": "john.doe@domain.com",
										"_id": "lea_3pRTJnkxwwF6vh1m",
										"isPaused": false,
										"campaignId": "cam_K9L8M7N6O5P4Q3R2S1"
									}
								]
							}
						}
					}
				}
			}
		},
		"/leads/pause/{leadId}": {
			"parameters": [
				{
					"name": "leadId",
					"in": "path",
					"required": true,
					"example": "{{leadId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Pause a Lead",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "campaignId",
						"in": "query",
						"required": false,
						"description": "(Optional) id of the campaign",
						"example": "{{campaignId}}",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success all campaign",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"email": {
												"type": "string",
												"format": "email"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"picture": {
												"type": "string",
												"format": "uri"
											},
											"phone": {
												"type": "string",
												"format": "phone"
											},
											"linkedinUrl": {
												"type": "string",
												"format": "uri"
											},
											"companyName": {
												"type": "string"
											},
											"companyDomain": {
												"type": "string"
											},
											"icebreaker": {
												"type": "string"
											},
											"jobTitle": {
												"type": "string"
											},
											"_id": {
												"type": "string"
											},
											"isPaused": {
												"type": "boolean"
											},
											"campaignId": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"email": "john.doe@domain.com",
										"firstName": "John",
										"lastName": "Doe",
										"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
										"phone": "+33 123456789",
										"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
										"companyName": "lempire",
										"companyDomain": "lempire.co",
										"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
										"jobTitle": "Developer",
										"_id": "lea_7kMNQwplxvvD2hf5z",
										"isPaused": true,
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
									},
									{
										"firstname": "John",
										"lastname": "Doe",
										"companyName": "lempire",
										"email": "john.doe@domain.com",
										"_id": "lea_3pRTJnkxwwF6vh1m",
										"isPaused": true,
										"campaignId": "cam_K9L8M7N6O5P4Q3R2S1"
									}
								]
							}
						}
					},
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success specific campaign",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"email": {
												"type": "string",
												"format": "email"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"picture": {
												"type": "string",
												"format": "uri"
											},
											"phone": {
												"type": "string",
												"format": "phone"
											},
											"linkedinUrl": {
												"type": "string",
												"format": "uri"
											},
											"companyName": {
												"type": "string"
											},
											"companyDomain": {
												"type": "string"
											},
											"icebreaker": {
												"type": "string"
											},
											"jobTitle": {
												"type": "string"
											},
											"_id": {
												"type": "string"
											},
											"isPaused": {
												"type": "boolean"
											},
											"campaignId": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"email": "john.doe@domain.com",
										"firstName": "John",
										"lastName": "Doe",
										"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
										"phone": "+33 123456789",
										"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
										"companyName": "lempire",
										"companyDomain": "lempire.co",
										"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
										"jobTitle": "Developer",
										"_id": "lea_7kMNQwplxvvD2hf5z",
										"isPaused": true,
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
									}
								]
							}
						}
					}
				}
			}
		},
		"/leads/interested/{leadIdOrEmail}": {
			"parameters": [
				{
					"name": "leadIdOrEmail",
					"in": "path",
					"required": true,
					"example": "{{leadIdOrEmail}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Mark a Lead as interested",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"email": {
												"type": "string",
												"format": "email"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"picture": {
												"type": "string",
												"format": "uri"
											},
											"phone": {
												"type": "string",
												"format": "phone"
											},
											"linkedinUrl": {
												"type": "string",
												"format": "uri"
											},
											"companyName": {
												"type": "string"
											},
											"companyDomain": {
												"type": "string"
											},
											"icebreaker": {
												"type": "string"
											},
											"jobTitle": {
												"type": "string"
											},
											"_id": {
												"type": "string"
											},
											"isPaused": {
												"type": "boolean"
											},
											"campaignId": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"email": "john.doe@domain.com",
										"firstName": "John",
										"lastName": "Doe",
										"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
										"phone": "+33 123456789",
										"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
										"companyName": "lempire",
										"companyDomain": "lempire.co",
										"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
										"jobTitle": "Developer",
										"_id": "lea_7kMNQwplxvvD2hf5z",
										"isPaused": false,
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
									},
									{
										"firstname": "John",
										"lastname": "Doe",
										"companyName": "lempire",
										"email": "john.doe@domain.com",
										"_id": "lea_3pRTJnkxwwF6vh1m",
										"isPaused": true,
										"campaignId": "cam_K9L8M7N6O5P4Q3R2S1"
									}
								]
							}
						}
					}
				}
			}
		},
		"/leads/notinterested/{leadIdOrEmail}": {
			"parameters": [
				{
					"name": "leadIdOrEmail",
					"in": "path",
					"required": true,
					"example": "{{leadIdOrEmail}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Mark a Lead as not interested",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"email": {
												"type": "string",
												"format": "email"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"picture": {
												"type": "string",
												"format": "uri"
											},
											"phone": {
												"type": "string",
												"format": "phone"
											},
											"linkedinUrl": {
												"type": "string",
												"format": "uri"
											},
											"companyName": {
												"type": "string"
											},
											"companyDomain": {
												"type": "string"
											},
											"icebreaker": {
												"type": "string"
											},
											"jobTitle": {
												"type": "string"
											},
											"_id": {
												"type": "string"
											},
											"isPaused": {
												"type": "boolean"
											},
											"campaignId": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"email": "john.doe@domain.com",
										"firstName": "John",
										"lastName": "Doe",
										"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
										"phone": "+33 123456789",
										"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
										"companyName": "lempire",
										"companyDomain": "lempire.co",
										"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
										"jobTitle": "Developer",
										"_id": "lea_7kMNQwplxvvD2hf5z",
										"isPaused": false,
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
									},
									{
										"firstname": "John",
										"lastname": "Doe",
										"companyName": "lempire",
										"email": "john.doe@domain.com",
										"_id": "lea_3pRTJnkxwwF6vh1m",
										"isPaused": true,
										"campaignId": "cam_K9L8M7N6O5P4Q3R2S1"
									}
								]
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/leads/{leadIdOrEmail}/interested": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "leadIdOrEmail",
					"in": "path",
					"required": true,
					"example": "{{leadIdOrEmail}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Mark a Lead as interested in one campaign",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"email": {
											"type": "string",
											"format": "email"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"picture": {
											"type": "string",
											"format": "uri"
										},
										"phone": {
											"type": "string",
											"format": "phone"
										},
										"linkedinUrl": {
											"type": "string",
											"format": "uri"
										},
										"companyName": {
											"type": "string"
										},
										"companyDomain": {
											"type": "string"
										},
										"icebreaker": {
											"type": "string"
										},
										"jobTitle": {
											"type": "string"
										},
										"_id": {
											"type": "string"
										},
										"isPaused": {
											"type": "boolean"
										},
										"campaignId": {
											"type": "string"
										}
									}
								},
								"example": {
									"email": "john.doe@domain.com",
									"firstName": "John",
									"lastName": "Doe",
									"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
									"phone": "+33 123456789",
									"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
									"companyName": "lempire",
									"companyDomain": "lempire.co",
									"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
									"jobTitle": "Developer",
									"_id": "lea_7kMNQwplxvvD2hf5z",
									"isPaused": false,
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
								}
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/leads/{leadIdOrEmail}/notinterested": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "leadIdOrEmail",
					"in": "path",
					"required": true,
					"example": "{{leadIdOrEmail}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Mark a Lead as not interested in one campaign",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"email": {
											"type": "string",
											"format": "email"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"picture": {
											"type": "string",
											"format": "uri"
										},
										"phone": {
											"type": "string",
											"format": "phone"
										},
										"linkedinUrl": {
											"type": "string",
											"format": "uri"
										},
										"companyName": {
											"type": "string"
										},
										"companyDomain": {
											"type": "string"
										},
										"icebreaker": {
											"type": "string"
										},
										"jobTitle": {
											"type": "string"
										},
										"_id": {
											"type": "string"
										},
										"isPaused": {
											"type": "boolean"
										},
										"campaignId": {
											"type": "string"
										}
									}
								},
								"example": {
									"email": "john.doe@domain.com",
									"firstName": "John",
									"lastName": "Doe",
									"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
									"phone": "+33 123456789",
									"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
									"companyName": "lempire",
									"companyDomain": "lempire.co",
									"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
									"jobTitle": "Developer",
									"_id": "lea_7kMNQwplxvvD2hf5z",
									"isPaused": false,
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
								}
							}
						}
					}
				}
			}
		},
		"/leads/{email}": {
			"parameters": [
				{
					"name": "email",
					"in": "path",
					"required": true,
					"example": "{{email}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Retrieve Lead with email",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "version",
						"in": "query",
						"required": false,
						"description": "(Optional) API version|default: v1",
						"example": "v2",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Retrieve Lead with email (V1)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"email": {
											"type": "string",
											"format": "email"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"picture": {
											"type": "string",
											"format": "uri"
										},
										"phone": {
											"type": "string",
											"format": "phone"
										},
										"linkedinUrl": {
											"type": "string",
											"format": "uri"
										},
										"companyName": {
											"type": "string"
										},
										"companyDomain": {
											"type": "string"
										},
										"icebreaker": {
											"type": "string"
										},
										"jobTitle": {
											"type": "string"
										},
										"_id": {
											"type": "string"
										},
										"isPaused": {
											"type": "boolean"
										},
										"campaignId": {
											"type": "string"
										},
										"emailStatus": {
											"type": "string"
										}
									}
								},
								"example": {
									"email": "john.doe@domain.com",
									"firstName": "John",
									"lastName": "Doe",
									"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
									"phone": "+33 123456789",
									"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
									"companyName": "lempire",
									"companyDomain": "lempire.co",
									"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
									"jobTitle": "Developer",
									"_id": "lea_7kMNQwplxvvD2hf5z",
									"isPaused": false,
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9",
									"emailStatus": "deliverable"
								}
							}
						}
					},
					"default": {
						"headers": {},
						"description": "Lead not found"
					}
				}
			}
		},
		"/leads": {
			"parameters": [],
			"get": {
				"summary": "Retrieve Lead with email or id",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": false,
						"description": "(Optionnal) The lead Id - ⚠️ You should use at least one of query param email or id",
						"example": "{{leadId}}",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"description": "(Optionnal) The lead email - ⚠️ You should use at least one of query param email or id",
						"example": "{{email}}",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "version",
						"in": "query",
						"required": false,
						"description": "(Optional) API version|default: v1",
						"example": "v2",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Retrieve Lead with email (V1)",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"email": {
											"type": "string",
											"format": "email"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"picture": {
											"type": "string",
											"format": "uri"
										},
										"phone": {
											"type": "string",
											"format": "phone"
										},
										"linkedinUrl": {
											"type": "string",
											"format": "uri"
										},
										"companyName": {
											"type": "string"
										},
										"companyDomain": {
											"type": "string"
										},
										"icebreaker": {
											"type": "string"
										},
										"jobTitle": {
											"type": "string"
										},
										"_id": {
											"type": "string"
										},
										"isPaused": {
											"type": "boolean"
										},
										"campaignId": {
											"type": "string"
										},
										"emailStatus": {
											"type": "string"
										}
									}
								},
								"example": {
									"email": "john.doe@domain.com",
									"firstName": "John",
									"lastName": "Doe",
									"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
									"phone": "+33 123456789",
									"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
									"companyName": "lempire",
									"companyDomain": "lempire.co",
									"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
									"jobTitle": "Developer",
									"_id": "lea_7kMNQwplxvvD2hf5z",
									"isPaused": false,
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9",
									"emailStatus": "deliverable"
								}
							}
						}
					},
					"default": {
						"headers": {},
						"description": "Lead not found"
					}
				}
			}
		},
		"/campaigns/{campaignId}/leads/{email}": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "email",
					"in": "path",
					"required": true,
					"example": "{{email}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Create Lead in a Campaign",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "deduplicate",
						"in": "query",
						"required": false,
						"description": "Boolean | Search email address in another campaign, will not insert the lead if email address already inserted\n | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "linkedinEnrichment",
						"in": "query",
						"required": false,
						"description": "Boolean | Find verified email | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "findEmail",
						"in": "query",
						"required": false,
						"description": "Boolean | Run the LinkedIn enrichment | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "verifyEmail",
						"in": "query",
						"required": false,
						"description": "Boolean | Verify existing email (debounce) | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "findPhone",
						"in": "query",
						"required": false,
						"description": "Boolean | Find phone number | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"campaignId": {
											"type": "string"
										},
										"campaignName": {
											"type": "string"
										},
										"email": {
											"type": "string",
											"format": "email"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"picture": {
											"type": "string",
											"format": "uri"
										},
										"phone": {
											"type": "string",
											"format": "phone"
										},
										"linkedinUrl": {
											"type": "string",
											"format": "uri"
										},
										"companyName": {
											"type": "string"
										},
										"companyDomain": {
											"type": "string"
										},
										"icebreaker": {
											"type": "string"
										},
										"jobTitle": {
											"type": "string"
										},
										"_id": {
											"type": "string"
										},
										"isPaused": {
											"type": "boolean"
										},
										"leadUrl": {
											"type": "string",
											"format": "uri"
										}
									}
								},
								"example": {
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9",
									"campaignName": "Insights Outreach 2024",
									"email": "john.doe@domain.com",
									"firstName": "John",
									"lastName": "Doe",
									"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
									"phone": "+33 123456789",
									"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
									"companyName": "lempire",
									"companyDomain": "lempire.co",
									"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
									"jobTitle": "Developer",
									"_id": "lea_7kMNQwplxvvD2hf5z",
									"isPaused": false,
									"leadUrl": "https://api.lemlist.com/api/leads/john.doe%40domain.com"
								}
							}
						}
					},
					"400": {
						"headers": {},
						"description": "Already in the campaign"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"firstName": {
										"type": "string"
									},
									"lastName": {
										"type": "string"
									},
									"companyName": {
										"type": "string"
									},
									"jobTitle": {
										"type": "string"
									},
									"linkedinUrl": {
										"type": "string"
									},
									"picture": {
										"type": "string"
									},
									"phone": {
										"type": "string"
									},
									"companyDomain": {
										"type": "string"
									},
									"icebreaker": {
										"type": "string"
									},
									"contactOwner": {
										"type": "string"
									}
								}
							},
							"example": {
								"firstName": "{{lead-firstName}}",
								"lastName": "{{lead-lastName}}",
								"companyName": "{{lead-companyName}}",
								"jobTitle": "{{lead-jobTitle}}",
								"linkedinUrl": "{{lead-linkedinUrl}}",
								"picture": "{{lead-picture}}",
								"phone": "{{lead-phone}}",
								"companyDomain": "{{lead-companyDomain}}",
								"icebreaker": "{{lead-icebreacker}}",
								"contactOwner": "{{lead-contactOwner}}"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Unsubscribe Lead from Campaign",
				"tags": [
					"Leads"
				],
				"parameters": [],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"email": {
											"type": "string",
											"format": "email"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"picture": {
											"type": "string",
											"format": "uri"
										},
										"phone": {
											"type": "string",
											"format": "phone"
										},
										"linkedinUrl": {
											"type": "string",
											"format": "uri"
										},
										"companyName": {
											"type": "string"
										},
										"companyDomain": {
											"type": "string"
										},
										"icebreaker": {
											"type": "string"
										},
										"jobTitle": {
											"type": "string"
										},
										"_id": {
											"type": "string"
										},
										"isPaused": {
											"type": "boolean"
										},
										"campaignId": {
											"type": "string"
										}
									}
								},
								"example": {
									"email": "john.doe@domain.com",
									"firstName": "John",
									"lastName": "Doe",
									"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
									"phone": "+33 123456789",
									"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
									"companyName": "lempire",
									"companyDomain": "lempire.co",
									"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
									"jobTitle": "Developer",
									"_id": "lea_7kMNQwplxvvD2hf5z",
									"isPaused": false,
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
								}
							}
						}
					},
					"404": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Already unsubscribe / invalide email"
					}
				}
			}
		},
		"/campaigns/{campaignId}/leads/{leadId}": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "leadId",
					"in": "path",
					"required": true,
					"example": "{{leadId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"patch": {
				"summary": "Update Lead",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"campaignId": {
											"type": "string"
										},
										"campaignName": {
											"type": "string"
										},
										"email": {
											"type": "string",
											"format": "email"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"picture": {
											"type": "string",
											"format": "uri"
										},
										"phone": {
											"type": "string",
											"format": "utc-millisec"
										},
										"linkedinUrl": {
											"type": "string",
											"format": "uri"
										},
										"companyName": {
											"type": "string"
										},
										"companyDomain": {
											"type": "string"
										},
										"icebreaker": {
											"type": "string"
										},
										"jobTitle": {
											"type": "string"
										},
										"preferredContactMethod": {
											"type": "string"
										},
										"_id": {
											"type": "string"
										},
										"isPaused": {
											"type": "boolean"
										},
										"leadUrl": {
											"type": "string",
											"format": "uri"
										}
									}
								},
								"example": {
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9",
									"campaignName": "Insights Outreach 2024",
									"email": "john.doe@domain.com",
									"firstName": "John",
									"lastName": "Doe",
									"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
									"phone": "+33123456789",
									"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
									"companyName": "lempire",
									"companyDomain": "lempire.co",
									"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
									"jobTitle": "Developer",
									"preferredContactMethod": "linkedIn",
									"_id": "lea_7kMNQwplxvvD2hf5z",
									"isPaused": false,
									"leadUrl": "https://api.lemlist.com/api/leads/john.doe%40domain.com"
								}
							}
						}
					},
					"404": {
						"headers": {},
						"description": "Lead not found"
					},
					"500": {
						"headers": {},
						"description": "Lead in graveyard"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"preferredContactMethod": {
										"type": "string"
									}
								}
							},
							"example": {
								"preferredContactMethod": "email"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Lead",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "action",
						"in": "query",
						"required": false,
						"description": "Force the deletion of the lead",
						"example": "remove",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"email": {
											"type": "string",
											"format": "email"
										},
										"firstName": {
											"type": "string"
										},
										"lastName": {
											"type": "string"
										},
										"picture": {
											"type": "string",
											"format": "uri"
										},
										"phone": {
											"type": "string",
											"format": "phone"
										},
										"linkedinUrl": {
											"type": "string",
											"format": "uri"
										},
										"companyName": {
											"type": "string"
										},
										"companyDomain": {
											"type": "string"
										},
										"icebreaker": {
											"type": "string"
										},
										"jobTitle": {
											"type": "string"
										},
										"_id": {
											"type": "string"
										},
										"isPaused": {
											"type": "boolean"
										},
										"campaignId": {
											"type": "string"
										}
									}
								},
								"example": {
									"email": "john.doe@domain.com",
									"firstName": "John",
									"lastName": "Doe",
									"picture": "https://c.pxhere.com/images/55/a2/fc589d408bc4c00cf38f1aeaf3e3-1449557.jpg!d",
									"phone": "+33 123456789",
									"linkedinUrl": "https://www.linkedin.com/in/johndoe,",
									"companyName": "lempire",
									"companyDomain": "lempire.co",
									"icebreaker": "Hello John, I came across your profile and your expertise in software development is remarkable!",
									"jobTitle": "Developer",
									"_id": "lea_7kMNQwplxvvD2hf5z",
									"isPaused": false,
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
								}
							}
						}
					},
					"404": {
						"headers": {},
						"description": "Lead not found"
					}
				}
			}
		},
		"/leads/{leadId}/variables": {
			"parameters": [
				{
					"name": "leadId",
					"in": "path",
					"required": true,
					"example": "{{leadId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Add variables",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "company",
						"in": "query",
						"required": false,
						"example": "Lemlist",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "preferredContactMethod",
						"in": "query",
						"required": false,
						"example": "linkedIn",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					},
					"400": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Already exists",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"status": {
											"type": "string"
										}
									}
								},
								"example": {
									"ok": false,
									"status": "Variables house already exist"
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Update variables",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "favoriteColor",
						"in": "query",
						"required": false,
						"example": "yellow",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "company",
						"in": "query",
						"required": false,
						"example": "LemlistleadId",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					},
					"400": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Variables not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"status": {
											"type": "string"
										}
									}
								},
								"example": {
									"ok": false,
									"status": "Variables color not found"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete variables",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "company",
						"in": "query",
						"required": false,
						"example": "Lemlist",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "favoriteColor",
						"in": "query",
						"required": false,
						"example": "yellow",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Variables not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"status": {
											"type": "string"
										}
									}
								},
								"example": {
									"ok": false,
									"status": "Variables color not found"
								}
							}
						}
					}
				}
			}
		},
		"/leads/audio": {
			"parameters": [],
			"post": {
				"summary": "Upload an audio file to a voice message step",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "leadId",
						"in": "query",
						"required": false,
						"example": "lea_7kMNQwplxvvD2hf5z",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "stepId",
						"in": "query",
						"required": false,
						"description": "stepId of th",
						"example": "stp_ZrcCuR6cwi5qFnQQQ",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							},
							"Content-Length": {
								"schema": {
									"type": "integer"
								},
								"example": "308"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										},
										"status": {
											"type": "object",
											"properties": {
												"url": {
													"type": "string",
													"format": "uri"
												},
												"teamId": {
													"type": "string"
												},
												"campaignId": {
													"type": "string"
												},
												"leadId": {
													"type": "string"
												},
												"sequenceId": {
													"type": "string"
												},
												"emailTemplateId": {
													"type": "string"
												},
												"fileName": {
													"type": "string"
												}
											}
										}
									}
								},
								"example": {
									"ok": true,
									"status": {
										"url": "https://lemlist-dev.s3.eu-west-1.amazonaws.com/fil_bECTszeFQMneA43D2.m4a",
										"teamId": "tea_KWvTf2CypcBqG4QG2",
										"campaignId": "cam_B3MJETF3YxvGaR4dC",
										"leadId": "lea_CgfmTDCPC43gwPgYk",
										"sequenceId": "seq_ZYdm8Bh5eJzu2ExmN",
										"emailTemplateId": "etp_DrycDKL7WBM7TcWnm",
										"fileName": "file2"
									}
								}
							}
						}
					}
				}
			}
		},
		"/crm/filters": {
			"parameters": [],
			"get": {
				"summary": "Get CRM filters",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "crm",
						"in": "query",
						"required": false,
						"description": "CRM name",
						"example": "hubspot",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "query",
						"required": false,
						"description": "Connected user ID",
						"example": "userId",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "type",
						"in": "query",
						"required": false,
						"description": "Filter type for SalesForce, can be lead, contact, or report.",
						"example": "lead",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"id": 16,
										"name": "Filter 1"
									},
									{
										"id": 17,
										"name": "Filter 2"
									},
									{
										"id": 18,
										"name": "Filter 3"
									}
								]
							}
						}
					},
					"401": {
						"headers": {},
						"description": "Unauthorized"
					}
				}
			}
		},
		"/campaigns/{campaignId}/leads/import": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Import leads from CRM",
				"tags": [
					"Leads"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					},
					"401": {
						"headers": {},
						"description": "Unauthorized"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"crm": {
										"type": "string"
									},
									"userId": {
										"type": "string"
									},
									"filterId": {
										"type": "string"
									},
									"filterType": {
										"type": "string"
									},
									"deduplicate": {
										"type": "string"
									}
								}
							},
							"example": {
								"crm": "{{crmName}}",
								"userId": "{{userId}}",
								"filterId": "{{filterId}}",
								"filterType": "{{filterType}}",
								"deduplicate": "{{deduplicate}}"
							}
						}
					}
				}
			}
		},
		"/activities/": {
			"parameters": [],
			"get": {
				"summary": "Retrieve Activities",
				"tags": [
					"Activities"
				],
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"required": false,
						"description": "(Optional)",
						"example": "paused",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "campaignId",
						"in": "query",
						"required": false,
						"description": "(Optional)",
						"example": "{{campaignId}}",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isFirst",
						"in": "query",
						"required": false,
						"description": "(Optional)",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"description": "(Optional)",
						"example": "0",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "(Optional) Default: 100 | Max: 100",
						"example": "2",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "leadId",
						"in": "query",
						"required": false,
						"description": "(Optional) Get activities for a lead when provided",
						"example": "{{leadId}}",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "version",
						"in": "query",
						"required": false,
						"description": "(Optional) Default: v1",
						"example": "v2",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"_id": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"emailId": {
												"type": "string"
											},
											"messageId": {
												"type": "string"
											},
											"emailTemplateId": {
												"type": "string"
											},
											"isFirst": {
												"type": "boolean"
											},
											"stopped": {
												"type": "boolean"
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											},
											"bot": {
												"type": "boolean"
											},
											"teamId": {
												"type": "string"
											},
											"leadId": {
												"type": "string"
											},
											"campaignId": {
												"type": "string"
											},
											"sequenceId": {
												"type": "string"
											},
											"sequenceStep": {
												"type": "integer"
											},
											"createdBy": {
												"type": "string"
											},
											"sendUserId": {
												"type": "string"
											},
											"totalSequenceStep": {
												"type": "integer"
											},
											"name": {
												"type": "string"
											},
											"sendUserName": {
												"type": "string"
											},
											"sendUserEmail": {
												"type": "string",
												"format": "email"
											},
											"sendUserMailboxId": {
												"type": "string"
											},
											"sendUserMailboxProviderId": {
												"type": "string",
												"format": "email"
											},
											"leadFirstName": {
												"type": "string"
											},
											"leadLastName": {
												"type": "string"
											},
											"leadEmail": {
												"type": "string",
												"format": "email"
											},
											"leadPhone": {
												"type": "string"
											},
											"leadPicture": {
												"type": "string"
											},
											"leadCompanyName": {
												"type": "string"
											},
											"metaData": {
												"type": "object",
												"properties": {
													"teamId": {
														"type": "string"
													},
													"campaignId": {
														"type": "string"
													},
													"leadId": {
														"type": "string"
													},
													"type": {
														"type": "string"
													},
													"createdBy": {
														"type": "string"
													}
												}
											},
											"email": {
												"type": "string",
												"format": "email"
											},
											"phone": {
												"type": "string"
											},
											"firstName": {
												"type": "string"
											},
											"lastName": {
												"type": "string"
											},
											"sendUserLoginEmail": {
												"type": "string",
												"format": "email"
											},
											"campaignName": {
												"type": "string"
											},
											"emailTemplateName": {
												"type": "string"
											},
											"companyName": {
												"type": "string"
											},
											"companyDomain": {
												"type": "string"
											},
											"picture": {
												"type": "string"
											},
											"isPremium": {
												"type": "string"
											},
											"locationName": {
												"type": "string"
											},
											"occupation": {
												"type": "string"
											},
											"industry": {
												"type": "string"
											},
											"summary": {
												"type": "string"
											},
											"certification": {
												"type": "string"
											},
											"certification1": {
												"type": "string"
											},
											"certification2": {
												"type": "string"
											},
											"certification3": {
												"type": "string"
											},
											"certification4": {
												"type": "string"
											},
											"certification5": {
												"type": "string"
											},
											"certification6": {
												"type": "string"
											},
											"certification7": {
												"type": "string"
											},
											"certification8": {
												"type": "string"
											},
											"certification9": {
												"type": "string"
											},
											"certification10": {
												"type": "string"
											},
											"certification11": {
												"type": "string"
											},
											"certification12": {
												"type": "string"
											},
											"certification13": {
												"type": "string"
											},
											"certification14": {
												"type": "string"
											},
											"certification15": {
												"type": "string"
											},
											"certification16": {
												"type": "string"
											},
											"certification17": {
												"type": "string"
											},
											"certification18": {
												"type": "string"
											},
											"certification19": {
												"type": "string"
											},
											"school": {
												"type": "string"
											},
											"school1": {
												"type": "string"
											},
											"school2": {
												"type": "string"
											},
											"school3": {
												"type": "string"
											},
											"school4": {
												"type": "string"
											},
											"school5": {
												"type": "string"
											},
											"languages": {
												"type": "string"
											},
											"skills": {
												"type": "string"
											},
											"companyProfileUrl": {
												"type": "string"
											},
											"companyTagline": {
												"type": "string"
											},
											"companyHeadQuarter": {
												"type": "string"
											},
											"companySpecialities": {
												"type": "string"
											},
											"companyDescription": {
												"type": "string"
											},
											"companyFoundedOn": {
												"type": "string"
											},
											"companyEmployeesOnLinkedin": {
												"type": "string"
											},
											"companyIndustry": {
												"type": "string"
											},
											"companyLogo": {
												"type": "string"
											},
											"companyType": {
												"type": "string"
											},
											"sequenceTested": {
												"type": "string"
											},
											"recording": {
												"type": "string"
											},
											"transcription": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"_id": "act_xXR99r2dyRedXb8pc",
										"type": "emailsSent",
										"emailId": "eml_8BdDtmtTJPzXTiMTL",
										"messageId": "<CADzbc6WBrJ0Dv1QRLaADAeffAAKMGMCjWQw=UFyazhDqxryoHw@mail.gmail.com>",
										"emailTemplateId": "etp_Tds8DjFk7cumowE8B",
										"isFirst": true,
										"stopped": false,
										"createdAt": "2024-07-22T15:25:13.610Z",
										"bot": false,
										"teamId": "tea_KAiTn2K9RoYA85MuY",
										"leadId": "lea_u2H5qeBCGWKDdaj6B",
										"campaignId": "cam_6mKKdaC5PNQiBu2jT",
										"sequenceId": "seq_zNK94gqDakNmcRuGy",
										"sequenceStep": 1,
										"createdBy": "usr_QAucgYReK6EmMB3Cz",
										"sendUserId": "usr_QAucgYReK6EmMB3Cz",
										"totalSequenceStep": 1,
										"name": "Campaign example",
										"sendUserName": "John Doe",
										"sendUserEmail": "john.doe@lemlist.co",
										"sendUserMailboxId": "usm_im9fnaYmKKQaixa9d",
										"sendUserMailboxProviderId": "john.doe@lemlist.co",
										"leadFirstName": "",
										"leadLastName": "",
										"leadEmail": "john.doe@lempire.co",
										"leadPhone": "",
										"leadPicture": "",
										"leadCompanyName": "",
										"metaData": {
											"teamId": "tea_KAiTn2K9RoYA85MuY",
											"campaignId": "cam_6mKKdaC5PNQiBu2jT",
											"leadId": "lea_u2H5qeBCGWKDdaj6B",
											"type": "emailsSent",
											"createdBy": "usr_QAucgYReK6EmMB3Cz"
										},
										"email": "john.doe@lempire.co",
										"phone": "",
										"firstName": "",
										"lastName": "",
										"sendUserLoginEmail": "john.doe@lempire.co",
										"campaignName": "Example's campaign",
										"emailTemplateName": "Blank",
										"companyName": "",
										"companyDomain": "",
										"picture": "",
										"isPremium": "",
										"locationName": "",
										"occupation": "",
										"industry": "",
										"summary": "",
										"certification": "",
										"certification1": "",
										"certification2": "",
										"certification3": "",
										"certification4": "",
										"certification5": "",
										"certification6": "",
										"certification7": "",
										"certification8": "",
										"certification9": "",
										"certification10": "",
										"certification11": "",
										"certification12": "",
										"certification13": "",
										"certification14": "",
										"certification15": "",
										"certification16": "",
										"certification17": "",
										"certification18": "",
										"certification19": "",
										"school": "",
										"school1": "",
										"school2": "",
										"school3": "",
										"school4": "",
										"school5": "",
										"languages": "",
										"skills": "",
										"companyProfileUrl": "",
										"companyTagline": "",
										"companyHeadQuarter": "",
										"companySpecialities": "",
										"companyDescription": "",
										"companyFoundedOn": "",
										"companyEmployeesOnLinkedin": "",
										"companyIndustry": "",
										"companyLogo": "",
										"companyType": "",
										"sequenceTested": "A",
										"recording": "<recording url>",
										"transcription": "<transcription url>"
									}
								]
							}
						}
					}
				}
			}
		},
		"/campaigns/{campaignId}/stats": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Campaign stats",
				"tags": [
					"Stats"
				],
				"parameters": [
					{
						"name": "startDate",
						"in": "query",
						"required": false,
						"example": "2024-01-07T22:00:00.000Z",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"example": "2024-07-10T21:59:59.999Z",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "timezone",
						"in": "query",
						"required": false,
						"example": "Europe/Paris",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Campaign stats",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"leadTotal": {
											"type": "integer"
										},
										"leadToLaunch": {
											"type": "integer"
										},
										"leadReadyToSend": {
											"type": "integer"
										},
										"leadInProgress": {
											"type": "integer"
										},
										"leadCompleted": {
											"type": "integer"
										},
										"sentCount": {
											"type": "integer"
										},
										"deliveredCount": {
											"type": "integer"
										},
										"openedCount": {
											"type": "integer"
										},
										"clickedCount": {
											"type": "integer"
										},
										"repliedCount": {
											"type": "integer"
										},
										"interestedCount": {
											"type": "integer"
										}
									}
								},
								"example": {
									"leadTotal": 0,
									"leadToLaunch": 0,
									"leadReadyToSend": 0,
									"leadInProgress": 0,
									"leadCompleted": 0,
									"sentCount": 0,
									"deliveredCount": 0,
									"openedCount": 0,
									"clickedCount": 0,
									"repliedCount": 0,
									"interestedCount": 0
								}
							}
						}
					}
				}
			}
		},
		"/v2/campaigns/{campaignId}/stats": {
			"parameters": [
				{
					"name": "campaignId",
					"in": "path",
					"required": true,
					"example": "{{campaignId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Campaign stats V2",
				"tags": [
					"Stats"
				],
				"parameters": [
					{
						"name": "startDate",
						"in": "query",
						"required": false,
						"example": "2024-01-07T22:00:00.000Z",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "endDate",
						"in": "query",
						"required": false,
						"example": "2025-07-10T21:59:59.999Z",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "sendUser",
						"in": "query",
						"required": false,
						"example": "usr_b62rnsjxu236ttSH3|email@example.com",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "ABSelected",
						"in": "query",
						"required": false,
						"example": "A",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "channels",
						"in": "query",
						"required": false,
						"example": "[\"others\", \"linkedin\", \"email\"]",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"headers": {},
						"description": "Campaign stats V2"
					}
				}
			}
		},
		"/unsubscribes/": {
			"parameters": [],
			"get": {
				"summary": "Retrieve Unsubscribes",
				"tags": [
					"Unsubscribes"
				],
				"parameters": [
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"description": "(Optional) Offset from the start. For pagination.",
						"example": "0",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "(Optional) Number of email to retrieve. 100 per default.",
						"example": "5",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Retrieve Unsubscribes",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"_id": {
												"type": "string"
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											},
											"value": {
												"type": "string",
												"format": "email"
											},
											"source": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"_id": "uns_Y9Lf5R2mpNWs8x0cz",
										"createdAt": "2023-06-12T10:45:21.367Z",
										"value": "john.doe@example.com",
										"source": "user"
									},
									{
										"_id": "uns_B8Tq7U4dnGXp9a1wy",
										"createdAt": "2023-06-09T18:23:45.890Z",
										"value": "jane.smith@example.org",
										"source": "bounce"
									},
									{
										"_id": "uns_D5Jr6W3yfPQt0b2vx",
										"createdAt": "2023-06-08T14:12:56.534Z",
										"value": "michael.brown@domain.net",
										"source": "api"
									},
									{
										"_id": "uns_F4Gs8V1hnLYc3w9kt",
										"createdAt": "2023-06-05T08:34:17.298Z",
										"value": "emma.johnson@sample.com",
										"source": "abuse"
									},
									{
										"_id": "uns_H3Jf9X2lpKZw4y7bv",
										"createdAt": "2023-06-01T21:56:34.672Z",
										"value": "william.davis@fake.org",
										"source": "lead"
									}
								]
							}
						}
					}
				}
			}
		},
		"/unsubs/export": {
			"parameters": [],
			"get": {
				"summary": "Export Unsubscribes",
				"tags": [
					"Unsubscribes"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {},
						"description": "Export Unsubscribes"
					}
				}
			}
		},
		"/unsubscribes/john.doe@domain.com": {
			"parameters": [],
			"get": {
				"summary": "Get Unsubscribe Email",
				"tags": [
					"Unsubscribes"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										},
										"value": {
											"type": "string",
											"format": "email"
										},
										"source": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "uns_Y9Lf5R2mpNWs8x0cz",
									"createdAt": "2023-06-12T10:45:21.367Z",
									"value": "john.doe@example.com",
									"source": "user"
								}
							}
						}
					},
					"404": {
						"headers": {},
						"description": "Not found"
					}
				}
			},
			"post": {
				"summary": "Add Unsubscribe Email/Domain",
				"tags": [
					"Unsubscribes"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			},
			"delete": {
				"summary": "Delete Unsubscribe Email",
				"tags": [
					"Unsubscribes"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/hooks": {
			"parameters": [],
			"get": {
				"summary": "Get All webhooks",
				"tags": [
					"Webhooks"
				],
				"parameters": [],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"_id": {
												"type": "string"
											},
											"targetUrl": {
												"type": "string",
												"format": "uri"
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											},
											"zapId": {
												"type": "integer"
											},
											"campaignId": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"_id": "hoo_3JKlmnOp7qrStuvWx",
										"targetUrl": "https://hooks.zapier.com/hooks/standard/*your-webhook-id*/",
										"createdAt": "2018-08-09T07:45:56.789Z",
										"zapId": 123456780,
										"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
									},
									{
										"_id": "hoo_4LMnopQr8stUvWxYz",
										"targetUrl": "https://hooks.zapier.com/hooks/standard/*your-webhook-id*/",
										"createdAt": "2019-03-15T11:22:33.123Z",
										"zapId": 123456789,
										"type": "emailsReplied",
										"campaignId": "cam_K9L8M7N6O5P4Q3R2S1"
									},
									{
										"_id": "hoo_5NOqrsTu9vwXyZAbC",
										"targetUrl": "https://webhook.site/*your-webhook-id*/",
										"createdAt": "2020-01-27T16:55:41.902Z",
										"type": "linkedinSent",
										"campaignId": "cam_T3U4V5W6X7Y8Z9A1B2"
									},
									{
										"_id": "hoo_6PQrstUv0xyZaBcDe",
										"targetUrl": "https://enlb9b4ykqu67a7.m.pipedream.net/1a2b3c4d",
										"createdAt": "2021-10-04T20:18:29.504Z",
										"campaignId": "cam_M5N4O3P2Q1R9S8T7U6"
									},
									{
										"_id": "hoo_7RSTuvWx1yzAbCdEf",
										"targetUrl": "https://enlb9b4ykqu67a7.m.pipedream.net/2b3c4d5e",
										"createdAt": "2022-05-21T02:34:17.678Z",
										"type": "linkedinInterested",
										"campaignId": "cam_T3U4V5W6X7Y8Z9A1B2"
									}
								]
							}
						}
					}
				}
			},
			"post": {
				"summary": "Add a webhook",
				"tags": [
					"Webhooks"
				],
				"parameters": [
					{
						"name": "campaignId",
						"in": "query",
						"required": false,
						"description": "(Optional) We'll call this hook only for this campaignId.",
						"example": "{{campaignId}}",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "isFirst",
						"in": "query",
						"required": false,
						"description": "(Optional) We'll call this hook only the first time this activity happened.",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "zapId",
						"in": "query",
						"required": false,
						"description": "(Optional) Zapier ID",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success with specific data",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"targetUrl": {
											"type": "string",
											"format": "uri"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										},
										"type": {
											"type": "string"
										},
										"campaignId": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "hoo_orQP33YrZgeKkswJK",
									"targetUrl": "https://webhook.site/*your-webhook-id*/",
									"createdAt": "2024-07-11T13:55:06.276Z",
									"type": "linkedinInterested",
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
								}
							}
						}
					},
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"targetUrl": {
											"type": "string",
											"format": "uri"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										}
									}
								},
								"example": {
									"_id": "hoo_dJt787EqeEmo7yxab",
									"targetUrl": "https://webhook.site/*your-webhook-id*/",
									"createdAt": "2024-07-11T13:51:44.918Z"
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object"
							},
							"example": null
						}
					}
				}
			}
		},
		"/hooks/{hookId}": {
			"parameters": [
				{
					"name": "hookId",
					"in": "path",
					"required": true,
					"example": "{{hookId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"delete": {
				"summary": "Delete a webhook",
				"tags": [
					"Webhooks"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"targetUrl": {
											"type": "string",
											"format": "uri"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										},
										"type": {
											"type": "string"
										},
										"campaignId": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "hoo_orQP33YrZgeKkswJK",
									"targetUrl": "https://webhook.site/*your-webhook-id*/",
									"createdAt": "2024-07-11T13:55:06.276Z",
									"type": "linkedinInterested",
									"campaignId": "cam_A1B2C3D4E5F6G7H8I9"
								}
							}
						}
					},
					"404": {
						"headers": {},
						"description": "Not found"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object"
							},
							"example": {}
						}
					}
				}
			}
		},
		"/enrich/{enrichId}": {
			"parameters": [
				{
					"name": "enrichId",
					"in": "path",
					"required": true,
					"example": "{{enrichId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Enrich",
				"tags": [
					"Enrich"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Date": {
								"schema": {
									"type": "string"
								},
								"example": "Thu, 25 Jul 2024 12:43:46 GMT"
							},
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							},
							"Transfer-Encoding": {
								"schema": {
									"type": "string"
								},
								"example": "chunked"
							},
							"Connection": {
								"schema": {
									"type": "string"
								},
								"example": "keep-alive"
							},
							"alt-svc": {
								"schema": {
									"type": "string"
								},
								"example": "h3=\":443\"; ma=86400"
							},
							"retry-after": {
								"schema": {
									"type": "integer"
								},
								"example": "2"
							},
							"strict-transport-security": {
								"schema": {
									"type": "string"
								},
								"example": "max-age=31536000;"
							},
							"x-cache-debug": {
								"schema": {
									"type": "string"
								},
								"example": "api.lemlist.com.main"
							},
							"x-ratelimit-limit": {
								"schema": {
									"type": "integer"
								},
								"example": "20"
							},
							"x-ratelimit-remaining": {
								"schema": {
									"type": "integer"
								},
								"example": "19"
							},
							"x-ratelimit-reset": {
								"schema": {
									"type": "string"
								},
								"example": "Thu Jul 25 2024 14:43:48 GMT+0200 (Central European Summer Time)"
							},
							"CF-Cache-Status": {
								"schema": {
									"type": "string"
								},
								"example": "DYNAMIC"
							},
							"Report-To": {
								"schema": {
									"type": "string"
								},
								"example": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=DQ1KfiXbkGxHGj7Z7KRjPRGp1%2BchU%2B4NBnZh1gGrfjVi7MYzfE4PxdmrJ6Ms2BqbDg1Wyp7rFPrpcgzyvSz73zdSKNAL0wFT3YO6ouBfcPweCzJ05%2FTn8jPI%2FFDv7bpXOf4%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
							},
							"NEL": {
								"schema": {
									"type": "string"
								},
								"example": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
							},
							"Server": {
								"schema": {
									"type": "string"
								},
								"example": "cloudflare"
							},
							"CF-RAY": {
								"schema": {
									"type": "integer"
								},
								"example": "8a8c3ccbb83ac991-IAD"
							},
							"Content-Encoding": {
								"schema": {
									"type": "string"
								},
								"example": "br"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"enrichmentId": {
											"type": "string"
										},
										"enrichmentStatus": {
											"type": "string"
										},
										"input": {
											"type": "object",
											"properties": {
												"firstName": {
													"type": "string"
												},
												"lastName": {
													"type": "string"
												},
												"linkedinUrl": {
													"type": "string",
													"format": "uri"
												},
												"companyName": {
													"type": "string"
												},
												"companyDomain": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object",
											"properties": {
												"email": {
													"type": "object",
													"properties": {
														"email": {
															"type": "string",
															"format": "email"
														},
														"notFound": {
															"type": "boolean"
														}
													}
												}
											}
										}
									}
								},
								"example": {
									"enrichmentId": "enr_Peve9ExBG9XqwrmeM",
									"enrichmentStatus": "done",
									"input": {
										"firstName": "John",
										"lastName": "Lempire",
										"linkedinUrl": "https://www.linkedin.com/in/lempire",
										"companyName": "lempire",
										"companyDomain": "lempire.com"
									},
									"data": {
										"email": {
											"email": "john@lempire.co",
											"notFound": false
										}
									}
								}
							}
						}
					},
					"202": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "In progress",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"enrichmentId": {
											"type": "string"
										},
										"enrichmentStatus": {
											"type": "string"
										},
										"input": {
											"type": "object",
											"properties": {
												"firstName": {
													"type": "string"
												},
												"lastName": {
													"type": "string"
												},
												"linkedinUrl": {
													"type": "string",
													"format": "uri"
												},
												"companyName": {
													"type": "string"
												},
												"companyDomain": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										}
									}
								},
								"example": {
									"enrichmentId": "enr_rPAyaF4ASG9YWL3wk",
									"enrichmentStatus": "in-progress",
									"input": {
										"firstName": "John",
										"lastName": "Lempire",
										"linkedinUrl": "https://www.linkedin.com/in/lempire",
										"companyName": "lempire",
										"companyDomain": "lempire.com"
									},
									"data": {}
								}
							}
						}
					},
					"404": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"enrichmentId": {
											"type": "string"
										},
										"enrichmentStatus": {
											"type": "string"
										},
										"error": {
											"type": "string"
										},
										"data": {
											"type": "object"
										}
									}
								},
								"example": {
									"enrichmentId": "enr_t3WsF23sActKexff",
									"enrichmentStatus": "not-found",
									"error": "Enrichment not found",
									"data": {}
								}
							}
						}
					}
				}
			}
		},
		"/enrich": {
			"parameters": [],
			"post": {
				"summary": "Enrich",
				"tags": [
					"Enrich"
				],
				"parameters": [
					{
						"name": "findEmail",
						"in": "query",
						"required": false,
						"description": "Boolean | Find verified email | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "verifyEmail",
						"in": "query",
						"required": false,
						"description": "Boolean | Verify existing email (debounce) | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "linkedinEnrichment",
						"in": "query",
						"required": false,
						"description": "Boolean | Run the LinkedIn enrichment | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"description": "(Optional) Email",
						"example": "john.doe@fake.com",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "linkedinUrl",
						"in": "query",
						"required": false,
						"description": "(Optional) LinkedIn URL",
						"example": "https://www.linkedin.com/in/john-doe",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "firstName",
						"in": "query",
						"required": false,
						"description": "(Optional) First name",
						"example": "John",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "lastName",
						"in": "query",
						"required": false,
						"description": "(Optional) Last name",
						"example": "Doe",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "companyDomain",
						"in": "query",
						"required": false,
						"description": "(Optional) Prospect company's domain",
						"example": "https://www.fakecompany.com",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "companyName",
						"in": "query",
						"required": false,
						"description": "(Optional) Prospect company's name",
						"example": "Fake company",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "findPhone",
						"in": "query",
						"required": false,
						"description": "Boolean | Find phone number | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "webhookUrl",
						"in": "query",
						"required": false,
						"description": "(Optional) Webhook URL for enrichment events",
						"example": "https:/webhook.site/*your-webhook-id*/",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										}
									}
								},
								"example": {
									"id": "enr_pRSGEaMP7rrCfFPx5"
								}
							}
						}
					},
					"400": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Missing enrichment params",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": "No enrichment requested (findEmail, findPhone, linkedinEnrichment or verifyEmail required)"
								}
							}
						}
					}
				}
			}
		},
		"/leads/{leadId}/enrich": {
			"parameters": [
				{
					"name": "leadId",
					"in": "path",
					"required": true,
					"example": "{{leadId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Enrich Lead",
				"tags": [
					"Enrich"
				],
				"parameters": [
					{
						"name": "findEmail",
						"in": "query",
						"required": false,
						"description": "Boolean | Search email address in another campaign, will not insert the lead if email address already inserted\n | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "verifyEmail",
						"in": "query",
						"required": false,
						"description": "Boolean | Find verified email\n | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "linkedinEnrichment",
						"in": "query",
						"required": false,
						"description": "Boolean | Run the LinkedIn enrichment\n | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "findPhone",
						"in": "query",
						"required": false,
						"description": "Boolean | Find phone number | Default: false",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "webhookUrl",
						"in": "query",
						"required": false,
						"description": "(Optional) Webhook URL for enrichment events",
						"example": "https:/webhook.site/*your-webhook-id*/",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Error Invalid leadId",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": "Invalid leadId"
								}
							}
						}
					},
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										}
									}
								},
								"example": {
									"id": "enr_gLpC97CBdER2kpn7z"
								}
							}
						}
					}
				}
			}
		},
		"/v2/enrichments/bulk": {
			"parameters": [],
			"post": {
				"summary": "Bulk enrichments",
				"tags": [
					"Enrich"
				],
				"parameters": [
					{
						"name": "webhookUrl",
						"in": "query",
						"required": false,
						"description": "(Optional) Webhook URL for enrichment events",
						"example": "https:/webhook.site/*your-webhook-id*/",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "find_email",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"metadata": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"example": [
									{
										"id": "enr_7y2vszPS5F6C9qLEg",
										"metadata": {
											"id": "some_id"
										}
									},
									{
										"id": "enr_4e1vEfOA3F7D9dJHd",
										"metadata": "some_id"
									},
									{
										"error": "MISSING_INPUTS",
										"metadata": "some_id"
									}
								]
							}
						}
					},
					"400": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": "WRONG_INPUT_FORMAT"
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"input": {
											"type": "object",
											"properties": {
												"linkedinUrl": {
													"type": "string"
												},
												"email": {
													"type": "string"
												},
												"companyName": {
													"type": "string"
												},
												"companyDomain": {
													"type": "string"
												},
												"firstName": {
													"type": "string"
												},
												"lastName": {
													"type": "string"
												}
											}
										},
										"enrichmentRequests": {
											"type": "array",
											"items": {
												"type": "string"
											}
										},
										"metadata": {
											"type": "object",
											"properties": {
												"some_id": {
													"type": "string"
												}
											}
										}
									}
								}
							},
							"example": [
								{
									"input": {
										"linkedinUrl": "{{input_linkedin_url}}",
										"email": "{{input_email}}",
										"companyName": "{{input_company_name}}",
										"companyDomain": "{{input_company_domain}}",
										"firstName": "{{input_first_name}}",
										"lastName": "{{input_last_name}}"
									},
									"enrichmentRequests": [
										"find_email",
										"find_phone",
										"verify",
										"linkedin_enrichment"
									],
									"metadata": {
										"some_id": "some_id"
									}
								}
							]
						}
					}
				}
			}
		},
		"/database/filters": {
			"parameters": [],
			"get": {
				"summary": "Filters",
				"tags": [
					"People database"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"filterId": {
												"type": "string"
											},
											"description": {
												"type": "string"
											},
											"mode": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"type": {
												"type": "string"
											},
											"helper": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"filterId": "filterId",
										"description": "filterId description",
										"mode": [
											"leads",
											"companies"
										],
										"type": "text",
										"helper": "Use free text search (to fill the in and/or out array)"
									}
								]
							}
						}
					}
				}
			}
		},
		"/database/people": {
			"parameters": [],
			"post": {
				"summary": "People database",
				"tags": [
					"People database"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"results": {
											"type": "array",
											"items": {}
										},
										"total": {
											"type": "integer"
										},
										"took": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"size": {
											"type": "integer"
										},
										"search": {
											"type": "string"
										},
										"limitation": {
											"type": "integer"
										},
										"team": {
											"type": "string"
										}
									}
								},
								"example": {
									"results": [],
									"total": 18540918,
									"took": 903,
									"page": 1,
									"size": 100,
									"search": "lsh_ENeC6oBSdwSArkywL",
									"limitation": 999,
									"team": "tea_MtScZ2GexXzHXRdTr"
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"filters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"filterId": {
													"type": "string"
												},
												"in": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"out": {
													"type": "array",
													"items": {}
												}
											}
										}
									},
									"page": {
										"type": "integer"
									}
								}
							},
							"example": {
								"filters": [
									{
										"filterId": "country",
										"in": [
											"France"
										],
										"out": []
									}
								],
								"page": 1
							}
						}
					}
				}
			}
		},
		"/schema/people": {
			"parameters": [],
			"get": {
				"summary": "People schema",
				"tags": [
					"People database"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"schema": {
											"type": "object",
											"properties": {
												"lead_id": {
													"type": "integer"
												},
												"canonical_shorthand_name": {
													"type": "string"
												},
												"connections_count": {
													"type": "integer"
												},
												"country": {
													"type": "string"
												},
												"full_name": {
													"type": "string"
												},
												"education": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"activities_and_societies": {
																"type": "string"
															},
															"created": {
																"type": "string",
																"format": "style"
															},
															"date_from": {
																"type": "string",
																"format": "utc-millisec"
															},
															"date_to": {
																"type": "string",
																"format": "utc-millisec"
															},
															"deleted": {
																"type": "string",
																"format": "utc-millisec"
															},
															"description": {
																"type": "string"
															},
															"id": {
																"type": "string",
																"format": "utc-millisec"
															},
															"last_updated": {
																"type": "string",
																"format": "style"
															},
															"member_id": {
																"type": "string",
																"format": "utc-millisec"
															},
															"school_url": {
																"type": "string",
																"format": "uri"
															},
															"subtitle": {
																"type": "string"
															},
															"title": {
																"type": "string"
															}
														}
													}
												},
												"experience_count": {
													"type": "integer"
												},
												"experiences": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"company_id": {
																"type": "integer"
															},
															"company_description": {
																"type": "string"
															},
															"company_employee_count": {
																"type": "integer"
															},
															"company_followers_count": {
																"type": "integer"
															},
															"company_founded": {
																"type": "integer"
															},
															"company_headquarters_city": {
																"type": "string"
															},
															"company_headquarters_country": {
																"type": "string"
															},
															"company_industry": {
																"type": "string"
															},
															"company_linkedin_url": {
																"type": "string",
																"format": "uri"
															},
															"company_logo_url": {
																"type": "string",
																"format": "uri"
															},
															"company_name": {
																"type": "string"
															},
															"company_size": {
																"type": "string"
															},
															"company_type": {
																"type": "string"
															},
															"company_url": {
																"type": "string",
																"format": "uri"
															},
															"company_website_url": {
																"type": "string",
																"format": "uri"
															},
															"employees_count_bucket": {
																"type": "string"
															},
															"revenue_bucket": {
																"type": "string"
															},
															"company_domain": {
																"type": "string"
															},
															"employees_count_growth": {
																"type": "integer"
															},
															"company_is_hiring": {
																"type": "boolean"
															},
															"company_function_array": {
																"type": "array",
																"items": {
																	"type": "string"
																}
															},
															"last_funding_round_at": {
																"type": "string",
																"format": "date"
															},
															"techno_used_array": {
																"type": "array",
																"items": {
																	"type": "string"
																}
															},
															"business_business_customer": {
																"type": "string",
																"format": "color"
															},
															"current_exp_bucket": {
																"type": "string"
															},
															"created": {
																"type": "string",
																"format": "style"
															},
															"date_from": {
																"type": "string"
															},
															"date_to": {
																"type": "string"
															},
															"description": {
																"type": "string"
															},
															"duration": {
																"type": "string"
															},
															"id": {
																"type": "string",
																"format": "utc-millisec"
															},
															"last_updated": {
																"type": "string",
																"format": "style"
															},
															"location": {
																"type": "string"
															},
															"member_id": {
																"type": "string",
																"format": "utc-millisec"
															},
															"order_in_profile": {
																"type": "integer"
															},
															"title": {
																"type": "string"
															},
															"title_normalized": {
																"type": "string"
															},
															"main_in_profile": {
																"type": "boolean"
															}
														}
													}
												},
												"interests": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"interest": {
																"type": "string"
															},
															"interest_id": {
																"type": "string"
															}
														}
													}
												},
												"languages": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"language": {
																"type": "string"
															},
															"proficiency": {
																"type": "string"
															}
														}
													}
												},
												"last_updated": {
													"type": "string",
													"format": "style"
												},
												"lead_industry": {
													"type": "string"
												},
												"lead_linkedin_url": {
													"type": "string",
													"format": "uri"
												},
												"lead_logo_url": {
													"type": "string",
													"format": "uri"
												},
												"linkedin_short": {
													"type": "string"
												},
												"location": {
													"type": "string"
												},
												"skills": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"skill": {
																"type": "string"
															},
															"skill_id": {
																"type": "string"
															}
														}
													}
												},
												"summary": {
													"type": "string"
												},
												"title": {
													"type": "string"
												},
												"lead_quality_score": {
													"type": "integer"
												},
												"seniority": {
													"type": "string"
												},
												"department": {
													"type": "string"
												},
												"connections_count_bucket": {
													"type": "string"
												},
												"years_of_exp_bucket": {
													"type": "string"
												},
												"current_exp_company_name": {
													"type": "string"
												},
												"geopoint": {
													"type": "array",
													"items": {
														"type": "number"
													}
												},
												"_score": {
													"type": "number"
												},
												"_id": {
													"type": "string",
													"format": "utc-millisec"
												}
											}
										},
										"version": {
											"type": "integer"
										}
									}
								},
								"example": {
									"schema": {
										"lead_id": 231488528,
										"canonical_shorthand_name": "john-doe-123456718",
										"connections_count": 500,
										"country": "United States",
										"full_name": "John Doe",
										"education": [
											{
												"activities_and_societies": "AI Research Club, Robotics Team",
												"created": "2024-01-17 06:49:05 UTC",
												"date_from": "2019",
												"date_to": "2022",
												"deleted": "0",
												"description": "Focus on Machine Learning and Data Science",
												"id": "2630204628",
												"last_updated": "2024-01-17 06:49:05 UTC",
												"member_id": "231488528",
												"school_url": "https://university.edu/profile",
												"subtitle": "Master of Science in Computer Science",
												"title": "Stanford University"
											}
										],
										"experience_count": 3,
										"experiences": [
											{
												"company_id": 789012,
												"company_description": "Leading AI and Machine Learning Solutions Provider",
												"company_employee_count": 5000,
												"company_followers_count": 50000,
												"company_founded": 2010,
												"company_headquarters_city": "San Francisco",
												"company_headquarters_country": "United States",
												"company_industry": "Information Technology",
												"company_linkedin_url": "https://linkedin.com/company/techcorp",
												"company_logo_url": "https://company.com/logo.png",
												"company_name": "TechCorp Inc.",
												"company_size": "1001-5000 employees",
												"company_type": "Public Company",
												"company_url": "https://linkedin.com/company/techcorp",
												"company_website_url": "https://techcorp.com",
												"employees_count_bucket": "1001-5000",
												"revenue_bucket": "$50M - $100M",
												"company_domain": "techcorp.com",
												"employees_count_growth": 25,
												"company_is_hiring": true,
												"company_function_array": [
													"Engineering",
													"Research",
													"Information Technology"
												],
												"last_funding_round_at": "2023-12-15",
												"techno_used_array": [
													"Python",
													"TensorFlow",
													"AWS",
													"Docker"
												],
												"business_business_customer": "B2B",
												"current_exp_bucket": "1 to 3 years",
												"created": "2024-01-17 04:41:50 UTC",
												"date_from": "Jan 2022",
												"date_to": "Present",
												"description": "Leading AI initiatives and machine learning projects",
												"duration": "2 years 1 month",
												"id": "2194433831662",
												"last_updated": "2024-01-17 04:41:50 UTC",
												"location": "San Francisco Bay Area",
												"member_id": "231488528",
												"order_in_profile": 1,
												"title": "Senior Machine Learning Engineer",
												"title_normalized": "Senior Machine Learning Engineer",
												"main_in_profile": true
											}
										],
										"interests": [
											{
												"interest": "Artificial Intelligence",
												"interest_id": "ai-123"
											},
											{
												"interest": "Machine Learning",
												"interest_id": "ml-456"
											}
										],
										"languages": [
											{
												"language": "English",
												"proficiency": "native or bilingual proficiency"
											},
											{
												"language": "Spanish",
												"proficiency": "professional working proficiency"
											}
										],
										"last_updated": "2024-01-17 06:49:05 UTC",
										"lead_industry": "Technology",
										"lead_linkedin_url": "https://linkedin.com/in/john-doe-123456789",
										"lead_logo_url": "https://media.linkedin.com/photo.jpg",
										"linkedin_short": "john-doe-123456789",
										"location": "San Francisco Bay Area, California",
										"skills": [
											{
												"skill": "Machine Learning",
												"skill_id": "ml-789"
											},
											{
												"skill": "Python Programming",
												"skill_id": "python-101"
											}
										],
										"summary": "Senior Machine Learning Engineer with 8+ years of experience in AI and data science. Focused on developing scalable ML solutions for enterprise clients.",
										"title": "Senior Machine Learning Engineer at TechCorp Inc.",
										"lead_quality_score": 85,
										"seniority": "Senior",
										"department": "Engineering",
										"connections_count_bucket": "500+",
										"years_of_exp_bucket": "5-10 years",
										"current_exp_company_name": "TechCorp Inc.",
										"geopoint": [
											-122.4194155,
											37.7749295
										],
										"_score": 8.6079,
										"_id": "231488528"
									},
									"version": 18
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"filters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"filterId": {
													"type": "string"
												},
												"in": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"out": {
													"type": "array",
													"items": {}
												}
											}
										}
									},
									"page": {
										"type": "integer"
									}
								}
							},
							"example": {
								"filters": [
									{
										"filterId": "country",
										"in": [
											"France"
										],
										"out": []
									}
								],
								"page": 1
							}
						}
					}
				}
			}
		},
		"/database/companies": {
			"parameters": [],
			"post": {
				"summary": "Companies database",
				"tags": [
					"People database"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"results": {
											"type": "array",
											"items": {}
										},
										"total": {
											"type": "integer"
										},
										"took": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"size": {
											"type": "integer"
										},
										"search": {
											"type": "string"
										},
										"limitation": {
											"type": "integer"
										},
										"team": {
											"type": "string"
										}
									}
								},
								"example": {
									"results": [],
									"total": 18540918,
									"took": 903,
									"page": 1,
									"size": 100,
									"search": "lsh_ENeC6oBSdwSArkywL",
									"limitation": 999,
									"team": "tea_MtScZ2GexXzHXRdTr"
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"filters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"filterId": {
													"type": "string"
												},
												"in": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"out": {
													"type": "array",
													"items": {}
												}
											}
										}
									},
									"page": {
										"type": "integer"
									}
								}
							},
							"example": {
								"filters": [
									{
										"filterId": "currentCompanyTechnologies",
										"in": [
											"Postman"
										],
										"out": []
									}
								],
								"page": 1
							}
						}
					}
				}
			}
		},
		"/schema/companies": {
			"parameters": [],
			"get": {
				"summary": "Companies schema",
				"tags": [
					"People database"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"schema": {
											"type": "object",
											"properties": {
												"company_id": {
													"type": "integer"
												},
												"company_website_url": {
													"type": "string",
													"format": "uri"
												},
												"company_name": {
													"type": "string"
												},
												"company_linkedin_url": {
													"type": "string",
													"format": "uri"
												},
												"last_updated": {
													"type": "string",
													"format": "style"
												},
												"company_headquarters_city": {
													"type": "string"
												},
												"company_headquarters_country": {
													"type": "string"
												},
												"company_logo_url": {
													"type": "string",
													"format": "uri"
												},
												"company_description": {
													"type": "string"
												},
												"company_employee_count": {
													"type": "integer"
												},
												"company_type": {
													"type": "string"
												},
												"company_founded": {
													"type": "integer"
												},
												"company_size": {
													"type": "string"
												},
												"company_followers_count": {
													"type": "integer"
												},
												"employees_count_bucket": {
													"type": "string"
												},
												"revenue_bucket": {
													"type": "string"
												},
												"company_domain": {
													"type": "string"
												},
												"employees_count_growth": {
													"type": "integer"
												},
												"company_is_hiring": {
													"type": "boolean"
												},
												"company_function_array": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"last_funding_round_at": {
													"type": "string",
													"format": "date"
												},
												"techno_used_array": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"business_business_customer": {
													"type": "string",
													"format": "color"
												},
												"company_quality_score": {
													"type": "integer"
												},
												"company_industry": {
													"type": "string"
												},
												"company_sub_industry": {
													"type": "string"
												},
												"company_location": {
													"type": "string"
												}
											}
										},
										"version": {
											"type": "integer"
										}
									}
								},
								"example": {
									"schema": {
										"company_id": 7842391,
										"company_website_url": "https://www.innovatetech.io",
										"company_name": "InnovateTech Solutions",
										"company_linkedin_url": "https://www.linkedin.com/company/innovatetech-solutions",
										"last_updated": "2024-03-15 09:30:22 UTC",
										"company_headquarters_city": "Austin",
										"company_headquarters_country": "United States",
										"company_logo_url": "https://media.linkedin.com/companies/innovatetech/logo_200_200.png",
										"company_description": "InnovateTech Solutions is a leading provider of AI-powered enterprise software solutions. We specialize in developing cutting-edge machine learning applications that help businesses automate their workflows and make data-driven decisions. Our team of experts combines deep technical knowledge with industry expertise to deliver transformative solutions.",
										"company_employee_count": 245,
										"company_type": "Privately Held",
										"company_founded": 2018,
										"company_size": "201-500 employees",
										"company_followers_count": 15000,
										"employees_count_bucket": "201-500",
										"revenue_bucket": "$50M - $100M",
										"company_domain": "innovatetech.io",
										"employees_count_growth": 35,
										"company_is_hiring": true,
										"company_function_array": [
											"Software Development",
											"Artificial Intelligence",
											"Enterprise Solutions",
											"Cloud Computing"
										],
										"last_funding_round_at": "2023-11-15",
										"techno_used_array": [
											"Python",
											"TensorFlow",
											"AWS",
											"Docker",
											"Kubernetes",
											"React",
											"Node.js",
											"PostgreSQL"
										],
										"business_business_customer": "B2B",
										"company_quality_score": 85,
										"company_industry": "Information Technology",
										"company_sub_industry": "Enterprise Software",
										"company_location": "Austin, Texas, United States"
									},
									"version": 2
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"filters": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"filterId": {
													"type": "string"
												},
												"in": {
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"out": {
													"type": "array",
													"items": {}
												}
											}
										}
									},
									"page": {
										"type": "integer"
									}
								}
							},
							"example": {
								"filters": [
									{
										"filterId": "country",
										"in": [
											"France"
										],
										"out": []
									}
								],
								"page": 1
							}
						}
					}
				}
			}
		},
		"/tasks": {
			"parameters": [],
			"get": {
				"summary": "Tasks",
				"tags": [
					"Tasks"
				],
				"parameters": [],
				"responses": {
					"default": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Tasks",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"results": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"_id": {
														"type": "string"
													},
													"type": {
														"type": "string"
													},
													"leadId": {
														"type": "string"
													},
													"campaignId": {
														"type": "string"
													},
													"contactId": {
														"type": "string"
													},
													"dueDate": {
														"type": "string",
														"format": "date-time"
													},
													"userId": {
														"type": "string"
													}
												}
											}
										},
										"page": {
											"type": "integer"
										}
									}
								},
								"example": {
									"results": [
										{
											"_id": "opp_vDuwoqRopZ4ygeApq",
											"type": "phone",
											"leadId": "lea_4ZnGoytR5uoZs7Bod",
											"campaignId": "cam_fX7SwMGyooxFLeeiM",
											"contactId": "ctc_iSW6pi7AFnufvhgeS",
											"dueDate": "2025-02-13T10:02:35.209Z",
											"userId": "usr_6Y58qbtsYv2rCHQiJ"
										},
										{
											"_id": "opp_22vSBY7pNKskQ9XDX",
											"type": "phone",
											"leadId": "lea_4QqkLsi3gDawLsRLP",
											"campaignId": "cam_fX7SwMGyooxFLeeiM",
											"contactId": "ctc_Ak6dK4XGT73kgYoHe",
											"dueDate": "2025-02-13T10:02:35.208Z",
											"userId": "usr_6Y58qbtsYv2rCHQiJ"
										},
										{
											"_id": "opp_wa9CizcCzWMyWQMab",
											"type": "phone",
											"leadId": "lea_T478Y3PBtunxLA3uD",
											"campaignId": "cam_ZoNvbA4nnE9T3T3Xp",
											"contactId": "ctc_Bpy8KPvJuCkGGbYJ2",
											"dueDate": "2025-02-13T09:08:53.061Z",
											"userId": "usr_6Y58qbtsYv2rCHQiJ"
										},
										{
											"_id": "opp_qJFeKB4pdofKAiTpS",
											"type": "phone",
											"leadId": "lea_fZKPKs29MwsZwruj8",
											"campaignId": "cam_ZoNvbA4nnE9T3T3Xp",
											"contactId": "ctc_8dKYwwv2pGmupjamP",
											"dueDate": "2025-02-13T09:08:53.061Z",
											"userId": "usr_6Y58qbtsYv2rCHQiJ"
										}
									],
									"page": 0
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Tasks",
				"tags": [
					"Tasks"
				],
				"parameters": [],
				"responses": {
					"default": {
						"headers": {},
						"description": "Tasks"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"leadId": {
										"type": "string"
									}
								}
							},
							"example": {
								"leadId": "lea_sMsXBnXd7mG2XdxFR"
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Tasks",
				"tags": [
					"Tasks"
				],
				"parameters": [],
				"responses": {
					"default": {
						"headers": {},
						"description": "Opportunities"
					}
				}
			}
		},
		"/tasks/ignore": {
			"parameters": [],
			"post": {
				"summary": "Ignore tasks",
				"tags": [
					"Tasks"
				],
				"parameters": [],
				"responses": {
					"default": {
						"headers": {},
						"description": "Ignore tasks"
					}
				}
			}
		},
		"/inbox": {
			"parameters": [],
			"get": {
				"summary": "Retrieve inbox list",
				"tags": [
					"Inbox"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"description": "(Optional): The page number to retrieve",
						"example": "1",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "(Optional,): The maximum number of records to return",
						"example": "2",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"_id": {
														"type": "string"
													},
													"opportunities": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"id": {
																	"type": "string"
																},
																"type": {
																	"type": "string"
																},
																"done": {
																	"type": "boolean"
																}
															}
														}
													},
													"lastActivityAt": {
														"type": "string",
														"format": "date-time"
													},
													"createdBy": {
														"type": "string"
													},
													"teamId": {
														"type": "string"
													},
													"contactId": {
														"type": "string"
													},
													"users": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"userId": {
																	"type": "string"
																},
																"sender": {
																	"type": "boolean"
																},
																"read": {
																	"type": "boolean"
																}
															}
														}
													},
													"createdAt": {
														"type": "string",
														"format": "date-time"
													},
													"channels": {
														"type": "array",
														"items": {
															"type": "string"
														}
													},
													"haveReplies": {
														"type": "boolean"
													},
													"lastRepliedAt": {
														"type": "string",
														"format": "date-time"
													},
													"lastRepliedChannel": {
														"type": "string"
													}
												}
											}
										},
										"pagination": {
											"type": "object",
											"properties": {
												"totalItems": {
													"type": "integer"
												},
												"currentPage": {
													"type": "integer"
												},
												"nextPage": {
													"nullable": true
												},
												"previousPage": {
													"nullable": true
												},
												"perPage": {
													"type": "integer"
												},
												"totalPages": {
													"type": "integer"
												}
											}
										}
									}
								},
								"example": {
									"data": [
										{
											"_id": "ibx_rvuPJaMgtYHKxaLbZ",
											"opportunities": [
												{
													"id": "opp_DfmAnvgMTccsKkNid",
													"type": "manual",
													"done": true
												},
												{
													"id": "opp_xShTpqQhnqsh97bxT",
													"type": "phone"
												}
											],
											"lastActivityAt": "2025-03-27T13:28:53.499Z",
											"createdBy": "usr_h47tiJr87Zn7XtQHi",
											"teamId": "tea_8GdMrBZ3gf4p2rj2h",
											"contactId": "ctc_yHXD3NWjPg7Z9MuWZ",
											"users": [
												{
													"userId": "usr_6k77bkJP3qhRMXtjH",
													"sender": true,
													"read": false
												}
											],
											"createdAt": "2025-01-30T16:24:02.620Z",
											"channels": [
												"email"
											],
											"haveReplies": true,
											"lastRepliedAt": "2025-03-25T14:18:05.000Z",
											"lastRepliedChannel": "email"
										}
									],
									"pagination": {
										"totalItems": 1,
										"currentPage": 1,
										"nextPage": null,
										"previousPage": null,
										"perPage": 10,
										"totalPages": 1
									}
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"userId": {
										"type": "string"
									}
								}
							},
							"example": {
								"userId": "usr_vvv9vehz2Ghvgbedv"
							}
						}
					}
				}
			}
		},
		"/inbox/{contactId}": {
			"parameters": [
				{
					"name": "contactId",
					"in": "path",
					"required": true,
					"example": "{{contactId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Contact messages",
				"tags": [
					"Inbox"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "query",
						"required": false,
						"description": "Optional, ID of the user viewing the conversation",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "Optional, The maximum number of records to return",
						"example": "10",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "skip",
						"in": "query",
						"required": false,
						"description": "Optional, number of items to skip (default: 0)",
						"example": "1",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "markAsRead",
						"in": "query",
						"required": false,
						"description": "Optional boolean, defaults to false. When true, marks the",
						"example": "true",
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"_id": {
														"type": "string"
													},
													"type": {
														"type": "string"
													},
													"messageId": {
														"type": "string"
													},
													"cc": {
														"type": "array",
														"items": {}
													},
													"createdAt": {
														"type": "string",
														"format": "date-time"
													},
													"teamId": {
														"type": "string"
													},
													"leadId": {
														"type": "string"
													},
													"campaignId": {
														"type": "string"
													},
													"sendUserId": {
														"type": "string"
													},
													"sendUserName": {
														"type": "string"
													},
													"sendUserEmail": {
														"type": "string",
														"format": "email"
													},
													"sendUserMailboxId": {
														"type": "string"
													},
													"leadEmail": {
														"type": "string",
														"format": "email"
													},
													"contactId": {
														"type": "string"
													},
													"message": {
														"type": "string",
														"format": "style"
													},
													"subject": {
														"type": "string"
													},
													"attachments": {
														"type": "array",
														"items": {}
													}
												}
											}
										},
										"pagination": {
											"type": "object",
											"properties": {
												"totalItems": {
													"type": "integer"
												},
												"currentPage": {
													"type": "integer"
												},
												"nextPage": {
													"type": "integer"
												},
												"previousPage": {
													"nullable": true
												},
												"perPage": {
													"type": "integer"
												},
												"totalPages": {
													"type": "integer"
												}
											}
										}
									}
								},
								"example": {
									"data": [
										{
											"_id": "act_dPHwKSRHeNjx8ZLMg",
											"type": "emailsSent",
											"messageId": "<CAGOomWZRBCXq-RLaBpVCnUiFHDorajbSntSYObaxe-1Cyee+CQ@mail.gmail.com>",
											"cc": [],
											"createdAt": "2025-03-27T13:28:53.499Z",
											"teamId": "tea_8GdMrBZ3gf4p2rj2h",
											"leadId": "lea_7HAh3odqPKamkBTv9",
											"campaignId": "cam_DuGGzG6Fvoy7GNvro",
											"sendUserId": "usr_h47tiJr87Zn7XtQHi",
											"sendUserName": "Chafik Gharbi",
											"sendUserEmail": "chafik@lemtest.com",
											"sendUserMailboxId": "usm_CE8QtNtgMjTHjfaL8",
											"leadEmail": "chafikgharbi1@gmail.com",
											"contactId": "ctc_yHXD3NWjPg7Z9MuWZ",
											"message": "<html><div style=\"min-width: 360px\"></div>Test API\n<span summary=\"/api/reply/data-ll-tsk_7o37E4vrR4kwjtZnZ\"></span>\n<img alt=\"logo\" src=\"http://localhost:8000/api/track/open/usr_h47tiJr87Zn7XtQHi/tsk_7o37E4vrR4kwjtZnZ\" height=\"1\" width=\"1\"></html>",
											"subject": "Test API",
											"attachments": []
										}
									],
									"pagination": {
										"totalItems": 22,
										"currentPage": 1,
										"nextPage": 2,
										"previousPage": null,
										"perPage": 1,
										"totalPages": 22
									}
								}
							}
						}
					}
				}
			}
		},
		"/inbox/email": {
			"parameters": [],
			"post": {
				"summary": "Send email",
				"tags": [
					"Inbox"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"sendUserId": {
										"type": "string"
									},
									"sendUserEmail": {
										"type": "string"
									},
									"sendUserMailboxId": {
										"type": "string"
									},
									"contactId": {
										"type": "string"
									},
									"leadId": {
										"type": "string"
									},
									"subject": {
										"type": "string"
									},
									"message": {
										"type": "string"
									},
									"cc": {
										"type": "array",
										"items": {}
									}
								}
							},
							"example": {
								"sendUserId": "{{sendUserId}}",
								"sendUserEmail": "{{sendUserEmail}}",
								"sendUserMailboxId": "{{sendUserMailboxId}}",
								"contactId": "{{contactId}}",
								"leadId": "{{leadId}}",
								"subject": "{{subject}}",
								"message": "{{message}}",
								"cc": []
							}
						}
					}
				}
			}
		},
		"/inbox/linkedin": {
			"parameters": [],
			"post": {
				"summary": "Send LinkedIn message",
				"tags": [
					"Inbox"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"sendUserId": {
										"type": "string"
									},
									"leadId": {
										"type": "string"
									},
									"contactId": {
										"type": "string"
									},
									"message": {
										"type": "string"
									}
								}
							},
							"example": {
								"sendUserId": "{{sendUserId}}",
								"leadId": "{{leadId}}",
								"contactId": "{{contactId}}",
								"message": "{{message}}"
							}
						}
					}
				}
			}
		},
		"/inbox/whatsapp": {
			"parameters": [],
			"post": {
				"summary": "Send WhatsApp message",
				"tags": [
					"Inbox"
				],
				"parameters": [
					{
						"name": "Content-Type",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"sendUserId": {
										"type": "string"
									},
									"sendUserWhatsappAccountId": {
										"type": "string"
									},
									"contactId": {
										"type": "string"
									},
									"leadId": {
										"type": "string"
									},
									"message": {
										"type": "string"
									}
								}
							},
							"example": {
								"sendUserId": "{{sendUserId}}",
								"sendUserWhatsappAccountId": "{{sendUserWhatsappAccountId}}",
								"contactId": "{{contactId}}",
								"leadId": "{{leadId}}",
								"message": "{{message}}"
							}
						}
					}
				}
			}
		},
		"/contacts/{idOrEmail}": {
			"parameters": [
				{
					"name": "idOrEmail",
					"in": "path",
					"required": true,
					"example": "{{idOrEmail}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Get contact",
				"tags": [
					"Contacts"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"_id": {
											"type": "string"
										},
										"teamId": {
											"type": "string"
										},
										"email": {
											"type": "string",
											"format": "email"
										},
										"fullName": {
											"type": "string"
										},
										"fields": {
											"type": "object",
											"properties": {
												"firstName": {
													"type": "string"
												},
												"lastName": {
													"type": "string"
												},
												"company": {
													"type": "string"
												}
											}
										},
										"campaigns": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"campaignId": {
														"type": "string"
													},
													"campaignState": {
														"type": "string"
													},
													"leadState": {
														"type": "string"
													}
												}
											}
										},
										"ownerId": {
											"type": "string"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										},
										"createdBy": {
											"type": "string"
										}
									}
								},
								"example": {
									"_id": "ctc_Ri5gMtaeDGufRQ3M2",
									"teamId": "tea_8GdMrBZ3gf4p2rj2h",
									"email": "chafik@lempire.co",
									"fullName": "Chafik Gharbi",
									"fields": {
										"firstName": "Chafik",
										"lastName": "Gharbi",
										"company": "lempire"
									},
									"campaigns": [
										{
											"campaignId": "cam_C7BW5Z5ycSiRRWef6",
											"campaignState": "running",
											"leadState": "review"
										}
									],
									"ownerId": "usr_h47tiJr87Zn7XtQHi",
									"createdAt": "2025-07-18T10:03:41.612Z",
									"createdBy": "usr_h47tiJr87Zn7XtQHi"
								}
							}
						}
					}
				}
			}
		},
		"/contacts": {
			"parameters": [],
			"get": {
				"summary": "Get contacts",
				"tags": [
					"Contacts"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"_id": {
												"type": "string"
											},
											"teamId": {
												"type": "string"
											},
											"email": {
												"type": "string",
												"format": "email"
											},
											"fullName": {
												"type": "string"
											},
											"fields": {
												"type": "object",
												"properties": {
													"firstName": {
														"type": "string"
													},
													"lastName": {
														"type": "string"
													},
													"company": {
														"type": "string"
													}
												}
											},
											"campaigns": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"campaignId": {
															"type": "string"
														},
														"campaignState": {
															"type": "string"
														},
														"leadState": {
															"type": "string"
														}
													}
												}
											},
											"ownerId": {
												"type": "string"
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											},
											"createdBy": {
												"type": "string"
											}
										}
									}
								},
								"example": [
									{
										"_id": "ctc_Ri5gMtaeDGufRQ3M2",
										"teamId": "tea_8GdMrBZ3gf4p2rj2h",
										"email": "chafik@lempire.co",
										"fullName": "Chafik Gharbi",
										"fields": {
											"firstName": "Chafik",
											"lastName": "Gharbi",
											"company": "lempire"
										},
										"campaigns": [
											{
												"campaignId": "cam_C7BW5Z5ycSiRRWef6",
												"campaignState": "running",
												"leadState": "review"
											}
										],
										"ownerId": "usr_h47tiJr87Zn7XtQHi",
										"createdAt": "2025-07-18T10:03:41.612Z",
										"createdBy": "usr_h47tiJr87Zn7XtQHi"
									},
									{
										"_id": "ctc_Lznm3LZ8DMR4WS3r8",
										"teamId": "tea_8GdMrBZ3gf4p2rj2h",
										"email": "chafik2@lempire.co",
										"fullName": "Chafik Gharbi",
										"fields": {
											"firstName": "Chafik",
											"lastName": "Gharbi",
											"company": "lempire"
										},
										"campaigns": [
											{
												"campaignId": "cam_C7BW5Z5ycSiRRWef6",
												"campaignState": "running",
												"leadState": "review"
											}
										],
										"ownerId": "usr_h47tiJr87Zn7XtQHi",
										"createdAt": "2025-07-18T10:03:41.612Z",
										"createdBy": "usr_h47tiJr87Zn7XtQHi"
									}
								]
							}
						}
					}
				}
			}
		},
		"/lemwarm/{userMailboxId}/start": {
			"parameters": [
				{
					"name": "userMailboxId",
					"in": "path",
					"required": true,
					"example": "{{userMailboxId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Start",
				"tags": [
					"lemwarm"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object"
							},
							"example": {}
						}
					}
				}
			}
		},
		"/lemwarm/{userMailboxId}/pause": {
			"parameters": [
				{
					"name": "userMailboxId",
					"in": "path",
					"required": true,
					"example": "{{userMailboxId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Pause",
				"tags": [
					"lemwarm"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object"
							},
							"example": {}
						}
					}
				}
			}
		},
		"/lemwarm/{userMailboxId}/settings": {
			"parameters": [
				{
					"name": "userMailboxId",
					"in": "path",
					"required": true,
					"example": "{{userMailboxId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"summary": "Get settings",
				"tags": [
					"lemwarm"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"warmEmailRampup": {
											"type": "integer"
										},
										"warmEmailMax": {
											"type": "integer"
										},
										"activeAt": {
											"type": "string",
											"format": "date-time"
										},
										"warmNextEmailAt": {
											"type": "string",
											"format": "date-time"
										},
										"lastWarmAt": {
											"type": "string",
											"format": "date-time"
										},
										"deliverability": {
											"type": "object",
											"properties": {
												"details": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"mx": {
																"type": "object",
																"properties": {
																	"ok": {
																		"type": "boolean"
																	},
																	"message": {
																		"type": "object",
																		"properties": {
																			"mx": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"properties": {
																						"exchange": {
																							"type": "string"
																						},
																						"priority": {
																							"type": "integer"
																						}
																					}
																				}
																			}
																		}
																	}
																}
															},
															"spf": {
																"type": "object",
																"properties": {
																	"ok": {
																		"type": "boolean"
																	},
																	"message": {
																		"type": "string",
																		"format": "style"
																	}
																}
															},
															"dmarc": {
																"type": "object",
																"properties": {
																	"ok": {
																		"type": "boolean"
																	},
																	"message": {
																		"type": "string"
																	},
																	"warning": {
																		"type": "string"
																	}
																}
															},
															"ctd": {
																"type": "object",
																"properties": {
																	"ok": {
																		"type": "boolean"
																	},
																	"userConfigured": {
																		"type": "boolean"
																	},
																	"userMailboxConfigured": {
																		"type": "boolean"
																	},
																	"isEmpty": {
																		"type": "boolean"
																	},
																	"message": {
																		"type": "string"
																	}
																}
															},
															"dnsScore": {
																"type": "integer"
															}
														}
													}
												},
												"lastAt": {
													"type": "string",
													"format": "date-time"
												},
												"score": {
													"type": "integer"
												},
												"tips": {
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"example": {
									"warmEmailRampup": 5,
									"warmEmailMax": 5,
									"activeAt": "2025-04-10T07:38:31.530Z",
									"warmNextEmailAt": "2025-04-10T07:38:31.530Z",
									"lastWarmAt": "2025-04-09T13:53:03.229Z",
									"deliverability": {
										"details": [
											{
												"mx": {
													"ok": true,
													"message": {
														"mx": [
															{
																"exchange": "ASPMX.L.GOOGLE.com",
																"priority": 1
															},
															{
																"exchange": "ALT1.ASPMX.L.GOOGLE.com",
																"priority": 5
															},
															{
																"exchange": "ALT2.ASPMX.L.GOOGLE.com",
																"priority": 5
															},
															{
																"exchange": "ALT4.ASPMX.L.GOOGLE.com",
																"priority": 10
															},
															{
																"exchange": "ALT3.ASPMX.L.GOOGLE.com",
																"priority": 10
															}
														]
													}
												},
												"spf": {
													"ok": true,
													"message": "v=spf1 include:_spf.google.com ~all<br>"
												},
												"dmarc": {
													"ok": true,
													"message": "v=DMARC1; p=quarantine; rua=mailto:dmarc@lemlist.com",
													"warning": ""
												},
												"ctd": {
													"ok": false,
													"userConfigured": false,
													"userMailboxConfigured": false,
													"isEmpty": true,
													"message": "custom tracking domain is not configured"
												},
												"dnsScore": 100
											},
											{
												"statCount": 0,
												"total": 0
											},
											{
												"mailboxAge": 30
											},
											{
												"dnsNormal": 40,
												"inboxStatsNormal": 0,
												"totalEmailSentNormal": 0,
												"ageNormal": 10,
												"totalEmailSent": 0,
												"blacklistsInfo": {
													"score": 100
												}
											}
										],
										"lastAt": "2025-04-09T13:34:43.998Z",
										"score": 70,
										"tips": [
											"If you send cold emails, make sure to set up your Custom Tracking Domain. This allows you to track open and click rates in your emails safely.",
											"You just started lemwarm. Let's wait a bit before we can trust this score.",
											null
										]
									}
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object"
							},
							"example": {}
						}
					}
				}
			},
			"patch": {
				"summary": "Update settings",
				"tags": [
					"lemwarm"
				],
				"parameters": [
					{
						"name": "Content",
						"in": "header",
						"required": false,
						"example": "application/json",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"headers": {
							"Content-Type": {
								"schema": {
									"type": "string"
								},
								"example": "application/json"
							}
						},
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"ok": {
											"type": "boolean"
										}
									}
								},
								"example": {
									"ok": true
								}
							}
						}
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"warmEmailMax": {
										"type": "string"
									},
									"warmEmailRampup": {
										"type": "string"
									}
								}
							},
							"example": {
								"warmEmailMax": "{{warmEmailMax}}",
								"warmEmailRampup": "{{warmEmailRampup}}"
							}
						}
					}
				}
			}
		},
		"/companies": {
			"parameters": [],
			"get": {
				"summary": "Retrieve Companies",
				"tags": [
					"Companies"
				],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": false,
						"description": "(Optional) Page to show",
						"example": "1",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"description": "(Optional): The field by which to sort the schedules. Currently, only \"createdAt\" is supported",
						"example": "createdAt",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sortOrder",
						"in": "query",
						"required": false,
						"description": "(Optional): The sort direction. Use \"desc\" for descending order; any other value (or omission) will sort in ascending order",
						"example": "desc",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "search",
						"in": "query",
						"required": false,
						"description": "(Optional): Search by company name, case insensitive",
						"example": "lemlist",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "fields",
						"in": "query",
						"required": false,
						"description": "(Optional): Returns selected fields, returns all fields if empty, each field is separated by a coma. \n",
						"example": "_id,fields.name,domain",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "(Optional) Number of companies to retrieve. 100 per default ( and 100 max ).",
						"example": "10",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		},
		"/companies/{companyId}/notes": {
			"parameters": [
				{
					"name": "companyId",
					"in": "path",
					"required": true,
					"example": "{{companyId}}",
					"schema": {
						"type": "string"
					}
				}
			],
			"post": {
				"summary": "Create company note",
				"tags": [
					"Companies"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Success"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"note": {
										"type": "string"
									}
								}
							},
							"example": {
								"note": "Note created from the Api !"
							}
						}
					}
				}
			},
			"get": {
				"summary": "Retrieve company notes",
				"tags": [
					"Companies"
				],
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"required": false,
						"description": "(Optional) Number of notes to retrieve. 100 per default ( and 100 max ).",
						"example": "2",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"description": "(Optional) Page to show",
						"example": "1",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "sortBy",
						"in": "query",
						"required": false,
						"description": "(Optional): The field by which to sort the schedules. Currently, only \"createdAt\" is supported",
						"example": "createdAt",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sortOrder",
						"in": "query",
						"required": false,
						"description": "(Optional): The sort direction. Use \"desc\" for descending order; any other value (or omission) will sort in ascending order",
						"example": "desc",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success"
					}
				}
			}
		}
	}
}