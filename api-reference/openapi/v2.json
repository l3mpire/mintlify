{
    "openapi": "3.0.0",
    "info": {
        "title": "lemlist API",
        "version": "1.0.0",
        "description": "Welcome to the lemlist Developer Documentation.\n\nlemlist is very customizable and open. You'll find on this page all the API and integration you can do with lemlist.\n\n# Rate Limit\n\nlemlist's API rate limits requests in order to prevent abuse and overload of our services.  \nRate limits are applied on all routes and per API key performing the request.  \nThe rate limits are **20** requests per **2** seconds.  \nThe response provides any information you may need about it:\n\n| Header | Description |\n| --- | --- |\n| Retry-After | The number of seconds in which you can retry |\n| X-RateLimit-Limit | The maximum requests in that time |\n| X-RateLimit-Remaining | The number of remaining requests you can make |\n| X-RateLimit-Reset | The date when the rate limit will reset |\n\n_Example of values for the rate limit headers_\n\n``` json\n{\n    \"Retry-After\": 2,\n    \"X-RateLimit-Limit\": 20,\n    \"X-RateLimit-Remaining\": 7,\n    \"X-RateLimit-Reset\" : \"Tue Feb 16 2021 09:02:42 GMT+0100 (Central European Standard Time)\"\n}\n\n ```\n\n# Definitions\n\n## Team\n\nA team is the entity of lemlist that can handle users and billing.\n\n## Credits\n\nCredits are the coins a team uses to enrich emails, LinkedIn URLs, etc. via the enrich route. Each enrichment feature needs a certain amount of credits to run.\n\n## User\n\nYou use a user account to connect to lemlist and send messages via the connected emails or LinkedIn account.\n\n## Campaign\n\nA campaign is the entity to automate outreach. A campaign has multiple sequences composed of steps.\n\n## Lead\n\nA lead is a person that you try to contact via a campaign.\n\n## Activity\n\nAn activity is the history of all the steps.\n\n## Unsubscribe\n\nAn unsubscribe occurs when a person decides they don't want to receive emails from you anymore.\n\n# Authentication\n\nAll API routes use the dedicated subdomain `api.lemlist.com`.\n\nlemlist uses API keys to allow access to the API. You can get your lemlist API key at our [integration page](https://app.lemlist.com/settings/integrations).\n\nYou need to add the `Authorization` header using the `Basic` authentication type. `login:password` **where the login is always empty and the password is the API key**.\n\n⚠️ **Don't forget to add the semicolon (**`:`**) before your API key in curl command.**\n\n> To authorize, use this code: \n  \n\n``` shell\ncurl https://api.lemlist.com/api/team \\\n  --user \":YourApiKey\"\n\n ```\n\n**Make sure to replace** **`YourApiKey`** **with your API key.**\n\n# Give feedback\n\nIf you want to report a bug, ask for data, or share with us a use case, please fill this [form](https://lemlist.typeform.com/to/mfVlkyGf). It will help us centralize your needs!"
    },
    "servers": [
        {
            "url": "https://api.lemlist.com/api"
        }
    ],
    "security": [
        {
            "basicAuth": [
                {
                    "description": "Basic authentication scheme for API access. Note: The login field must remain empty - only the API key should be provided as the password.",
                    "type": "http",
                    "scheme": "basic",
                    "x-basic-info-link": "https://developer.lemlist.com/reference/authentication"
                }
            ]
        }
    ],
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Use an empty username and your API key as the password"
            }
        }
    },
    "paths": {
        "/team": {
            "get": {
                "summary": "Get Team",
                "tags": [
                    "Team"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "userIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "createdBy": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "hooks": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string"
                                                    },
                                                    "targetUrl": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "zapId": {
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "campaignId": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "beta": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "slackWebhook": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "invitedUsers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email"
                                                    },
                                                    "role": {
                                                        "type": "string"
                                                    },
                                                    "invitedBy": {
                                                        "type": "string"
                                                    },
                                                    "invitedAt": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            }
                                        },
                                        "agency": {
                                            "type": "string"
                                        },
                                        "pictureId": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "tea_c123fg5h8ijKL9noP",
                                    "name": "lemlist-admin",
                                    "userIds": [
                                        "usr_V7dQtF3sBnOv6LY5w",
                                        "usr_P5jMxR2yZhLt8BC4t",
                                        "usr_K2gTwJ7vXpRs3NF8p"
                                    ],
                                    "createdBy": "usr_H8wrBoV4mtQx2NP6k",
                                    "createdAt": "2018-02-22T08:52:30.732Z",
                                    "hooks": [
                                        {
                                            "_id": "hoo_3JKlmnOp7qrStuvWx",
                                            "targetUrl": "https://hooks.zapier.com/hooks/standard/*your-webhook-id*/",
                                            "createdAt": "2020-04-07T09:12:34.674Z",
                                            "zapId": 83355551,
                                            "type": "emailsOpened",
                                            "campaignId": "cam_A1B2C3D4E5F6G7H8I9"
                                        },
                                        {
                                            "_id": "hoo_4LMnopQr8stUvWxYz",
                                            "targetUrl": "https://hooks.zapier.com/hooks/standard/*your-webhook-id*/",
                                            "createdAt": "2020-05-05T09:58:17.795Z",
                                            "zapId": 86330503,
                                            "type": "emailsOpened",
                                            "campaignId": "cam_K9L8M7N6O5P4Q3R2S1"
                                        }
                                    ],
                                    "beta": [
                                        "scroll"
                                    ],
                                    "slackWebhook": "https://hooks.slack.com/services/REDACTED/REDACTED/REDACTED",
                                    "invitedUsers": [
                                        {
                                            "email": "emily.johnson@example.com",
                                            "role": "admin",
                                            "invitedBy": "usr_A1xPwN8zYkGt9JD3q",
                                            "invitedAt": "2023-11-22T14:14:04.617Z"
                                        },
                                        {
                                            "email": "david.wilson@example.com",
                                            "role": "member",
                                            "invitedBy": "usr_L9mKrU5vWpHt2ZX1r",
                                            "invitedAt": "2024-04-03T21:55:08.105Z"
                                        }
                                    ],
                                    "agency": "usr_H8wrBoV4mtQx2NP6k",
                                    "pictureId": "fil_AaBbCcDdEeFfGgHhI8.png"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: No API key provided / Bad team",
                        "content": {
                            "text/plain": {
                                "example": "No API key provided"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "403": {
                        "description": "User linked to this API key is blocked",
                        "content": {
                            "text/plain": {
                                "example": "User linked to this API key is blocked"
                            }
                        }
                    },
                    "404": {
                        "description": "No user found for this API key",
                        "content": {
                            "text/plain": {
                                "example": "No user found for this API key"
                            }
                        }
                    }
                }
            }
        },
        "/team/senders": {
            "get": {
                "summary": "Get Team Senders",
                "tags": [
                    "Team"
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "description": "Filter by campaign's state (running, paused, draft, ended, archived, errors)",
                        "example": "running",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "running",
                                "paused",
                                "draft",
                                "ended",
                                "archived",
                                "errors"
                            ]
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "userId": {
                                                "type": "string"
                                            },
                                            "campaigns": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "sendingChannels": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "userId": "usr_T3dhQkG8xzCv4MU1e",
                                        "campaigns": [
                                            {
                                                "_id": "cam_A1B2C3D4E5F6G7H8I9",
                                                "name": "Insights Outreach 2024",
                                                "status": "draft",
                                                "sendingChannels": [
                                                    "linkedinInvite",
                                                    "linkedinVisit",
                                                    "linkedinSend",
                                                    "email"
                                                ]
                                            },
                                            {
                                                "_id": "cam_K9L8M7N6O5P4Q3R2S1",
                                                "name": "Discover Solutions Campaign",
                                                "status": "ended",
                                                "sendingChannels": [
                                                    "linkedinInvite",
                                                    "email"
                                                ]
                                            },
                                            {
                                                "_id": "cam_T3U4V5W6X7Y8Z9A1B2",
                                                "name": "Unlock Potential Initiative",
                                                "status": "running",
                                                "sendingChannels": [
                                                    "linkedinInvite"
                                                ]
                                            },
                                            {
                                                "_id": "cam_M5N4O3P2Q1R9S8T7U6",
                                                "name": "Future Innovations Outreach",
                                                "status": "paused",
                                                "sendingChannels": [
                                                    "linkedinInvite",
                                                    "email"
                                                ]
                                            },
                                            {
                                                "_id": "cam_G6H7I8J9K0L1M2N3O4",
                                                "name": "Insightful Solutions Drive",
                                                "status": "ended",
                                                "sendingChannels": [
                                                    "linkedinInvite",
                                                    "linkedinVisit",
                                                    "linkedinSend",
                                                    "email"
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "userId": "usr_L7vsBnX5ykPw2TA9r",
                                        "campaigns": [
                                            {
                                                "_id": "cam_K9L8M7N6O5P4Q3R2S1",
                                                "name": "Discover Solutions Campaign",
                                                "status": "ended",
                                                "sendingChannels": [
                                                    "email"
                                                ]
                                            },
                                            {
                                                "_id": "cam_T3U4V5W6X7Y8Z9A1B2",
                                                "name": "Unlock Potential Initiative",
                                                "status": "running",
                                                "sendingChannels": [
                                                    "linkedinVisit"
                                                ]
                                            },
                                            {
                                                "_id": "cam_M5N4O3P2Q1R9S8T7U6",
                                                "name": "Future Innovations Outreach",
                                                "status": "paused",
                                                "sendingChannels": [
                                                    "email"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad params (invalid state parameter)",
                        "content": {
                            "text/plain": {
                                "example": "Bad params (invalid state parameter)"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/team/credits": {
            "get": {
                "summary": "Get Team Credits",
                "tags": [
                    "Team"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "credits": {
                                            "type": "integer"
                                        },
                                        "details": {
                                            "type": "object",
                                            "properties": {
                                                "remaining": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "freemium": {
                                                            "type": "integer"
                                                        },
                                                        "subscription": {
                                                            "type": "integer"
                                                        },
                                                        "gifted": {
                                                            "type": "integer"
                                                        },
                                                        "paid": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "credits": 100,
                                    "details": {
                                        "remaining": {
                                            "total": 100,
                                            "freemium": 0,
                                            "subscription": 80,
                                            "gifted": 10,
                                            "paid": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No API key provided",
                        "content": {
                            "text/plain": {
                                "example": "No API key provided"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "403": {
                        "description": "User linked to this API key is blocked",
                        "content": {
                            "text/plain": {
                                "example": "User linked to this API key is blocked"
                            }
                        }
                    },
                    "404": {
                        "description": "No user found for this API key",
                        "content": {
                            "text/plain": {
                                "example": "No user found for this API key"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/team/crmUsers": {
            "get": {
                "summary": "Get Team CRM Users",
                "tags": [
                    "Team"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "userId": {
                                                "type": "string"
                                            },
                                            "crm": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "userId": "usr_h47tiJr87Zn7XtQHi",
                                        "crm": "salesforce"
                                    },
                                    {
                                        "userId": "usr_h47tiJr87Zn7XtQHi",
                                        "crm": "hubspot"
                                    },
                                    {
                                        "userId": "usr_h47tiJr87Zn7XtQHi",
                                        "crm": "pipedrive"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Endpoint not available",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "parameters": [
                {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the user",
                    "example": "usr_QAucgYReK6EmMB3Cz",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get User",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "role": {
                                            "type": "string"
                                        },
                                        "linkedIn": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "inviteLimit": {
                                                    "type": "integer"
                                                },
                                                "sendLimit": {
                                                    "type": "integer"
                                                },
                                                "visitLimit": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "mailboxes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email"
                                                    },
                                                    "provider": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "lemlist": {
                                                        "type": "object",
                                                        "properties": {
                                                            "emailLimit": {
                                                                "type": "integer"
                                                            }
                                                        }
                                                    },
                                                    "lemwarm": {
                                                        "type": "object",
                                                        "properties": {
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "usr_QAucgYReK6EmMB3Cz",
                                    "email": "example@lempire.co",
                                    "role": "admin",
                                    "linkedIn": {
                                        "status": true,
                                        "inviteLimit": 25,
                                        "sendLimit": 33,
                                        "visitLimit": 36
                                    },
                                    "mailboxes": [
                                        {
                                            "_id": "usm_bsdepN6jb8zftK9Ns",
                                            "email": "example@gmail.com",
                                            "provider": "google",
                                            "status": "ERROR",
                                            "lemlist": {
                                                "emailLimit": 50
                                            },
                                            "lemwarm": {
                                                "active": false
                                            }
                                        },
                                        {
                                            "_id": "usm_gPKrqoNxaXxScTpPh",
                                            "email": "example@outlook.com",
                                            "status": "ERROR",
                                            "lemlist": {
                                                "emailLimit": 50
                                            },
                                            "lemwarm": {
                                                "active": false
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Endpoint not available",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "get": {
                "summary": "Get Many Campaigns",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "description": "Offset from the start. For pagination.",
                        "example": "24",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Number of campaigns to retrieve. Default: 100. Maximum: 100.",
                        "example": "2",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "description": "Set to 'v2' to use the latest version",
                        "example": "v2",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "v1",
                                "v2"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number to retrieve",
                        "example": "1",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "description": "The field by which to sort. Currently, only 'createdAt' is supported.",
                        "example": "createdAt",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "createdAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "description": "The sort direction. Use 'desc' for descending order; any other value (or omission) will sort in ascending order.",
                        "example": "desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "description": "The campaign status. Can be: running, draft, archived, ended, paused, errors. Note: a campaign can be in multiple statuses at one time (e.g., a paused campaign with errors).",
                        "example": "running",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "running",
                                "draft",
                                "archived",
                                "ended",
                                "paused",
                                "errors"
                            ]
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "labels": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "createdBy": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "_id": "cam_A1B2C3D4E5F6G7H8I9",
                                        "name": "Insights Outreach 2024",
                                        "labels": [
                                            "Insightful"
                                        ],
                                        "createdAt": "2024-02-29T11:00:11.293Z",
                                        "createdBy": "usr_T3dhQkG8xzCv4MU1e",
                                        "status": "running"
                                    },
                                    {
                                        "_id": "cam_K9L8M7N6O5P4Q3R2S1",
                                        "name": "Discover Solutions Campaign",
                                        "labels": [
                                            "Solutions",
                                            "Future-Ready"
                                        ],
                                        "createdAt": "2024-02-29T11:00:11.293Z",
                                        "createdBy": "usr_T3dhQkG8xzCv4MU1e",
                                        "archived": true,
                                        "status": "ended",
                                        "isEnded": true
                                    },
                                    {
                                        "_id": "cam_M5N4O3P2Q1R9S8T7U6",
                                        "name": "Future Innovations Outreach",
                                        "createdAt": "2024-02-15T09:00:15.272Z",
                                        "createdBy": "usr_T3dhQkG8xzCv4MU1e",
                                        "status": "paused"
                                    },
                                    {
                                        "_id": "cam_G6H7I8J9K0L1M2N3O4",
                                        "name": "Insightful Solutions Drive",
                                        "createdAt": "2024-01-25T13:00:11.293Z",
                                        "createdBy": "usr_T3dhQkG8xzCv4MU1e",
                                        "labels": [
                                            "Insightful",
                                            "Solutions"
                                        ],
                                        "status": "draft",
                                        "hasError": true
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "No API key provided",
                        "content": {
                            "text/plain": {
                                "example": "No API key provided"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "403": {
                        "description": "User linked to this API key is blocked",
                        "content": {
                            "text/plain": {
                                "example": "User linked to this API key is blocked"
                            }
                        }
                    },
                    "404": {
                        "description": "No user found for this API key",
                        "content": {
                            "text/plain": {
                                "example": "No user found for this API key"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Campaign",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "sequenceId": {
                                            "type": "string"
                                        },
                                        "scheduleIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "teamId": {
                                            "type": "string"
                                        },
                                        "createdBy": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "state": {
                                            "type": "string"
                                        },
                                        "scannedCount": {
                                            "type": "integer"
                                        },
                                        "reviewedCount": {
                                            "type": "integer"
                                        },
                                        "inSequenceLeadCount": {
                                            "type": "integer"
                                        },
                                        "variableKeys": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "senders": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "sendUsers": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "displayedVariableKeys": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "emoji": {
                                            "type": "string"
                                        },
                                        "stopOnEmailReplied": {
                                            "type": "boolean"
                                        },
                                        "crmOpportunitiesOnTask": {
                                            "type": "boolean"
                                        },
                                        "unsubscribe": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "crm": {
                                            "type": "string"
                                        },
                                        "crmUserId": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "cam_WN3M22c3gDs4eQDXN",
                                    "sequenceId": "seq_hPj7N88tCgpFYgtnj",
                                    "scheduleIds": [
                                        "skd_isFGZkjSsvJZ7CfRx"
                                    ],
                                    "teamId": "tea_MtScZ2GexXzHXRdTr",
                                    "createdBy": "usr_XCQktNJNa79X5Tvnh",
                                    "createdAt": "2025-01-16T13:53:22.726Z",
                                    "state": "running",
                                    "scannedCount": 0,
                                    "reviewedCount": 0,
                                    "inSequenceLeadCount": 0,
                                    "variableKeys": [],
                                    "senders": [],
                                    "sendUsers": [],
                                    "displayedVariableKeys": [
                                        "companyName"
                                    ],
                                    "emoji": "🚀",
                                    "stopOnEmailReplied": true,
                                    "crmOpportunitiesOnTask": true,
                                    "unsubscribe": "campaign",
                                    "name": "My new campaign",
                                    "crm": "hubspot",
                                    "crmUserId": "usr_BXJcMBSk7pwhdqAL2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No API key provided",
                        "content": {
                            "text/plain": {
                                "example": "No API key provided"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "403": {
                        "description": "User linked to this API key is blocked",
                        "content": {
                            "text/plain": {
                                "example": "User linked to this API key is blocked"
                            }
                        }
                    },
                    "404": {
                        "description": "No user found for this API key",
                        "content": {
                            "text/plain": {
                                "example": "No user found for this API key"
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the campaign"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            },
                            "example": {
                                "name": "My new campaign"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Campaign",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "labels": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "createdBy": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "cam_A1B2C3D4E5F6G7H8I9",
                                    "name": "Insights Outreach 2024",
                                    "labels": [
                                        "Insightful"
                                    ],
                                    "createdAt": "2024-02-29T11:00:11.293Z",
                                    "createdBy": "usr_T3dhQkG8xzCv4MU1e",
                                    "status": "running"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Campaign",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "stopOnEmailReplied": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "example": {
                                    "name": "New campaign name",
                                    "stopOnEmailReplied": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The campaign name"
                                    },
                                    "stopOnEmailReplied": {
                                        "type": "boolean",
                                        "description": "Stop the campaign when a lead replies by email"
                                    },
                                    "stopOnMeetingBooked": {
                                        "type": "boolean",
                                        "description": "Stop the campaign when a meeting is booked"
                                    },
                                    "stopOnLinkClicked": {
                                        "type": "boolean",
                                        "description": "Stop the campaign when a link is clicked"
                                    },
                                    "leadsPausedByInterest": {
                                        "type": "boolean",
                                        "description": "Pause leads based on interest"
                                    },
                                    "opportunityReplied": {
                                        "type": "boolean",
                                        "description": "Create an opportunity when a lead replies"
                                    },
                                    "opportunityClicked": {
                                        "type": "boolean",
                                        "description": "Create an opportunity when a lead clicks a link"
                                    },
                                    "autoLeadInterest": {
                                        "type": "boolean",
                                        "description": "Automatically detect lead interest"
                                    },
                                    "disableTrackOpen": {
                                        "type": "boolean",
                                        "description": "Disable tracking of email opens"
                                    },
                                    "disableTrackClick": {
                                        "type": "boolean",
                                        "description": "Disable tracking of link clicks"
                                    },
                                    "disableTrackReply": {
                                        "type": "boolean",
                                        "description": "Disable tracking of email replies"
                                    },
                                    "stopOnLinkClickedFilter": {
                                        "type": "string",
                                        "description": "Filter for which link clicks should stop the campaign"
                                    }
                                }
                            },
                            "example": {
                                "name": "New campaign name",
                                "stopOnEmailReplied": false,
                                "stopOnMeetingBooked": true,
                                "stopOnLinkClicked": false
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/pause": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Pause Campaign",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "state": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "cam_A1B2C3D4E5F6G7H8I9",
                                    "state": "paused"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/export/start": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign to export",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Start Campaign Stats Export",
                "description": "Start an asynchronous export of all campaign statistics. The final export result is a CSV file.",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Export started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "description": "The unique identifier of the export"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "The unique identifier of the export (same as _id)"
                                        },
                                        "teamId": {
                                            "type": "string",
                                            "description": "The team identifier"
                                        },
                                        "campaignId": {
                                            "type": "string",
                                            "description": "The campaign identifier"
                                        },
                                        "campaignName": {
                                            "type": "string",
                                            "description": "The name of the campaign"
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "pending",
                                                "done",
                                                "error"
                                            ],
                                            "description": "Current status of the export"
                                        },
                                        "startedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "When the export was started"
                                        },
                                        "progressIndex": {
                                            "type": "integer",
                                            "description": "Current progress index"
                                        },
                                        "progressTime": {
                                            "type": "integer",
                                            "description": "Timestamp of progress"
                                        },
                                        "progressLastStepDuration": {
                                            "type": "integer",
                                            "description": "Duration of last step in milliseconds"
                                        },
                                        "progressType": {
                                            "type": "string",
                                            "description": "Type of current progress step"
                                        },
                                        "progress": {
                                            "type": "integer",
                                            "description": "Number of items processed"
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "Total number of items to process"
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "axp_7dKLTwqpjxzR5vh2n",
                                    "id": "axp_7dKLTwqpjxzR5vh2n",
                                    "teamId": "tea_c123fg5h8ijKL9noP",
                                    "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                    "campaignName": "Insights Outreach 2024",
                                    "status": "pending",
                                    "startedAt": "2024-07-09T13:43:52.124Z",
                                    "progressIndex": 0,
                                    "progressTime": 1720532632124,
                                    "progressLastStepDuration": 0,
                                    "progressType": "starting",
                                    "progress": 0,
                                    "total": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/export/{exportId}/status": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign that was exported",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "exportId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the export returned by the /start endpoint",
                    "example": "axp_7dKLTwqpjxzR5vh2n",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Campaign Export Status",
                "description": "Check the status of an asynchronous campaign export. Status are available for 2 hours only. An export that is still pending after 2 hours will be considered as failed and HTTP request will return 404. When you obtain the CSV file URL, you have to download the file within a 24 hours time frame. After that, the file will be deleted.",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Export status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "status": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "The unique identifier of the export"
                                                },
                                                "teamId": {
                                                    "type": "string",
                                                    "description": "The team identifier"
                                                },
                                                "campaignId": {
                                                    "type": "string",
                                                    "description": "The campaign identifier"
                                                },
                                                "campaignName": {
                                                    "type": "string",
                                                    "description": "The name of the campaign"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "done",
                                                        "error"
                                                    ],
                                                    "description": "Current status of the export"
                                                },
                                                "startedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "When the export was started"
                                                },
                                                "endedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "When the export finished (only present when done)"
                                                },
                                                "progressIndex": {
                                                    "type": "integer",
                                                    "description": "Current progress index"
                                                },
                                                "progressTime": {
                                                    "type": "integer",
                                                    "description": "Timestamp of progress"
                                                },
                                                "progressLastStepDuration": {
                                                    "type": "integer",
                                                    "description": "Duration of last step in milliseconds"
                                                },
                                                "progressType": {
                                                    "type": "string",
                                                    "description": "Type of current progress step"
                                                },
                                                "progress": {
                                                    "type": "integer",
                                                    "description": "Number of items processed"
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items to process"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "Download URL for the CSV file (only present when status is done)"
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "done": {
                                        "summary": "Export completed",
                                        "value": {
                                            "ok": true,
                                            "status": {
                                                "id": "axp_7dKLTwqpjxzR5vh2n",
                                                "teamId": "tea_c123fg5h8ijKL9noP",
                                                "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                                "campaignName": "Insights Outreach 2024",
                                                "status": "done",
                                                "startedAt": "2020-01-01T00:00:00.000Z",
                                                "endedAt": "2020-01-01T00:00:00.000Z",
                                                "progressIndex": 6,
                                                "progressTime": 1639138959979,
                                                "progressLastStepDuration": 476,
                                                "progressType": "done",
                                                "progress": 0,
                                                "total": 0,
                                                "url": "https://api.lemlist.com/api/files/exports/fil_axp_7dKLTwqpjxzR5vh2n_insights_outreach_2024.csv"
                                            }
                                        }
                                    },
                                    "pending": {
                                        "summary": "Export in progress",
                                        "value": {
                                            "ok": true,
                                            "status": {
                                                "id": "axp_7dKLTwqpjxzR5vh2n",
                                                "teamId": "tea_c123fg5h8ijKL9noP",
                                                "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                                "campaignName": "Insights Outreach 2024",
                                                "status": "pending",
                                                "startedAt": "2020-01-01T00:00:00.000Z",
                                                "progressIndex": 3,
                                                "progressTime": 1639138959979,
                                                "progressLastStepDuration": 200,
                                                "progressType": "processing",
                                                "progress": 50,
                                                "total": 100
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign or export not found",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "exportNotFound": {
                                        "summary": "Export not found",
                                        "value": {
                                            "ok": false,
                                            "message": "Export with id axp_8bALQxunkwwC3yc9p not found"
                                        }
                                    },
                                    "campaignNotFound": {
                                        "summary": "Campaign not found",
                                        "value": "Campaign not found"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/export/{exportId}/email/{email}": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign that was exported",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "exportId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the export returned by the /start endpoint",
                    "example": "axp_7dKLTwqpjxzR5vh2n",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "description": "The email address to send the export URL to when the export is done",
                    "example": "emily.johnson@example.com",
                    "schema": {
                        "type": "string",
                        "format": "email"
                    }
                }
            ],
            "put": {
                "summary": "Set Email for Campaign Export Notification",
                "description": "Set an email address for a given export. When the export is done, an email with the download URL will be sent to the address provided.",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email notification set successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "status": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "teamId": {
                                                    "type": "string"
                                                },
                                                "campaignId": {
                                                    "type": "string"
                                                },
                                                "campaignName": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "done",
                                                        "error"
                                                    ]
                                                },
                                                "startedAt": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "progressIndex": {
                                                    "type": "integer"
                                                },
                                                "progressTime": {
                                                    "type": "integer"
                                                },
                                                "progressLastStepDuration": {
                                                    "type": "integer"
                                                },
                                                "progressType": {
                                                    "type": "string"
                                                },
                                                "progress": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "fileSize": {
                                                    "type": "integer",
                                                    "description": "Size of the export file in bytes"
                                                },
                                                "endedAt": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "Download URL for the CSV file"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "description": "Email address that will receive the notification"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "ok": true,
                                    "status": {
                                        "_id": "axp_7dKLTwqpjxzR5vh2n",
                                        "id": "axp_7dKLTwqpjxzR5vh2n",
                                        "teamId": "tea_c123fg5h8ijKL9noP",
                                        "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                        "campaignName": "Insights Outreach 2024",
                                        "status": "done",
                                        "startedAt": "2024-07-11T09:49:15.278Z",
                                        "progressIndex": 6,
                                        "progressTime": 1720691355497,
                                        "progressLastStepDuration": 0,
                                        "progressType": "done",
                                        "progress": 0,
                                        "total": 0,
                                        "fileSize": 654,
                                        "endedAt": "2024-07-11T09:49:15.497Z",
                                        "url": "https://api.lemlist.com/api/files/exports/fil_axp_7dKLTwqpjxzR5vh2n_insights_outreach_2024.csv",
                                        "email": "emily.johnson@example.com"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign or export not found",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "campaignNotFound": {
                                        "summary": "Campaign not found",
                                        "value": "Campaign not found"
                                    },
                                    "exportNotFound": {
                                        "summary": "Export not found",
                                        "value": "Export not found"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/export/leads": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Export Campaign Leads",
                "description": "Export leads from a campaign with filtering options. Returns leads in CSV or JSON format based on their state (e.g., contacted, interested, replied, etc.).",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "description": "Filter to export only the specified lead's last states. Use 'all' to export all states. Can be a comma-separated list of states. **Global states**: imported, scanned, skipped, reviewed, contacted, hooked, attracted, warmed, interested, notInterested, emailsBounced, emailsUnsubscribed, failed, meetingBooked, paused. **Detailed states**: emailsSent, emailsOpened, emailsClicked, emailsReplied, emailsInterested, emailsNotInterested, emailsFailed, opportunitiesDone, aircallDone, aircallInterested, aircallNotInterested, apiDone, apiInterested, apiNotInterested, linkedinVisitDone, linkedinVisitFailed, linkedinInviteDone, linkedinInviteAccepted, linkedinInviteFailed, linkedinSent, linkedinOpened, linkedinReplied, linkedinInterested, linkedinNotInterested, linkedinSendFailed, manualInterested, manualNotInterested",
                        "example": "all",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "description": "Output format: 'json' or 'csv'. Default is CSV.",
                        "example": "json",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "csv"
                            ]
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leads exported successfully",
                        "content": {
                            "text/csv": {
                                "example": "emailStatus,email,firstName,lastName,picture,phone,linkedinUrl,companyName,companyDomain,icebreaker,firstname,lastname,jobTitle,lastState,status\ndeliverable,john.doe@domain.com,,,,,https://www.linkedin.com/in/johndoe,lempire,,,John,Doe,Developer,emailsOpened,review\nrisky,bob.smith@example.com,,,,,https://www.linkedin.com/in/bobsmith,TechWave,,,Bob,Smith,Engineer,emailsClicked,scanning\nundeliverable,susan.jones@example.org,,,,,https://www.linkedin.com/in/susanjones,Innovatech,,,Susan,Jones,Product Manager,emailsFailed,unsubscribed\ndeliverable,alice.brown@fakemail.com,,,,,https://www.linkedin.com/in/alicebrown,CreativeWorks,,,Alice,Brown,Designer,emailsReplied,interested\nrisky,michael.johnson@mockmail.net,,,,,https://www.linkedin.com/in/michaeljohnson,AlphaCorp,,,Michael,Johnson,Data Scientist,emailsNotInterested,notInterested\ndeliverable,emma.williams@samplemail.com,,,,,https://www.linkedin.com/in/emmawilliams,BetaTech,,,Emma,Williams,Marketing Specialist,emailsInterested,interested\ndeliverable,william.brown@domainexample.com,,,,,https://www.linkedin.com/in/williambrown,GammaLabs,,,William,Brown,Sales Executive,emailsSent,running\nrisky,olivia.jones@sampledomain.org,,,,,https://www.linkedin.com/in/oliviajones,DeltaInnovations,,,Olivia,Jones,HR Manager,emailsOpened,review\nundeliverable,james.taylor@mockdomain.com,,,,,https://www.linkedin.com/in/jamestaylor,EpsilonTech,,,James,Taylor,Operations Manager,emailsFailed,unsubscribed\ndeliverable,patricia.miller@fakedomain.net,,,,,https://www.linkedin.com/in/patriciamiller,ZetaIndustries,,,Patricia,Miller,Customer Success Manager,emailsReplied,interested"
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "emailStatus": {
                                                "type": "string",
                                                "enum": [
                                                    "deliverable",
                                                    "risky",
                                                    "undeliverable"
                                                ]
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email"
                                            },
                                            "firstName": {
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "type": "string"
                                            },
                                            "picture": {
                                                "type": "string"
                                            },
                                            "phone": {
                                                "type": "string"
                                            },
                                            "linkedinUrl": {
                                                "type": "string"
                                            },
                                            "companyName": {
                                                "type": "string"
                                            },
                                            "companyDomain": {
                                                "type": "string"
                                            },
                                            "icebreaker": {
                                                "type": "string"
                                            },
                                            "jobTitle": {
                                                "type": "string"
                                            },
                                            "lastState": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/reports": {
            "get": {
                "summary": "Get Campaign Reports",
                "description": "Retrieve reports for one or multiple campaigns. Returns aggregated statistics and export status for the specified campaigns.",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "campaignIds",
                        "in": "query",
                        "required": true,
                        "description": "Comma-separated list of campaign IDs to retrieve reports for",
                        "example": "cam_A1B2C3D4E5F6G7H8I9,cam_B2C3D4E5F6G7H8I9J0",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign reports retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        },
                                        "status": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "teamId": {
                                                    "type": "string"
                                                },
                                                "campaignId": {
                                                    "type": "string"
                                                },
                                                "campaignName": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending",
                                                        "done",
                                                        "error"
                                                    ]
                                                },
                                                "startedAt": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "endedAt": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "progressIndex": {
                                                    "type": "integer"
                                                },
                                                "progressTime": {
                                                    "type": "integer"
                                                },
                                                "progressLastStepDuration": {
                                                    "type": "integer"
                                                },
                                                "progressType": {
                                                    "type": "string"
                                                },
                                                "progress": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "Download URL for the CSV file"
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "ok": true,
                                    "status": {
                                        "id": "axp_7dKLTwqpjxzR5vh2n",
                                        "teamId": "tea_c123fg5h8ijKL9noP",
                                        "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                        "campaignName": "Insights Outreach 2024",
                                        "status": "done",
                                        "startedAt": "2020-01-01T00:00:00.000Z",
                                        "endedAt": "2020-01-01T00:00:00.000Z",
                                        "progressIndex": 6,
                                        "progressTime": 1639138959979,
                                        "progressLastStepDuration": 476,
                                        "progressType": "done",
                                        "progress": 0,
                                        "total": 0,
                                        "url": "https://api.lemlist.com/api/files/exports/fil_axp_7dKLTwqpjxzR5vh2n_insights_outreach_2024.csv"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/campaigns/{campaignId}/sequences": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Campaign Sequences",
                "tags": [
                    "Sequences"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string"
                                            },
                                            "steps": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            },
                                            "level": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "seq_p9qaCXrptS8XcPPNK": {
                                        "_id": "seq_p9qaCXrptS8XcPPNK",
                                        "steps": [
                                            {
                                                "_id": "stp_wHzzFZntP2FvJbeb6",
                                                "type": "linkedinInvite",
                                                "delay": 0,
                                                "emailTemplateId": "etp_5qsoi5kneNkakmPd5",
                                                "index": 1,
                                                "message": "Test invite message"
                                            },
                                            {
                                                "_id": "stp_EtKsaSW62vyFhMME4",
                                                "type": "conditional",
                                                "conditions": [
                                                    {
                                                        "sequenceId": "seq_jgBhmiQYyRd3gW8Sb",
                                                        "label": "Accepted invite",
                                                        "key": "linkedinInviteAccepted",
                                                        "delay": 1,
                                                        "delayType": "waitUntil"
                                                    },
                                                    {
                                                        "sequenceId": "seq_ET4kSR3GAkcRqp2TE",
                                                        "fallback": true
                                                    }
                                                ],
                                                "index": 2
                                            }
                                        ],
                                        "level": 0
                                    },
                                    "seq_jgBhmiQYyRd3gW8Sb": {
                                        "_id": "seq_jgBhmiQYyRd3gW8Sb",
                                        "parentId": "seq_p9qaCXrptS8XcPPNK",
                                        "conditionalStepIndex": 1,
                                        "steps": [
                                            {
                                                "_id": "stp_vMqX4wgSmqMXd2env",
                                                "type": "linkedinSend",
                                                "delay": 1,
                                                "emailTemplateId": "etp_DJqHmozZtYz4JWyyB",
                                                "index": 3,
                                                "message": "Test message"
                                            }
                                        ],
                                        "level": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Campaign has no sequence",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/sequences/{sequenceId}/steps": {
            "parameters": [
                {
                    "name": "sequenceId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the sequence",
                    "example": "seq_p9qaCXrptS8XcPPNK",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Add Step to Sequence",
                "tags": [
                    "Sequences"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "delay": {
                                            "type": "integer"
                                        },
                                        "emailTemplateId": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "stp_Z2539g5BB4qCoZBgf",
                                    "type": "linkedinInvite",
                                    "delay": 2,
                                    "emailTemplateId": "etp_LWuaE5JG4Bm4riPf5",
                                    "message": "Hello, I would like...."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Error from createStep",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "The type of step (e.g., email, linkedinInvite, linkedinSend)"
                                    },
                                    "delay": {
                                        "type": "integer",
                                        "description": "Delay in days before executing this step"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The message content for the step"
                                    }
                                }
                            },
                            "example": {
                                "type": "linkedinInvite",
                                "delay": 2,
                                "message": "Hello, I would like...."
                            }
                        }
                    }
                }
            }
        },
        "/sequences/{sequenceId}/steps/{stepId}": {
            "parameters": [
                {
                    "name": "sequenceId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the sequence",
                    "example": "seq_p9qaCXrptS8XcPPNK",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "stepId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the step",
                    "example": "stp_Z2539g5BB4qCoZBgf",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "summary": "Update Sequence Step",
                "tags": [
                    "Sequences"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "delay": {
                                            "type": "integer"
                                        },
                                        "emailTemplateId": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "stp_Z2539g5BB4qCoZBgf",
                                    "type": "linkedinInvite",
                                    "delay": 0,
                                    "emailTemplateId": "etp_xNieSJDTnd2YZ46LF",
                                    "message": "Hello, I want to...."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Error from updateStep",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "delay": {
                                        "type": "integer",
                                        "description": "Delay in days before executing this step"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "The message content for the step"
                                    }
                                }
                            },
                            "example": {
                                "delay": 0,
                                "message": "Hello, I want to...."
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Sequence Step",
                "tags": [
                    "Sequences"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "Content-Type": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "application/json"
                            }
                        },
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ok": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / You cannot delete this step because the campaign is running",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "404": {
                        "description": "Possible errors: Sequence not found / Step not found",
                        "content": {
                            "text/plain": {
                                "example": "Sequence not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "summary": "Get Many Schedules",
                "tags": [
                    "Schedules"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The page number to retrieve",
                        "example": "1",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "description": "The number of records to skip. Used if page is not provided.",
                        "example": "0",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "The maximum number of records to return",
                        "example": "2",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "description": "The field by which to sort the schedules. Currently, only 'createdAt' is supported.",
                        "example": "createdAt",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "createdAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "description": "The sort direction. Use 'desc' for descending order; any other value (or omission) will sort in ascending order.",
                        "example": "desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "schedules": [
                                        {
                                            "_id": "skd_Cyf3LZJuJamrmCMrv",
                                            "name": "Test 2",
                                            "secondsToWait": 1200,
                                            "timezone": "Atlantic/Reykjavik",
                                            "start": "08:00",
                                            "end": "18:00",
                                            "weekdays": [
                                                1,
                                                2,
                                                3,
                                                4,
                                                5
                                            ],
                                            "teamId": "tea_b834id4r7skME8mfW",
                                            "createdBy": "usr_F7iPChEQ3pSmuTiCe",
                                            "createdAt": "2025-02-06T16:29:10.217Z"
                                        }
                                    ],
                                    "pagination": {
                                        "totalRecords": 5780,
                                        "currentPage": 1,
                                        "nextPage": 2,
                                        "totalPage": 1927
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Schedule",
                "tags": [
                    "Schedules"
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the schedule",
                                        "default": "Default schedule"
                                    },
                                    "secondsToWait": {
                                        "type": "integer",
                                        "description": "Delay in seconds between operations",
                                        "default": 1200
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "description": "Timezone for the schedule (e.g., 'Europe/Paris')",
                                        "default": "Europe/Paris"
                                    },
                                    "start": {
                                        "type": "string",
                                        "description": "Start time in HH:mm format",
                                        "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$",
                                        "default": "09:00"
                                    },
                                    "end": {
                                        "type": "string",
                                        "description": "End time in HH:mm format",
                                        "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$",
                                        "default": "18:00"
                                    },
                                    "weekdays": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 7
                                        },
                                        "description": "Days of the week the schedule is active (1=Monday, 7=Sunday)",
                                        "default": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                                        ]
                                    },
                                    "public": {
                                        "type": "boolean",
                                        "description": "Set to true to make the schedule visible to use as a template",
                                        "default": false
                                    }
                                },
                                "required": [
                                    "name",
                                    "timezone",
                                    "start",
                                    "end",
                                    "weekdays"
                                ]
                            },
                            "example": {
                                "name": "Default schedule",
                                "secondsToWait": 1200,
                                "timezone": "Europe/Paris",
                                "start": "09:00",
                                "end": "18:00",
                                "weekdays": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5
                                ],
                                "public": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "secondsToWait": {
                                            "type": "integer"
                                        },
                                        "timezone": {
                                            "type": "string"
                                        },
                                        "start": {
                                            "type": "string"
                                        },
                                        "end": {
                                            "type": "string"
                                        },
                                        "weekdays": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        },
                                        "public": {
                                            "type": "boolean"
                                        },
                                        "teamId": {
                                            "type": "string"
                                        },
                                        "createdBy": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "required": [
                                        "_id",
                                        "name",
                                        "secondsToWait",
                                        "timezone",
                                        "start",
                                        "end",
                                        "weekdays",
                                        "public",
                                        "teamId",
                                        "createdBy",
                                        "createdAt"
                                    ]
                                },
                                "example": {
                                    "_id": "skd_JTb4gjdiizqPoYqzh",
                                    "name": "Default schedule",
                                    "secondsToWait": 120,
                                    "timezone": "Europe/Paris",
                                    "start": "09:00",
                                    "end": "18:00",
                                    "weekdays": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5
                                    ],
                                    "public": false,
                                    "teamId": "tea_Lq4kN7R2pqEA4YFst",
                                    "createdBy": "usr_n2PG5aHnsGErYS2Yg",
                                    "createdAt": "2025-01-17T15:17:59.207Z"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid team or schedule data)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "BadRequest",
                                    "message": "Bad team or invalid schedule fields"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "The authentication you supplied is incorrect"
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/schedules/{scheduleId}": {
            "parameters": [
                {
                    "name": "scheduleId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the schedule",
                    "example": "skd_JTb4gjdiizqPoYqzh",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Schedule",
                "tags": [
                    "Schedules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "_id": "skd_JTb4gjdiizqPoYqzh",
                                    "name": "Default schedule",
                                    "secondsToWait": 120,
                                    "timezone": "Europe/Paris",
                                    "start": "09:00",
                                    "end": "18:00",
                                    "weekdays": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5
                                    ],
                                    "teamId": "tea_Lq4kN7R2pqEA4YFst",
                                    "createdBy": "usr_n2PG5aHnsGErYS2Yg",
                                    "createdAt": "2025-01-17T15:17:59.207Z"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "text/plain": {
                                "example": "Schedule not found"
                            }
                        }
                    }
                },
                "parameters": []
            },
            "patch": {
                "summary": "Update Schedule",
                "tags": [
                    "Schedules"
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the schedule"
                                    },
                                    "secondsToWait": {
                                        "type": "integer",
                                        "description": "Delay in seconds between operations"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "description": "Timezone for the schedule (e.g., 'Europe/Paris')"
                                    },
                                    "start": {
                                        "type": "string",
                                        "description": "Start time in HH:mm format",
                                        "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$"
                                    },
                                    "end": {
                                        "type": "string",
                                        "description": "End time in HH:mm format",
                                        "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$"
                                    },
                                    "weekdays": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 7
                                        },
                                        "description": "Days of the week the schedule is active (1=Monday, 7=Sunday)"
                                    },
                                    "public": {
                                        "type": "boolean",
                                        "description": "Set to true to make the schedule visible to use as a template"
                                    }
                                }
                            },
                            "example": {
                                "name": "Schedule new name"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Schedule successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "secondsToWait": {
                                            "type": "integer"
                                        },
                                        "timezone": {
                                            "type": "string"
                                        },
                                        "start": {
                                            "type": "string"
                                        },
                                        "end": {
                                            "type": "string"
                                        },
                                        "weekdays": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            }
                                        },
                                        "public": {
                                            "type": "boolean"
                                        },
                                        "teamId": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "example": {
                                    "_id": "skd_JTb4gjdiizqPoYqzh",
                                    "name": "Schedule new name",
                                    "secondsToWait": 120,
                                    "timezone": "Europe/Paris",
                                    "start": "09:00",
                                    "end": "18:00",
                                    "weekdays": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5
                                    ],
                                    "public": false,
                                    "teamId": "tea_Lq4kN7R2pqEA4YFst",
                                    "updatedAt": "2025-01-18T10:21:42.000Z"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid data or team)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "BadRequest",
                                    "message": "Bad team or invalid schedule update"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "The authentication you supplied is incorrect"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "error": "Schedule not found"
                                }
                            }
                        }
                    }
                },
                "parameters": []
            },
            "delete": {
                "summary": "Delete Schedule",
                "tags": [
                    "Schedules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "_id": "skd_L2sKZ3HMddtrfmHGr"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "text/plain": {
                                "example": "Schedule not found"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/campaigns/{campaignId}/schedules/": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Campaign Schedules",
                "tags": [
                    "Schedules"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/campaigns/{campaignId}/schedules/{scheduleId}": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "scheduleId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the schedule",
                    "example": "skd_CBHNKLZsZr3FFJHPK",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Associate Schedule with Campaign",
                "tags": [
                    "Schedules"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "scheduleId": "skd_CBHNKLZsZr3FFJHPK",
                                    "campaignId": "cam_SaAarzTsXms8BENvR"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Possible errors: Campaign not found / Schedule not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/leads": {
            "get": {
                "summary": "Get Lead by Email or ID",
                "tags": [
                    "Leads"
                ],
                "description": "Retrieve a lead using either their email address or lead ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "description": "The lead ID. You should use at least one of 'email' or 'id'.",
                        "example": "lea_7kMNQwplxvvD2hf5z",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "description": "The lead email. You should use at least one of 'email' or 'id'.",
                        "example": "john.doe@domain.com",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "description": "API version. Default: v1",
                        "example": "v2",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "v1",
                                "v2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "email": "john.doe@domain.com",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "_id": "lea_7kMNQwplxvvD2hf5z",
                                    "isPaused": false,
                                    "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                    "emailStatus": "deliverable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    }
                }
            }
        },
        "/leads/{email}": {
            "parameters": [
                {
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "description": "The email address of the lead",
                    "example": "john.doe@domain.com",
                    "schema": {
                        "type": "string",
                        "format": "email"
                    }
                }
            ],
            "get": {
                "summary": "Get Lead by Email",
                "tags": [
                    "Leads"
                ],
                "parameters": [
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "description": "API version. Default: v1",
                        "example": "v2",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "v1",
                                "v2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "email": "john.doe@domain.com",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "picture": "https://example.com/picture.jpg",
                                    "phone": "+33 123456789",
                                    "linkedinUrl": "https://www.linkedin.com/in/johndoe",
                                    "companyName": "lempire",
                                    "companyDomain": "lempire.co",
                                    "icebreaker": "Hello John...",
                                    "jobTitle": "Developer",
                                    "_id": "lea_7kMNQwplxvvD2hf5z",
                                    "isPaused": false,
                                    "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                    "emailStatus": "deliverable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/leads/{email}": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "email",
                    "in": "path",
                    "required": true,
                    "description": "The email address of the lead",
                    "example": "john.doe@domain.com",
                    "schema": {
                        "type": "string",
                        "format": "email"
                    }
                }
            ],
            "post": {
                "summary": "Create Lead in Campaign",
                "tags": [
                    "Leads"
                ],
                "parameters": [
                    {
                        "name": "deduplicate",
                        "in": "query",
                        "required": false,
                        "description": "Search email address in other campaigns. Will not insert the lead if email address already exists. Default: false",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "linkedinEnrichment",
                        "in": "query",
                        "required": false,
                        "description": "Run the LinkedIn enrichment. Default: false",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "findEmail",
                        "in": "query",
                        "required": false,
                        "description": "Find verified email. Default: false",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "verifyEmail",
                        "in": "query",
                        "required": false,
                        "description": "Verify existing email (debounce). Default: false",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "findPhone",
                        "in": "query",
                        "required": false,
                        "description": "Find phone number. Default: false",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "description": "First name of the lead"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "description": "Last name of the lead"
                                    },
                                    "companyName": {
                                        "type": "string",
                                        "description": "Company name"
                                    },
                                    "jobTitle": {
                                        "type": "string",
                                        "description": "Job title"
                                    },
                                    "linkedinUrl": {
                                        "type": "string",
                                        "description": "LinkedIn profile URL"
                                    },
                                    "picture": {
                                        "type": "string",
                                        "description": "Profile picture URL"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "description": "Phone number"
                                    },
                                    "companyDomain": {
                                        "type": "string",
                                        "description": "Company domain"
                                    },
                                    "icebreaker": {
                                        "type": "string",
                                        "description": "Personalized icebreaker message"
                                    },
                                    "contactOwner": {
                                        "type": "string",
                                        "description": "Contact owner ID"
                                    }
                                }
                            },
                            "example": {
                                "firstName": "John",
                                "lastName": "Doe",
                                "companyName": "lempire",
                                "jobTitle": "Developer",
                                "linkedinUrl": "https://www.linkedin.com/in/johndoe",
                                "phone": "+33 123456789"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                    "campaignName": "Insights Outreach 2024",
                                    "email": "john.doe@domain.com",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "_id": "lea_7kMNQwplxvvD2hf5z",
                                    "isPaused": false,
                                    "leadUrl": "https://api.lemlist.com/api/leads/john.doe%40domain.com"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: No API key provided / Bad team",
                        "content": {
                            "text/plain": {
                                "example": "No API key provided"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "403": {
                        "description": "User linked to this API key is blocked",
                        "content": {
                            "text/plain": {
                                "example": "User linked to this API key is blocked"
                            }
                        }
                    },
                    "404": {
                        "description": "Possible errors: No user found for this API key / Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "No user found for this API key"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Unsubscribe Lead from Campaign",
                "tags": [
                    "Leads"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "email": "john.doe@domain.com",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "_id": "lea_7kMNQwplxvvD2hf5z",
                                    "isPaused": false,
                                    "campaignId": "cam_A1B2C3D4E5F6G7H8I9"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/campaigns/{campaignId}/leads/{leadId}": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "leadId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the lead",
                    "example": "lea_7kMNQwplxvvD2hf5z",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "patch": {
                "summary": "Update Lead",
                "tags": [
                    "Leads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "companyName": {
                                        "type": "string"
                                    },
                                    "jobTitle": {
                                        "type": "string"
                                    },
                                    "preferredContactMethod": {
                                        "type": "string",
                                        "description": "Preferred contact method (email, linkedIn)"
                                    }
                                }
                            },
                            "example": {
                                "preferredContactMethod": "email"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "campaignId": "cam_A1B2C3D4E5F6G7H8I9",
                                    "campaignName": "Insights Outreach 2024",
                                    "email": "john.doe@domain.com",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "preferredContactMethod": "linkedIn",
                                    "_id": "lea_7kMNQwplxvvD2hf5z",
                                    "isPaused": false,
                                    "leadUrl": "https://api.lemlist.com/api/leads/john.doe%40domain.com"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    },
                    "500": {
                        "description": "Lead in graveyard"
                    }
                },
                "parameters": []
            },
            "delete": {
                "summary": "Delete Lead",
                "tags": [
                    "Leads"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "description": "Force the deletion of the lead. Use 'remove' to force delete.",
                        "example": "remove",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "email": "john.doe@domain.com",
                                    "_id": "lea_7kMNQwplxvvD2hf5z",
                                    "campaignId": "cam_A1B2C3D4E5F6G7H8I9"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    }
                }
            }
        },
        "/leads/start/{leadId}": {
            "parameters": [
                {
                    "name": "leadId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the lead",
                    "example": "lea_7kMNQwplxvvD2hf5z",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Resume Paused Lead",
                "tags": [
                    "Leads"
                ],
                "responses": {
                    "200": {
                        "description": "Success - all campaigns",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                },
                                "example": [
                                    {
                                        "email": "john.doe@domain.com",
                                        "firstName": "John",
                                        "lastName": "Doe",
                                        "_id": "lea_7kMNQwplxvvD2hf5z",
                                        "isPaused": false,
                                        "campaignId": "cam_A1B2C3D4E5F6G7H8I9"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/leads/pause/{leadId}": {
            "parameters": [
                {
                    "name": "leadId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the lead",
                    "example": "lea_7kMNQwplxvvD2hf5z",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Pause Lead",
                "tags": [
                    "Leads"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "query",
                        "required": false,
                        "description": "ID of the campaign. If provided, pauses the lead only in that campaign.",
                        "example": "cam_A1B2C3D4E5F6G7H8I9",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - all campaigns",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                },
                                "example": [
                                    {
                                        "email": "john.doe@domain.com",
                                        "firstName": "John",
                                        "lastName": "Doe",
                                        "_id": "lea_7kMNQwplxvvD2hf5z",
                                        "isPaused": true,
                                        "campaignId": "cam_A1B2C3D4E5F6G7H8I9"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/leads/interested/{leadIdOrEmail}": {
            "parameters": [
                {
                    "name": "leadIdOrEmail",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier or email of the lead",
                    "example": "lea_7kMNQwplxvvD2hf5z",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Mark Lead as Interested",
                "tags": [
                    "Leads"
                ],
                "description": "Mark a lead as interested across all campaigns",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                },
                                "example": [
                                    {
                                        "email": "john.doe@domain.com",
                                        "firstName": "John",
                                        "_id": "lea_7kMNQwplxvvD2hf5z",
                                        "campaignId": "cam_A1B2C3D4E5F6G7H8I9"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/leads/notinterested/{leadIdOrEmail}": {
            "parameters": [
                {
                    "name": "leadIdOrEmail",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier or email of the lead",
                    "example": "lea_7kMNQwplxvvD2hf5z",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Mark Lead as Not Interested",
                "tags": [
                    "Leads"
                ],
                "description": "Mark a lead as not interested across all campaigns",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                },
                                "example": [
                                    {
                                        "email": "john.doe@domain.com",
                                        "_id": "lea_7kMNQwplxvvD2hf5z",
                                        "campaignId": "cam_A1B2C3D4E5F6G7H8I9"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/campaigns/{campaignId}/leads/{leadIdOrEmail}/interested": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "leadIdOrEmail",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier or email of the lead",
                    "example": "lea_7kMNQwplxvvD2hf5z",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Mark Lead as Interested in Campaign",
                "tags": [
                    "Leads"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "email": "john.doe@domain.com",
                                    "_id": "lea_7kMNQwplxvvD2hf5z",
                                    "campaignId": "cam_A1B2C3D4E5F6G7H8I9"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Possible errors: Campaign not found / Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/campaigns/{campaignId}/leads/{leadIdOrEmail}/notinterested": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "leadIdOrEmail",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier or email of the lead",
                    "example": "lea_7kMNQwplxvvD2hf5z",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Mark Lead as Not Interested in Campaign",
                "tags": [
                    "Leads"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Possible errors: Campaign not found / Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/leads/{leadId}/variables": {
            "parameters": [
                {
                    "name": "leadId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the lead",
                    "example": "lea_7kMNQwplxvvD2hf5z",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Add Lead Variables",
                "tags": [
                    "Leads"
                ],
                "description": "Add custom variables to a lead. Variables are passed as query parameters.",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "description": "Example variable - any custom variable name can be used",
                        "example": "Lemlist",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Lead Variables",
                "tags": [
                    "Leads"
                ],
                "description": "Update custom variables for a lead. Variables are passed as query parameters.",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "description": "Example variable - any custom variable name can be used",
                        "example": "Lemlist",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Lead Variables",
                "tags": [
                    "Leads"
                ],
                "description": "Delete custom variables from a lead. Variables are passed as query parameters.",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "description": "Example variable - any custom variable name to delete",
                        "example": "Lemlist",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    }
                }
            }
        },
        "/leads/audio": {
            "post": {
                "summary": "Upload Audio for Voice Message Step",
                "tags": [
                    "Leads"
                ],
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "query",
                        "required": true,
                        "description": "The unique identifier of the lead",
                        "example": "lea_7kMNQwplxvvD2hf5z",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stepId",
                        "in": "query",
                        "required": true,
                        "description": "The unique identifier of the voice message step",
                        "example": "stp_ZrcCuR6cwi5qFnQQQ",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Audio file to upload"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "ok": true,
                                    "status": {
                                        "url": "https://lemlist-dev.s3.eu-west-1.amazonaws.com/fil_bECTszeFQMneA43D2.m4a",
                                        "teamId": "tea_KWvTf2CypcBqG4QG2",
                                        "campaignId": "cam_B3MJETF3YxvGaR4dC",
                                        "leadId": "lea_CgfmTDCPC43gwPgYk",
                                        "fileName": "file2"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Invalid audio file",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/crm/filters": {
            "get": {
                "summary": "Get CRM Filters",
                "tags": [
                    "Leads"
                ],
                "parameters": [
                    {
                        "name": "crm",
                        "in": "query",
                        "required": true,
                        "description": "CRM name (e.g., hubspot, salesforce, pipedrive)",
                        "example": "hubspot",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "description": "Connected user ID",
                        "example": "usr_h47tiJr87Zn7XtQHi",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "description": "Filter type for Salesforce. Can be: lead, contact, or report.",
                        "example": "lead",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "lead",
                                "contact",
                                "report"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                },
                                "example": [
                                    {
                                        "id": 16,
                                        "name": "Filter 1"
                                    },
                                    {
                                        "id": 17,
                                        "name": "Filter 2"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/campaigns/{campaignId}/leads/import": {
            "parameters": [
                {
                    "name": "campaignId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the campaign",
                    "example": "cam_A1B2C3D4E5F6G7H8I9",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Import Leads from CRM",
                "tags": [
                    "Leads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "crm": {
                                        "type": "string",
                                        "description": "CRM name"
                                    },
                                    "userId": {
                                        "type": "string",
                                        "description": "User ID with CRM connection"
                                    },
                                    "filterId": {
                                        "type": "string",
                                        "description": "Filter ID from the CRM"
                                    },
                                    "filterType": {
                                        "type": "string",
                                        "description": "Type of filter (for Salesforce)"
                                    },
                                    "deduplicate": {
                                        "type": "boolean",
                                        "description": "Whether to deduplicate leads"
                                    }
                                },
                                "required": [
                                    "crm",
                                    "userId",
                                    "filterId"
                                ]
                            },
                            "example": {
                                "crm": "hubspot",
                                "userId": "usr_h47tiJr87Zn7XtQHi",
                                "filterId": "16",
                                "deduplicate": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "parameters": []
            }
        },
        "/database/filters": {
            "get": {
                "summary": "Get Database Filters",
                "tags": [
                    "People Database"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                },
                                "example": [
                                    {
                                        "filterId": "country",
                                        "description": "Filter by country",
                                        "mode": [
                                            "leads",
                                            "companies"
                                        ],
                                        "type": "text",
                                        "helper": "Use free text search"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/database/people": {
            "post": {
                "summary": "Search People Database",
                "tags": [
                    "People Database"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "filterId": {
                                                    "type": "string",
                                                    "description": "Filter identifier"
                                                },
                                                "in": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "Values to include"
                                                },
                                                "out": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "Values to exclude"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "filters": [
                                    {
                                        "filterId": "country",
                                        "in": [
                                            "France"
                                        ],
                                        "out": []
                                    }
                                ],
                                "page": 1
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "results": [],
                                    "total": 18540918,
                                    "took": 903,
                                    "page": 1,
                                    "size": 100,
                                    "search": "lsh_ENeC6oBSdwSArkywL",
                                    "limitation": 999,
                                    "team": "tea_MtScZ2GexXzHXRdTr"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Parameter filters is invalid",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/schema/people": {
            "get": {
                "summary": "Get People Schema",
                "tags": [
                    "People Database"
                ],
                "description": "Get the schema definition for people in the database",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "schema": {
                                        "lead_id": 231488528,
                                        "full_name": "John Doe",
                                        "email": "john.doe@example.com",
                                        "title": "Senior Machine Learning Engineer",
                                        "company_name": "TechCorp Inc.",
                                        "location": "San Francisco Bay Area"
                                    },
                                    "version": 18
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/database/companies": {
            "post": {
                "summary": "Search Companies Database",
                "tags": [
                    "People Database"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "filterId": {
                                                    "type": "string"
                                                },
                                                "in": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "out": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "page": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "example": {
                                "filters": [
                                    {
                                        "filterId": "currentCompanyTechnologies",
                                        "in": [
                                            "Postman"
                                        ],
                                        "out": []
                                    }
                                ],
                                "page": 1
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "results": [],
                                    "total": 18540918,
                                    "page": 1,
                                    "size": 100
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Parameter filters is invalid",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/schema/companies": {
            "get": {
                "summary": "Get Companies Schema",
                "tags": [
                    "People Database"
                ],
                "description": "Get the schema definition for companies in the database",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "schema": {
                                        "company_id": 7842391,
                                        "company_name": "InnovateTech Solutions",
                                        "company_website_url": "https://www.innovatetech.io",
                                        "company_employee_count": 245,
                                        "company_industry": "Information Technology"
                                    },
                                    "version": 2
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/tasks": {
            "get": {
                "summary": "Get Many Tasks",
                "tags": [
                    "Tasks"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "results": [
                                        {
                                            "_id": "opp_vDuwoqRopZ4ygeApq",
                                            "type": "phone",
                                            "leadId": "lea_4ZnGoytR5uoZs7Bod",
                                            "campaignId": "cam_fX7SwMGyooxFLeeiM",
                                            "contactId": "ctc_iSW6pi7AFnufvhgeS",
                                            "dueDate": "2025-02-13T10:02:35.209Z",
                                            "userId": "usr_6Y58qbtsYv2rCHQiJ"
                                        }
                                    ],
                                    "page": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    }
                },
                "parameters": []
            },
            "post": {
                "summary": "Create Task",
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "leadId": {
                                        "type": "string",
                                        "description": "The unique identifier of the lead"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Task type (e.g., phone, email, manual)"
                                    },
                                    "dueDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Due date for the task"
                                    }
                                },
                                "required": [
                                    "leadId"
                                ]
                            },
                            "example": {
                                "leadId": "lea_sMsXBnXd7mG2XdxFR",
                                "type": "phone"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Bad method",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            },
            "patch": {
                "summary": "Update Task",
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "taskId": {
                                        "type": "string",
                                        "description": "The unique identifier of the task"
                                    },
                                    "done": {
                                        "type": "boolean",
                                        "description": "Mark task as done"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Bad method",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/tasks/ignore": {
            "post": {
                "summary": "Ignore Tasks",
                "tags": [
                    "Tasks"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "taskIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Array of task IDs to ignore"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Error message from opportunitiesDone",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/inbox": {
            "get": {
                "summary": "Get Many Inbox Conversations",
                "tags": [
                    "Inbox"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The page number to retrieve",
                        "example": "1",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "The maximum number of records to return",
                        "example": "2",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "description": "Filter by user ID"
                                    }
                                }
                            },
                            "example": {
                                "userId": "usr_vvv9vehz2Ghvgbedv"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "data": [
                                        {
                                            "_id": "ibx_rvuPJaMgtYHKxaLbZ",
                                            "lastActivityAt": "2025-03-27T13:28:53.499Z",
                                            "contactId": "ctc_yHXD3NWjPg7Z9MuWZ",
                                            "haveReplies": true,
                                            "lastRepliedAt": "2025-03-25T14:18:05.000Z"
                                        }
                                    ],
                                    "pagination": {
                                        "totalItems": 1,
                                        "currentPage": 1,
                                        "nextPage": null,
                                        "previousPage": null,
                                        "perPage": 10,
                                        "totalPages": 1
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / User ID is required / User not in team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/inbox/{contactId}": {
            "parameters": [
                {
                    "name": "contactId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the contact",
                    "example": "ctc_yHXD3NWjPg7Z9MuWZ",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Contact Messages",
                "tags": [
                    "Inbox"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": false,
                        "description": "ID of the user viewing the conversation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "The maximum number of records to return",
                        "example": "10",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "description": "Number of items to skip. Default: 0",
                        "example": "1",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "markAsRead",
                        "in": "query",
                        "required": false,
                        "description": "When true, marks the conversation as read. Default: false",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "data": [
                                        {
                                            "_id": "act_dPHwKSRHeNjx8ZLMg",
                                            "type": "emailsSent",
                                            "createdAt": "2025-03-27T13:28:53.499Z",
                                            "leadEmail": "chafikgharbi1@gmail.com",
                                            "subject": "Test API",
                                            "message": "<html>Test API content</html>"
                                        }
                                    ],
                                    "pagination": {
                                        "totalItems": 22,
                                        "currentPage": 1,
                                        "nextPage": 2,
                                        "perPage": 1,
                                        "totalPages": 22
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Invalid contactId / Invalid userId / User not in team / User ID is required to mark as read",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/inbox/email": {
            "post": {
                "summary": "Send Email",
                "tags": [
                    "Inbox"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sendUserId": {
                                        "type": "string",
                                        "description": "Sender user ID"
                                    },
                                    "sendUserEmail": {
                                        "type": "string",
                                        "description": "Sender email address"
                                    },
                                    "sendUserMailboxId": {
                                        "type": "string",
                                        "description": "Sender mailbox ID"
                                    },
                                    "contactId": {
                                        "type": "string",
                                        "description": "Contact ID"
                                    },
                                    "leadId": {
                                        "type": "string",
                                        "description": "Lead ID"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "description": "Email subject"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "Email message (HTML)"
                                    },
                                    "cc": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "CC email addresses"
                                    }
                                },
                                "required": [
                                    "sendUserId",
                                    "sendUserEmail",
                                    "sendUserMailboxId",
                                    "contactId",
                                    "leadId",
                                    "subject",
                                    "message"
                                ]
                            },
                            "example": {
                                "sendUserId": "usr_h47tiJr87Zn7XtQHi",
                                "sendUserEmail": "john@example.com",
                                "sendUserMailboxId": "usm_CE8QtNtgMjTHjfaL8",
                                "contactId": "ctc_yHXD3NWjPg7Z9MuWZ",
                                "leadId": "lea_7HAh3odqPKamkBTv9",
                                "subject": "Follow up",
                                "message": "<p>Hello,</p><p>Following up on our conversation...</p>",
                                "cc": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Invalid sendUserId / Invalid sendUserEmail / Invalid sendUserMailboxId / contactId or leadId is required / Invalid leadId / Lead not found / Failed to send email",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/inbox/linkedin": {
            "post": {
                "summary": "Send LinkedIn Message",
                "tags": [
                    "Inbox"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sendUserId": {
                                        "type": "string",
                                        "description": "Sender user ID"
                                    },
                                    "leadId": {
                                        "type": "string",
                                        "description": "Lead ID"
                                    },
                                    "contactId": {
                                        "type": "string",
                                        "description": "Contact ID"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "Message content"
                                    }
                                },
                                "required": [
                                    "sendUserId",
                                    "leadId",
                                    "contactId",
                                    "message"
                                ]
                            },
                            "example": {
                                "sendUserId": "usr_h47tiJr87Zn7XtQHi",
                                "leadId": "lea_7HAh3odqPKamkBTv9",
                                "contactId": "ctc_yHXD3NWjPg7Z9MuWZ",
                                "message": "Hi, I wanted to follow up..."
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Invalid sendUserId / contactId or leadId is required / Invalid leadId / Lead not found / Invalid contactId / Failed to send message",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/inbox/whatsapp": {
            "post": {
                "summary": "Send WhatsApp Message",
                "tags": [
                    "Inbox"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sendUserId": {
                                        "type": "string",
                                        "description": "Sender user ID"
                                    },
                                    "sendUserWhatsappAccountId": {
                                        "type": "string",
                                        "description": "WhatsApp account ID"
                                    },
                                    "contactId": {
                                        "type": "string",
                                        "description": "Contact ID"
                                    },
                                    "leadId": {
                                        "type": "string",
                                        "description": "Lead ID"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "Message content"
                                    }
                                },
                                "required": [
                                    "sendUserId",
                                    "sendUserWhatsappAccountId",
                                    "contactId",
                                    "leadId",
                                    "message"
                                ]
                            },
                            "example": {
                                "sendUserId": "usr_h47tiJr87Zn7XtQHi",
                                "sendUserWhatsappAccountId": "wha_ABC123",
                                "contactId": "ctc_yHXD3NWjPg7Z9MuWZ",
                                "leadId": "lea_7HAh3odqPKamkBTv9",
                                "message": "Hi, following up on our conversation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Invalid sendUserId / Invalid sendUserWhatsappAccountId / contactId or leadId is required / Invalid leadId / Lead not found / Failed to send whatsapp message",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/contacts": {
            "get": {
                "summary": "Get Many Contacts",
                "tags": [
                    "Contacts"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                },
                                "example": [
                                    {
                                        "_id": "ctc_Ri5gMtaeDGufRQ3M2",
                                        "teamId": "tea_8GdMrBZ3gf4p2rj2h",
                                        "email": "chafik@lempire.co",
                                        "fullName": "Chafik Gharbi",
                                        "fields": {
                                            "firstName": "Chafik",
                                            "lastName": "Gharbi",
                                            "company": "lempire"
                                        },
                                        "campaigns": [
                                            {
                                                "campaignId": "cam_C7BW5Z5ycSiRRWef6",
                                                "campaignState": "running",
                                                "leadState": "review"
                                            }
                                        ],
                                        "ownerId": "usr_h47tiJr87Zn7XtQHi",
                                        "createdAt": "2025-07-18T10:03:41.612Z"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / idsOrEmails not found in query",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/contacts/{idOrEmail}": {
            "parameters": [
                {
                    "name": "idOrEmail",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier or email of the contact",
                    "example": "ctc_Ri5gMtaeDGufRQ3M2",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Contact",
                "tags": [
                    "Contacts"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "_id": "ctc_Ri5gMtaeDGufRQ3M2",
                                    "teamId": "tea_8GdMrBZ3gf4p2rj2h",
                                    "email": "chafik@lempire.co",
                                    "fullName": "Chafik Gharbi",
                                    "fields": {
                                        "firstName": "Chafik",
                                        "lastName": "Gharbi",
                                        "company": "lempire"
                                    },
                                    "campaigns": [
                                        {
                                            "campaignId": "cam_C7BW5Z5ycSiRRWef6",
                                            "campaignState": "running",
                                            "leadState": "review"
                                        }
                                    ],
                                    "ownerId": "usr_h47tiJr87Zn7XtQHi",
                                    "createdAt": "2025-07-18T10:03:41.612Z"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/lemwarm/{userMailboxId}/start": {
            "parameters": [
                {
                    "name": "userMailboxId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the user mailbox",
                    "example": "usm_bsdepN6jb8zftK9Ns",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Start lemwarm",
                "tags": [
                    "lemwarm"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Error from warmupToggle (invalid-usermailbox, invalid-sender, mailbox-deleted, emailWarmedByAnotherAccount, billing-error, etc.)",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/lemwarm/{userMailboxId}/pause": {
            "parameters": [
                {
                    "name": "userMailboxId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the user mailbox",
                    "example": "usm_bsdepN6jb8zftK9Ns",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Pause lemwarm",
                "tags": [
                    "lemwarm"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Error from warmupToggle",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/lemwarm/{userMailboxId}/settings": {
            "parameters": [
                {
                    "name": "userMailboxId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the user mailbox",
                    "example": "usm_bsdepN6jb8zftK9Ns",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get lemwarm Settings",
                "tags": [
                    "lemwarm"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "example": {
                                    "warmEmailRampup": 5,
                                    "warmEmailMax": 5,
                                    "activeAt": "2025-04-10T07:38:31.530Z",
                                    "deliverability": {
                                        "score": 70,
                                        "lastAt": "2025-04-09T13:34:43.998Z"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Error retrieving settings",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            },
            "patch": {
                "summary": "Update lemwarm Settings",
                "tags": [
                    "lemwarm"
                ],
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "warmEmailMax": {
                                        "type": "integer",
                                        "description": "Maximum number of warm emails per day"
                                    },
                                    "warmEmailRampup": {
                                        "type": "integer",
                                        "description": "Daily increase in warm email count"
                                    }
                                }
                            },
                            "example": {
                                "warmEmailMax": 30,
                                "warmEmailRampup": 5
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "ok": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Error updating settings (warmEmailMax, warmEmailRampup)",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "summary": "Get Many Companies",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number to retrieve",
                        "example": "1",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "description": "The field by which to sort. Currently, only 'createdAt' is supported.",
                        "example": "createdAt",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "createdAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "description": "The sort direction. Use 'desc' for descending order; any other value (or omission) will sort in ascending order.",
                        "example": "desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "description": "Search by company name (case insensitive)",
                        "example": "lemlist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "description": "Returns selected fields. Returns all fields if empty. Each field is separated by a comma (e.g., '_id,fields.name,domain')",
                        "example": "_id,fields.name,domain",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Number of companies to retrieve. Default: 100. Maximum: 100",
                        "example": "10",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "cmp_ABC123",
                                        "fields": {
                                            "name": "lemlist"
                                        },
                                        "domain": "lemlist.com"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/companies/{companyId}/notes": {
            "parameters": [
                {
                    "name": "companyId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the company",
                    "example": "cmp_ABC123",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Company Notes",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Number of notes to retrieve. Default: 100. Maximum: 100",
                        "example": "2",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "Page number to retrieve",
                        "example": "1",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "description": "The field by which to sort. Currently, only 'createdAt' is supported.",
                        "example": "createdAt",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "createdAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "description": "The sort direction. Use 'desc' for descending order; any other value (or omission) will sort in ascending order.",
                        "example": "desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "not_XYZ789",
                                        "note": "Great company to work with",
                                        "createdAt": "2025-01-15T10:00:00.000Z",
                                        "createdBy": "usr_h47tiJr87Zn7XtQHi"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "content": {
                            "text/plain": {
                                "example": "Company not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            },
            "post": {
                "summary": "Create Company Note",
                "tags": [
                    "Companies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "note": {
                                        "type": "string",
                                        "description": "The note content"
                                    }
                                },
                                "required": [
                                    "note"
                                ]
                            },
                            "example": {
                                "note": "Note created from the API!"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "not_XYZ789",
                                    "note": "Note created from the API!",
                                    "createdAt": "2025-01-15T10:00:00.000Z",
                                    "createdBy": "usr_h47tiJr87Zn7XtQHi"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "content": {
                            "text/plain": {
                                "example": "Company not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                },
                "parameters": []
            }
        },
        "/activities": {
            "get": {
                "summary": "Get Many Activities",
                "tags": [
                    "Activities"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "description": "Filter by activity type (e.g., paused)",
                        "example": "paused",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "campaignId",
                        "in": "query",
                        "required": false,
                        "description": "Filter by campaign ID",
                        "example": "cam_123",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isFirst",
                        "in": "query",
                        "required": false,
                        "description": "Filter for first activity",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "description": "Offset for pagination",
                        "example": "0",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Number of activities to retrieve. Default: 100. Maximum: 100",
                        "example": "2",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "leadId",
                        "in": "query",
                        "required": false,
                        "description": "Filter by lead ID",
                        "example": "lea_123",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "description": "API version. Default: v1",
                        "example": "v2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "example": [
                                    {
                                        "_id": "act_xXR99r2dyRedXb8pc",
                                        "type": "emailsSent",
                                        "createdAt": "2024-07-22T15:25:13.610Z"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/stats/campaigns/{campaignId}": {
            "get": {
                "summary": "Get Campaign Stats",
                "tags": [
                    "Campaigns"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "required": true,
                        "description": "Unique campaign ID",
                        "example": "cam_123",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": false,
                        "description": "Start date (ISO 8601)",
                        "example": "2024-01-07T22:00:00.000Z",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": false,
                        "description": "End date (ISO 8601)",
                        "example": "2024-07-10T21:59:59.999Z",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "required": false,
                        "description": "Timezone for stats",
                        "example": "Europe/Paris",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "description": "API version. Use 'v2' to access the enhanced stats endpoint with additional filtering options.",
                        "example": "v2",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "v2"
                            ]
                        }
                    },
                    {
                        "name": "channels",
                        "in": "query",
                        "required": false,
                        "description": "Filter stats by communication channels. Provide as a comma-separated list or array. Valid values: 'email', 'linkedin', 'others'. Only works with version=v2.",
                        "example": "email,linkedin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ABSelected",
                        "in": "query",
                        "required": false,
                        "description": "Filter stats by A/B test variant. Valid values: 'A' or 'B'. Only works with version=v2.",
                        "example": "A",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "A",
                                "B"
                            ]
                        }
                    },
                    {
                        "name": "sendUser",
                        "in": "query",
                        "required": false,
                        "description": "Filter stats by send user. Format: '<sendUserId>|<sendUserEmail>'. Only works with version=v2.",
                        "example": "usr_abc123|john@example.com",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "leadTotal": {
                                            "type": "integer",
                                            "description": "Total number of leads"
                                        },
                                        "sentCount": {
                                            "type": "integer",
                                            "description": "Total number of messages sent"
                                        },
                                        "emailsSent": {
                                            "type": "integer",
                                            "description": "Number of emails sent (v2 only)"
                                        },
                                        "emailsOpened": {
                                            "type": "integer",
                                            "description": "Number of emails opened (v2 only)"
                                        },
                                        "emailsClicked": {
                                            "type": "integer",
                                            "description": "Number of emails clicked (v2 only)"
                                        },
                                        "emailsReplied": {
                                            "type": "integer",
                                            "description": "Number of email replies (v2 only)"
                                        },
                                        "linkedinSent": {
                                            "type": "integer",
                                            "description": "Number of LinkedIn messages sent (v2 only)"
                                        },
                                        "linkedinOpened": {
                                            "type": "integer",
                                            "description": "Number of LinkedIn messages opened (v2 only)"
                                        },
                                        "linkedinReplied": {
                                            "type": "integer",
                                            "description": "Number of LinkedIn replies (v2 only)"
                                        },
                                        "interested": {
                                            "type": "integer",
                                            "description": "Number of interested leads (v2 only)"
                                        },
                                        "notInterested": {
                                            "type": "integer",
                                            "description": "Number of not interested leads (v2 only)"
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "leadTotal": 150,
                                        "sentCount": 320,
                                        "emailsSent": 250,
                                        "emailsOpened": 180,
                                        "emailsClicked": 45,
                                        "emailsReplied": 32,
                                        "linkedinSent": 70,
                                        "linkedinOpened": 55,
                                        "linkedinReplied": 12,
                                        "interested": 28,
                                        "notInterested": 5
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "content": {
                            "text/plain": {
                                "examples": {
                                    "badTeam": {
                                        "summary": "Bad team",
                                        "value": "Bad team"
                                    },
                                    "missingDates": {
                                        "summary": "Missing dates (v2)",
                                        "value": "Bad params: startDate and endDate are required"
                                    },
                                    "invalidChannels": {
                                        "summary": "Invalid channels format",
                                        "value": "Bad params: channels must be a valid array"
                                    },
                                    "invalidChannelValues": {
                                        "summary": "Invalid channel values",
                                        "value": "Bad params: channels must be empty or contain \"others\", \"email\" or \"linkedin\""
                                    },
                                    "invalidAB": {
                                        "summary": "Invalid A/B selection",
                                        "value": "Bad params: ABSelected must be A or B"
                                    },
                                    "invalidSendUserFormat": {
                                        "summary": "Invalid send user format",
                                        "value": "Bad param format: sendUser must be formatted as follow: <sendUserId>|<sendUserEmail>"
                                    },
                                    "invalidSendUser": {
                                        "summary": "Send user email mismatch",
                                        "value": "Bad params: the send user email is not related to the send user id"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Campaign not found",
                        "content": {
                            "text/plain": {
                                "example": "Campaign not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "content": {
                            "text/plain": {
                                "example": "Bad method"
                            }
                        }
                    }
                }
            }
        },
        "/unsubscribes": {
            "get": {
                "summary": "Get Many Unsubscribes",
                "tags": [
                    "Unsubscribes"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "description": "Offset for pagination",
                        "example": "0",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "description": "Number of unsubscribes to retrieve. Default: 100",
                        "example": "5",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "example": [
                                    {
                                        "_id": "uns_Y9Lf5R2mpNWs8x0cz",
                                        "createdAt": "2023-06-12T10:45:21.367Z",
                                        "value": "john.doe@example.com",
                                        "source": "user"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "No API key provided",
                        "content": {
                            "text/plain": {
                                "example": "No API key provided"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "403": {
                        "description": "User linked to this API key is blocked",
                        "content": {
                            "text/plain": {
                                "example": "User linked to this API key is blocked"
                            }
                        }
                    },
                    "404": {
                        "description": "No user found for this API key",
                        "content": {
                            "text/plain": {
                                "example": "No user found for this API key"
                            }
                        }
                    }
                }
            }
        },
        "/unsubscribes/export": {
            "get": {
                "summary": "Export Unsubscribes",
                "tags": [
                    "Unsubscribes"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/unsubscribes/{email}": {
            "get": {
                "summary": "Get Unsubscribe by Email",
                "tags": [
                    "Unsubscribes"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "description": "Email address to check unsubscribe status",
                        "example": "john.doe@domain.com",
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "_id": "uns_Y9Lf5R2mpNWs8x0cz",
                                    "createdAt": "2023-06-12T10:45:21.367Z",
                                    "value": "john.doe@example.com",
                                    "source": "user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No API key provided",
                        "content": {
                            "text/plain": {
                                "example": "No API key provided"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "403": {
                        "description": "User linked to this API key is blocked",
                        "content": {
                            "text/plain": {
                                "example": "User linked to this API key is blocked"
                            }
                        }
                    },
                    "404": {
                        "description": "Possible errors: No user found for this API key / Unsubscriber not found",
                        "content": {
                            "text/plain": {
                                "example": "No user found for this API key"
                            }
                        }
                    },
                    "500": {
                        "description": "Possible errors: Invalid value / Invalid email address or domain / Invalid email address or domain. Domains must start with @"
                    }
                }
            },
            "post": {
                "summary": "Add Unsubscribe Email or Domain",
                "tags": [
                    "Unsubscribes"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Unsubscribe not found",
                        "content": {
                            "text/plain": {
                                "example": "Unsubscribe not found"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Unsubscribe Email",
                "tags": [
                    "Unsubscribes"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Unsubscribe not found",
                        "content": {
                            "text/plain": {
                                "example": "Unsubscribe not found"
                            }
                        }
                    }
                }
            }
        },
        "/hooks": {
            "get": {
                "summary": "Get Many Webhooks",
                "tags": [
                    "Webhooks"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    }
                                },
                                "example": [
                                    {
                                        "_id": "hoo_3JKlmnOp7qrStuvWx",
                                        "targetUrl": "https://hooks.zapier.com/hooks/standard/*your-webhook-id*/",
                                        "createdAt": "2018-08-09T07:45:56.789Z"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Webhook not found",
                        "content": {
                            "text/plain": {
                                "example": "Webhook not found"
                            }
                        }
                    }
                },
                "parameters": []
            },
            "post": {
                "summary": "Add Webhook",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "query",
                        "required": false,
                        "description": "Webhook for specific campaign",
                        "example": "cam_123",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isFirst",
                        "in": "query",
                        "required": false,
                        "description": "Webhook for first activity only",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "zapId",
                        "in": "query",
                        "required": false,
                        "description": "Zapier ID",
                        "example": "123456789",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Webhook not found",
                        "content": {
                            "text/plain": {
                                "example": "Webhook not found"
                            }
                        }
                    }
                }
            }
        },
        "/hooks/{hookId}": {
            "delete": {
                "summary": "Delete Webhook",
                "tags": [
                    "Webhooks"
                ],
                "parameters": [
                    {
                        "name": "hookId",
                        "in": "path",
                        "required": true,
                        "description": "Unique webhook ID",
                        "example": "hoo_123",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Webhook not found",
                        "content": {
                            "text/plain": {
                                "example": "Webhook not found"
                            }
                        }
                    }
                }
            }
        },
        "/enrich/{enrichId}": {
            "get": {
                "summary": "Get Enrichment Result",
                "tags": [
                    "Enrich"
                ],
                "parameters": [
                    {
                        "name": "enrichId",
                        "in": "path",
                        "required": true,
                        "description": "Unique enrichment ID",
                        "example": "enr_123",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "In progress"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Enrichment not found",
                        "content": {
                            "text/plain": {
                                "example": "Enrichment not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/enrich": {
            "post": {
                "summary": "Enrich Data",
                "tags": [
                    "Enrich"
                ],
                "parameters": [
                    {
                        "name": "findEmail",
                        "in": "query",
                        "required": false,
                        "description": "Find verified email",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "verifyEmail",
                        "in": "query",
                        "required": false,
                        "description": "Verify existing email",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "linkedinEnrichment",
                        "in": "query",
                        "required": false,
                        "description": "Run LinkedIn enrichment",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "description": "Email address",
                        "example": "john.doe@fake.com",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "linkedinUrl",
                        "in": "query",
                        "required": false,
                        "description": "LinkedIn URL",
                        "example": "https://www.linkedin.com/in/john-doe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "required": false,
                        "description": "First name",
                        "example": "John",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastName",
                        "in": "query",
                        "required": false,
                        "description": "Last name",
                        "example": "Doe",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyDomain",
                        "in": "query",
                        "required": false,
                        "description": "Company domain",
                        "example": "fakecompany.com",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyName",
                        "in": "query",
                        "required": false,
                        "description": "Company name",
                        "example": "Fake company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "findPhone",
                        "in": "query",
                        "required": false,
                        "description": "Find phone number",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "webhookUrl",
                        "in": "query",
                        "required": false,
                        "description": "Webhook URL for enrichment events",
                        "example": "https://webhook.site/*your-webhook-id*/",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Possible errors: Bad team / Bad request / No enrichment requested (findEmail, findPhone, linkedinEnrichment or verifyEmail required) / Invalid webhookUrl",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "The authentication you supplied is incorrect",
                        "content": {
                            "text/plain": {
                                "example": "The authentication you supplied is incorrect"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        },
        "/leads/{leadId}/enrich": {
            "post": {
                "summary": "Enrich Lead",
                "tags": [
                    "Enrich"
                ],
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "path",
                        "required": true,
                        "description": "Unique lead ID",
                        "example": "lea_123",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "findEmail",
                        "in": "query",
                        "required": false,
                        "description": "Search email address in another campaign",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "verifyEmail",
                        "in": "query",
                        "required": false,
                        "description": "Find verified email",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "linkedinEnrichment",
                        "in": "query",
                        "required": false,
                        "description": "Run LinkedIn enrichment",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "findPhone",
                        "in": "query",
                        "required": false,
                        "description": "Find phone number",
                        "example": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "webhookUrl",
                        "in": "query",
                        "required": false,
                        "description": "Webhook URL for enrichment events",
                        "example": "https://webhook.site/*your-webhook-id*/",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": false,
                        "example": "application/json",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad team",
                        "content": {
                            "text/plain": {
                                "example": "Bad team"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Lead not found",
                        "content": {
                            "text/plain": {
                                "example": "Lead not found"
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    }
                }
            }
        }
    }
}